<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1200" height="662" onload="init(evt)" version="1.1" viewBox="0 0 1200 662"><defs><linearGradient id="background" x1="0" x2="0" y1="0" y2="1"><stop offset="5%" stop-color="#eee"/><stop offset="95%" stop-color="#eeeeb0"/></linearGradient></defs><style type="text/css">text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); } #search, #ignorecase { opacity:0.1; cursor:pointer; } #search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; } #subtitle { text-anchor:middle; font-color:rgb(160,160,160); } #title { text-anchor:middle; font-size:17px} #unzoom { cursor:pointer; } #frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; } .hide { display:none; } .parent { opacity:0.5; }</style><script type="text/ecmascript"><![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]></script><rect width="1200" height="662" x="0" y="0" fill="url(#background)"/><text id="title" x="600" y="24">Flame Graph</text><text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text><text id="search" x="1090" y="24">Search</text><text id="ignorecase" x="1174" y="24">ic</text><g id="frames"><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.4" y="325" fill="#D0461C" rx="2" ry="2"/></g><g><title>std::forward&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="919.2" y="165" fill="#D13425" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;PartExpression*, std::vector&lt;PartExpression, std::allocator&lt;PartExpression&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".3" height="15" x="239.2" y="373" fill="#FB491D" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="318" y="373" fill="#DC0613" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3 samples, 0.06%)</title><rect width=".7" height="15" x="575.6" y="309" fill="#DA3101" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="314.4" y="309" fill="#F33D0D" rx="2" ry="2"/></g><g><title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="288.7" y="277" fill="#F43418" rx="2" ry="2"/></g><g><title>_itoa_word (1 samples, 0.02%)</title><rect width=".2" height="15" x="142.8" y="533" fill="#E61311" rx="2" ry="2"/></g><g><title>std::end&lt;boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="241.7" y="437" fill="#E41135" rx="2" ry="2"/></g><g><title>[unknown] (53 samples, 1.02%)</title><rect width="12" height="15" x="189.3" y="421" fill="#CD4A09" rx="2" ry="2"/></g><g><title>[unknown] (5 samples, 0.10%)</title><rect width="1.2" height="15" x="47.4" y="405" fill="#E6CD16" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="304.8" y="101" fill="#E6E334" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::capacity (1 samples, 0.02%)</title><rect width=".2" height="15" x="680.9" y="213" fill="#CDCC08" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (2 samples, 0.04%)</title><rect width=".4" height="15" x="351.6" y="341" fill="#F04716" rx="2" ry="2"/></g><g><title>FamGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="554" y="309" fill="#DF9223" rx="2" ry="2"/></g><g><title>TriggerParser::doParse (3 samples, 0.06%)</title><rect width=".7" height="15" x="239.2" y="453" fill="#DC7E35" rx="2" ry="2"/></g><g><title>Task::begin (3 samples, 0.06%)</title><rect width=".7" height="15" x="233.8" y="437" fill="#FDC12D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".3" height="15" x="931" y="261" fill="#DF7533" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (133 samples, 2.56%)</title><rect width="30.2" height="15" x="1028.4" y="405" fill="#DCCC0B" rx="2" ry="2"/><text x="1031.4" y="415.5">Pr..</text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087" y="277" fill="#FEC521" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect width=".2" height="15" x="585.6" y="341" fill="#EBDA2D" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcmRKS3_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="244" y="421" fill="#F50308" rx="2" ry="2"/></g><g><title>boost::detail::lexical_converter_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::try_convert (1 samples, 0.02%)</title><rect width=".2" height="15" x="1003.7" y="357" fill="#E3C820" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::pos_infinity (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000.9" y="261" fill="#F8240F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (11 samples, 0.21%)</title><rect width="2.5" height="15" x="875" y="165" fill="#DF7B36" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator+ (20 samples, 0.38%)</title><rect width="4.5" height="15" x="580.6" y="341" fill="#CE341F" rx="2" ry="2"/></g><g><title>ecf::File::backwardSearch (3 samples, 0.06%)</title><rect width=".7" height="15" x="1067.9" y="405" fill="#D7C210" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="671.2" y="165" fill="#DD2100" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (1 samples, 0.02%)</title><rect width=".2" height="15" x="283.5" y="213" fill="#CE1336" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (6 samples, 0.12%)</title><rect width="1.4" height="15" x="1035.2" y="261" fill="#E01C03" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1002.5" y="309" fill="#FE4A2A" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (1 samples, 0.02%)</title><rect width=".3" height="15" x="970.5" y="325" fill="#D77A21" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::erase (4 samples, 0.08%)</title><rect width=".9" height="15" x="998.4" y="357" fill="#FA381C" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="227.4" y="517" fill="#DFD003" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect width=".2" height="15" x="1057.9" y="357" fill="#EB5A0A" rx="2" ry="2"/></g><g><title>Family::begin (6 samples, 0.12%)</title><rect width="1.4" height="15" x="233.3" y="501" fill="#E71E17" rx="2" ry="2"/></g><g><title>Node::parent (1 samples, 0.02%)</title><rect width=".2" height="15" x="264.7" y="229" fill="#E8970B" rx="2" ry="2"/></g><g><title>std::__copy_move_a&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="288.7" y="261" fill="#F5032B" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (2 samples, 0.04%)</title><rect width=".5" height="15" x="562.4" y="277" fill="#FD5202" rx="2" ry="2"/></g><g><title>std::next&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="936.3" y="341" fill="#D27F15" rx="2" ry="2"/></g><g><title>Node::findVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="551.8" y="341" fill="#FB012F" rx="2" ry="2"/></g><g><title>Node::findVariableValue (25 samples, 0.48%)</title><rect width="5.6" height="15" x="252.9" y="261" fill="#E44429" rx="2" ry="2"/></g><g><title>EcfFile::extract_ecfmicro (1 samples, 0.02%)</title><rect width=".2" height="15" x="374.3" y="357" fill="#CE1522" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="585.4" y="341" fill="#EA6111" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".3" height="15" x="393.3" y="261" fill="#D4940B" rx="2" ry="2"/></g><g><title>[unknown] (16 samples, 0.31%)</title><rect width="3.6" height="15" x="10" y="581" fill="#FC9C0E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (29 samples, 0.56%)</title><rect width="6.6" height="15" x="586.3" y="325" fill="#F54829" rx="2" ry="2"/></g><g><title>[unknown] (12 samples, 0.23%)</title><rect width="2.7" height="15" x="226.5" y="565" fill="#FA3A25" rx="2" ry="2"/></g><g><title>Defs::set_most_significant_state (1 samples, 0.02%)</title><rect width=".2" height="15" x="973" y="293" fill="#CD4D1E" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.6" y="517" fill="#D3500C" rx="2" ry="2"/></g><g><title>std::__distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="909.7" y="229" fill="#E90531" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="305.1" y="181" fill="#E98300" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.02%)</title><rect width=".2" height="15" x="803.5" y="197" fill="#EEBA14" rx="2" ry="2"/></g><g><title>Family::defs (1 samples, 0.02%)</title><rect width=".3" height="15" x="258.5" y="229" fill="#F14C02" rx="2" ry="2"/></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (2 samples, 0.04%)</title><rect width=".5" height="15" x="53.1" y="549" fill="#E21516" rx="2" ry="2"/></g><g><title>std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="349.1" y="325" fill="#D27818" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (1 samples, 0.02%)</title><rect width=".3" height="15" x="150.9" y="565" fill="#E40634" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="306" y="261" fill="#EB4C0D" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (15 samples, 0.29%)</title><rect width="3.4" height="15" x="532.7" y="293" fill="#E34A1A" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".3" height="15" x="991.6" y="309" fill="#CE3721" rx="2" ry="2"/></g><g><title>[unknown] (18 samples, 0.35%)</title><rect width="4.1" height="15" x="101.9" y="373" fill="#F9AF1B" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="43.1" y="549" fill="#FC2328" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (1 samples, 0.02%)</title><rect width=".2" height="15" x="264.9" y="229" fill="#EE1505" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (4 samples, 0.08%)</title><rect width=".9" height="15" x="1009.1" y="341" fill="#F6A10B" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.6" y="357" fill="#DBA91C" rx="2" ry="2"/></g><g><title>std::make_shared&lt;Task, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="240.4" y="437" fill="#FA0F08" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (131 samples, 2.52%)</title><rect width="29.8" height="15" x="1028.6" y="373" fill="#D85606" rx="2" ry="2"/><text x="1031.63" y="383.5">Pr..</text></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::new_allocator (1 samples, 0.02%)</title><rect width=".2" height="15" x="970.1" y="293" fill="#FA7F33" rx="2" ry="2"/></g><g><title>malloc_consolidate (55 samples, 1.06%)</title><rect width="12.5" height="15" x="1126.2" y="581" fill="#EBA436" rx="2" ry="2"/></g><g><title>Node::check_in_limit_up_node_tree (2 samples, 0.04%)</title><rect width=".5" height="15" x="308.2" y="421" fill="#E69F06" rx="2" ry="2"/></g><g><title>boost::date_time::microsec_clock&lt;boost::posix_time::ptime&gt;::universal_time (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.6" y="437" fill="#DE2207" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".2" height="15" x="956.7" y="309" fill="#F07E0E" rx="2" ry="2"/></g><g><title>Task::isTask (1 samples, 0.02%)</title><rect width=".2" height="15" x="970.8" y="357" fill="#CFAA00" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="861.1" y="85" fill="#DDA61E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char const*, void&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="935.1" y="325" fill="#E6E201" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.4" y="325" fill="#DE3E29" rx="2" ry="2"/></g><g><title>Node::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="259.4" y="229" fill="#E7B915" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::size (2 samples, 0.04%)</title><rect width=".5" height="15" x="551.3" y="325" fill="#F32C29" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="415.6" y="277" fill="#D8190A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect width=".7" height="15" x="652.1" y="309" fill="#F7BE0F" rx="2" ry="2"/></g><g><title>Family::defs (1 samples, 0.02%)</title><rect width=".3" height="15" x="258.5" y="245" fill="#DB9D04" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".7" height="15" x="230.4" y="437" fill="#E01A0A" rx="2" ry="2"/></g><g><title>Node::findVariableValue (2 samples, 0.04%)</title><rect width=".4" height="15" x="1065.2" y="389" fill="#EB6F18" rx="2" ry="2"/></g><g><title>Node::findGenVariable (10 samples, 0.19%)</title><rect width="2.3" height="15" x="398.8" y="293" fill="#EE5621" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="891.5" y="229" fill="#CE8801" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (8 samples, 0.15%)</title><rect width="1.8" height="15" x="409.9" y="261" fill="#CD1914" rx="2" ry="2"/></g><g><title>Task::create (4 samples, 0.08%)</title><rect width=".9" height="15" x="240.4" y="453" fill="#E78B16" rx="2" ry="2"/></g><g><title>Node::findVariableValue (10 samples, 0.19%)</title><rect width="2.3" height="15" x="981.4" y="341" fill="#E90930" rx="2" ry="2"/></g><g><title>Node::find_parent_gen_variable_value (4 samples, 0.08%)</title><rect width=".9" height="15" x="259" y="277" fill="#EF4232" rx="2" ry="2"/></g><g><title>[unknown] (42 samples, 0.81%)</title><rect width="9.5" height="15" x="32.7" y="517" fill="#FC2F16" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".3" height="15" x="1009.3" y="277" fill="#CE431B" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".3" height="15" x="259.4" y="181" fill="#E72A23" rx="2" ry="2"/></g><g><title>[unknown] (7 samples, 0.13%)</title><rect width="1.6" height="15" x="181.1" y="565" fill="#EBAA25" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::erase (1 samples, 0.02%)</title><rect width=".3" height="15" x="248.5" y="293" fill="#F52F20" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1056.3" y="309" fill="#D07E0B" rx="2" ry="2"/></g><g><title>boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="923.3" y="309" fill="#E7342C" rx="2" ry="2"/></g><g><title>Submittable::submit_job_only (182 samples, 3.50%)</title><rect width="41.3" height="15" x="246.5" y="357" fill="#CD0F04" rx="2" ry="2"/><text x="249.5" y="367.5">Sub..</text></g><g><title>NodeContainer::getAllTasks (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="517" fill="#D40701" rx="2" ry="2"/></g><g><title>Node::findVariableValue (11 samples, 0.21%)</title><rect width="2.5" height="15" x="984.6" y="357" fill="#E0AD11" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".5" height="15" x="986.4" y="341" fill="#E5CD2A" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="596.7" y="357" fill="#D81026" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.2" height="15" x="11.4" y="421" fill="#E9A201" rx="2" ry="2"/></g><g><title>Family::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="289.4" y="277" fill="#DF962B" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (5 samples, 0.10%)</title><rect width="1.2" height="15" x="724.9" y="261" fill="#DA8A14" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (106 samples, 2.04%)</title><rect width="24.1" height="15" x="607.8" y="309" fill="#D6870F" rx="2" ry="2"/><text x="610.83" y="319.5">E..</text></g><g><title>std::char_traits&lt;char&gt;::length (1 samples, 0.02%)</title><rect width=".3" height="15" x="936" y="341" fill="#F26035" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="1026.4" y="325" fill="#F0D62B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::erase (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.2" y="421" fill="#FD8F29" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="310.7" y="357" fill="#E5180A" rx="2" ry="2"/></g><g><title>Node::findGenVariable (9 samples, 0.17%)</title><rect width="2" height="15" x="556.1" y="293" fill="#DB5136" rx="2" ry="2"/></g><g><title>[unknown] (24 samples, 0.46%)</title><rect width="5.4" height="15" x="100.6" y="389" fill="#EA3025" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (59 samples, 1.13%)</title><rect width="13.3" height="15" x="293.3" y="325" fill="#E01700" rx="2" ry="2"/></g><g><title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087.4" y="533" fill="#E53D26" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmRKS4_@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="596.3" y="357" fill="#D16813" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (2 samples, 0.04%)</title><rect width=".5" height="15" x="394.7" y="245" fill="#DB1103" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1033.6" y="341" fill="#F15815" rx="2" ry="2"/></g><g><title>Node::findVariableValue (7 samples, 0.13%)</title><rect width="1.5" height="15" x="853" y="181" fill="#E19C22" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="860.9" y="117" fill="#E66035" rx="2" ry="2"/></g><g><title>ServerState::find_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="259.7" y="261" fill="#F2150C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect width=".2" height="15" x="1183.2" y="549" fill="#F83E04" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="803.2" y="181" fill="#CDAE08" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (13 samples, 0.25%)</title><rect width="3" height="15" x="862.9" y="181" fill="#F10713" rx="2" ry="2"/></g><g><title>[unknown] (31 samples, 0.60%)</title><rect width="7.1" height="15" x="151.6" y="549" fill="#CF3405" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (85 samples, 1.63%)</title><rect width="19.3" height="15" x="837.5" y="229" fill="#E5701D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.04%)</title><rect width=".5" height="15" x="544.5" y="325" fill="#F2A123" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="230.2" y="469" fill="#E64418" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="616" y="213" fill="#FCB51F" rx="2" ry="2"/></g><g><title>NodeContainer::resolveDependencies (3,627 samples, 69.76%)</title><rect width="823.2" height="15" x="245.8" y="485" fill="#EEE12A" rx="2" ry="2"/><text x="248.82" y="495.5">NodeContainer::resolveDependencies</text></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1057.5" y="309" fill="#E7B209" rx="2" ry="2"/></g><g><title>boost::date_time::base_time&lt;boost::posix_time::ptime, boost::date_time::counted_time_system&lt;boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt; &gt; &gt;::base_time (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.8" y="389" fill="#ED8710" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="938.1" y="293" fill="#F98818" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="975.5" y="325" fill="#DDB102" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="1026.1" y="341" fill="#F4091B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="935.1" y="309" fill="#DEB023" rx="2" ry="2"/></g><g><title>_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="688.4" y="245" fill="#DEDD08" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.2" height="15" x="11.4" y="437" fill="#DE700D" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="416.5" y="293" fill="#F4AC0F" rx="2" ry="2"/></g><g><title>_ZNSt6localeaSERKS_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="31.1" y="549" fill="#FD9435" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="801" y="197" fill="#E5C716" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (2 samples, 0.04%)</title><rect width=".4" height="15" x="1057.5" y="341" fill="#F8AD28" rx="2" ry="2"/></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (1 samples, 0.02%)</title><rect width=".2" height="15" x="151.4" y="565" fill="#E8451A" rx="2" ry="2"/></g><g><title>Variable::theValue[abi:cxx11] (4 samples, 0.08%)</title><rect width=".9" height="15" x="464.6" y="309" fill="#F4A82A" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (12 samples, 0.23%)</title><rect width="2.7" height="15" x="1050.4" y="261" fill="#FDC024" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="616.9" y="213" fill="#F8210F" rx="2" ry="2"/></g><g><title>Task::resolveDependencies (184 samples, 3.54%)</title><rect width="41.8" height="15" x="246" y="373" fill="#F0C221" rx="2" ry="2"/><text x="249.05" y="383.5">Tas..</text></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.8" y="325" fill="#DAC006" rx="2" ry="2"/></g><g><title>std::__copy_move_a&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="999.1" y="309" fill="#FCAF09" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.6" y="405" fill="#E09523" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (1 samples, 0.02%)</title><rect width=".3" height="15" x="363.8" y="341" fill="#E1B529" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect width=".2" height="15" x="996.9" y="261" fill="#D5BD27" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="884" y="245" fill="#D8401C" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (4 samples, 0.08%)</title><rect width=".9" height="15" x="977.8" y="325" fill="#F0A200" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;Expression, std::default_delete&lt;Expression&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.5" y="405" fill="#EC0C1D" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;AstTop, std::default_delete&lt;AstTop&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.3" y="373" fill="#EDA812" rx="2" ry="2"/></g><g><title>[unknown] (16 samples, 0.31%)</title><rect width="3.6" height="15" x="10" y="565" fill="#F28B28" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (6 samples, 0.12%)</title><rect width="1.3" height="15" x="833" y="197" fill="#E74623" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect width=".3" height="15" x="969.8" y="309" fill="#CE0C00" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="310.7" y="341" fill="#E03B1C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6 samples, 0.12%)</title><rect width="1.4" height="15" x="860.9" y="101" fill="#F42605" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::end (3 samples, 0.06%)</title><rect width=".7" height="15" x="547.7" y="309" fill="#D8A60D" rx="2" ry="2"/></g><g><title>operator new (2 samples, 0.04%)</title><rect width=".5" height="15" x="892.9" y="213" fill="#F7691F" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (4 samples, 0.08%)</title><rect width=".9" height="15" x="414.5" y="277" fill="#D6E536" rx="2" ry="2"/></g><g><title>Node::variable_substitution (2 samples, 0.04%)</title><rect width=".4" height="15" x="1070.4" y="421" fill="#EBB61D" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="782.4" y="213" fill="#FB9E16" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (12 samples, 0.23%)</title><rect width="2.7" height="15" x="289.4" y="309" fill="#DB6110" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".3" height="15" x="578.3" y="293" fill="#E31430" rx="2" ry="2"/></g><g><title>std::__shared_ptr&lt;Node, (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.9" y="389" fill="#EA410A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (2 samples, 0.04%)</title><rect width=".4" height="15" x="908.8" y="277" fill="#DCBF01" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="990.5" y="341" fill="#F3650C" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="841.4" y="197" fill="#E3451E" rx="2" ry="2"/></g><g><title>std::istream::seekg (2 samples, 0.04%)</title><rect width=".4" height="15" x="1188.2" y="581" fill="#FE6627" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;Expression, std::default_delete&lt;Expression&gt; &gt;::operator (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.5" y="421" fill="#E28F02" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1051.3" y="229" fill="#D56600" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (2 samples, 0.04%)</title><rect width=".5" height="15" x="304.8" y="197" fill="#D02030" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (3 samples, 0.06%)</title><rect width=".6" height="15" x="988.5" y="357" fill="#F57232" rx="2" ry="2"/></g><g><title>operator new (2 samples, 0.04%)</title><rect width=".5" height="15" x="614.4" y="229" fill="#F3C601" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1085.4" y="549" fill="#E36919" rx="2" ry="2"/></g><g><title>ecf::JobProfiler::JobProfiler (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.6" y="453" fill="#EFBB02" rx="2" ry="2"/></g><g><title>Node::findVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="311.6" y="357" fill="#F57B34" rx="2" ry="2"/></g><g><title>std::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="333" y="245" fill="#E84702" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (2 samples, 0.04%)</title><rect width=".5" height="15" x="289.6" y="261" fill="#FB9305" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="830.9" y="133" fill="#D7D100" rx="2" ry="2"/></g><g><title>memcpy@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="874.7" y="165" fill="#E48602" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (2 samples, 0.04%)</title><rect width=".4" height="15" x="249" y="277" fill="#D3E02E" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1058.4" y="325" fill="#F51F2E" rx="2" ry="2"/></g><g><title>std::__copy_move_a&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="349.1" y="293" fill="#D71419" rx="2" ry="2"/></g><g><title>fputs@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="247.2" y="293" fill="#D1212E" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".2" height="15" x="893.8" y="229" fill="#E14020" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".3" height="15" x="945.3" y="373" fill="#CED035" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (3 samples, 0.06%)</title><rect width=".7" height="15" x="281.9" y="149" fill="#DDDD15" rx="2" ry="2"/></g><g><title>Task::script_extension[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.6" y="277" fill="#FE8524" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect width=".2" height="15" x="930.8" y="261" fill="#E76F09" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (2 samples, 0.04%)</title><rect width=".5" height="15" x="868.8" y="213" fill="#DA9301" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="867.5" y="165" fill="#DBC507" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="908.1" y="277" fill="#D16320" rx="2" ry="2"/></g><g><title>std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="249.4" y="261" fill="#E4B92B" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt;::_M_head (3 samples, 0.06%)</title><rect width=".7" height="15" x="557.2" y="181" fill="#FDBD06" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1056.1" y="261" fill="#E7931D" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (26 samples, 0.50%)</title><rect width="5.9" height="15" x="911.3" y="261" fill="#E80D1D" rx="2" ry="2"/></g><g><title>memcpy@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="673.9" y="181" fill="#F43316" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="293.5" y="197" fill="#E2D400" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="560.6" y="261" fill="#EE5A06" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="1062" y="341" fill="#E83607" rx="2" ry="2"/></g><g><title>ServerState::find_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="976.9" y="341" fill="#D97913" rx="2" ry="2"/></g><g><title>PreProcessor::PreProcessor (1 samples, 0.02%)</title><rect width=".3" height="15" x="973.9" y="389" fill="#D26D18" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="805.3" y="197" fill="#D1411B" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="944" y="245" fill="#FB2016" rx="2" ry="2"/></g><g><title>FamGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="289.4" y="261" fill="#DD720F" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1052.2" y="165" fill="#CF1014" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (1 samples, 0.02%)</title><rect width=".2" height="15" x="1072" y="325" fill="#E5D124" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (1 samples, 0.02%)</title><rect width=".2" height="15" x="972.8" y="357" fill="#E61919" rx="2" ry="2"/></g><g><title>IncludeFileCache::path[abi:cxx11] (2 samples, 0.04%)</title><rect width=".4" height="15" x="724.5" y="261" fill="#E2412C" rx="2" ry="2"/></g><g><title>ecf::Str::ECF_MICRO[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="983.7" y="357" fill="#F9B208" rx="2" ry="2"/></g><g><title>Node::setStateOnly (18 samples, 0.35%)</title><rect width="4.1" height="15" x="968.9" y="373" fill="#F29700" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;Family&gt; &gt;::construct&lt;Family, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="341" fill="#DD7D26" rx="2" ry="2"/></g><g><title>Defs::set_most_significant_state (1 samples, 0.02%)</title><rect width=".3" height="15" x="286.4" y="197" fill="#E9452D" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="918.8" y="229" fill="#FC0733" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="364.1" y="325" fill="#FAD40D" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (3 samples, 0.06%)</title><rect width=".7" height="15" x="391.1" y="277" fill="#EDAB19" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="877.9" y="165" fill="#E9681B" rx="2" ry="2"/></g><g><title>Node::add_variable (4 samples, 0.08%)</title><rect width=".9" height="15" x="237.9" y="437" fill="#D41B00" rx="2" ry="2"/></g><g><title>_ZNKSt6locale2id5_M_idEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="42.9" y="549" fill="#F1AD28" rx="2" ry="2"/></g><g><title>__GI___libc_write (59 samples, 1.13%)</title><rect width="13.4" height="15" x="92.6" y="565" fill="#F25231" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="545" y="325" fill="#CE7E0E" rx="2" ry="2"/></g><g><title>std::_Head_base&lt;0ul, RepeatBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect width=".2" height="15" x="555.2" y="165" fill="#E20F1C" rx="2" ry="2"/></g><g><title>Suite::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="246" y="245" fill="#DD5D2A" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="983.5" y="325" fill="#D29E29" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".3" height="15" x="286.4" y="229" fill="#EC0131" rx="2" ry="2"/></g><g><title>EcfFile::variableSubstitution (17 samples, 0.33%)</title><rect width="3.8" height="15" x="289.2" y="341" fill="#D8C515" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="252.6" y="213" fill="#E4E02B" rx="2" ry="2"/></g><g><title>[unknown] (6 samples, 0.12%)</title><rect width="1.3" height="15" x="91.3" y="341" fill="#E97E33" rx="2" ry="2"/></g><g><title>EcfFile::countEcfMicro (8 samples, 0.15%)</title><rect width="1.8" height="15" x="653.7" y="293" fill="#F66217" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (106 samples, 2.04%)</title><rect width="24.1" height="15" x="1033.8" y="357" fill="#EFC12A" rx="2" ry="2"/><text x="1036.85" y="367.5">P..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (3 samples, 0.06%)</title><rect width=".7" height="15" x="349.1" y="341" fill="#FA382E" rx="2" ry="2"/></g><g><title>std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::operator* (1 samples, 0.02%)</title><rect width=".2" height="15" x="805.1" y="149" fill="#EA4C24" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.8" y="341" fill="#D27B25" rx="2" ry="2"/></g><g><title>Submittable::locatedEcfFile (2 samples, 0.04%)</title><rect width=".4" height="15" x="307.8" y="357" fill="#F98402" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect width=".2" height="15" x="1053.8" y="293" fill="#E74A08" rx="2" ry="2"/></g><g><title>boost::detail::lexical_ostream_limited_src&lt;char, std::char_traits&lt;char&gt; &gt;::operator&gt;&gt;&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="315.3" y="293" fill="#D49F16" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::deallocate (1 samples, 0.02%)</title><rect width=".2" height="15" x="867.5" y="133" fill="#D57E13" rx="2" ry="2"/></g><g><title>Submittable::locatedEcfFile (3 samples, 0.06%)</title><rect width=".7" height="15" x="287.1" y="325" fill="#D16534" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="181" fill="#DF8F19" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="865" y="53" fill="#EBD904" rx="2" ry="2"/></g><g><title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="250.1" y="197" fill="#E41C20" rx="2" ry="2"/></g><g><title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~allocator (1 samples, 0.02%)</title><rect width=".3" height="15" x="917.6" y="229" fill="#CF0F20" rx="2" ry="2"/></g><g><title>boost::detail::lexical_istream_limited_src&lt;char, std::char_traits&lt;char&gt;, false, 40ul&gt;::operator&lt;&lt; (4 samples, 0.08%)</title><rect width="1" height="15" x="320.9" y="309" fill="#F9121D" rx="2" ry="2"/></g><g><title>_ZSt9has_facetISt5ctypeIcEEbRKSt6locale@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="43.6" y="549" fill="#DE762C" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="917.9" y="261" fill="#E2AD2E" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="46.8" y="453" fill="#E9A10A" rx="2" ry="2"/></g><g><title>Node::findVariableValue (5 samples, 0.10%)</title><rect width="1.2" height="15" x="604.4" y="357" fill="#D3A62F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect width=".7" height="15" x="632.1" y="309" fill="#DA9306" rx="2" ry="2"/></g><g><title>[unknown] (30 samples, 0.58%)</title><rect width="6.8" height="15" x="99.2" y="421" fill="#D17F2E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (15 samples, 0.29%)</title><rect width="3.4" height="15" x="360.4" y="357" fill="#DFCA1C" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (5 samples, 0.10%)</title><rect width="1.1" height="15" x="974.2" y="373" fill="#CE7812" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (1 samples, 0.02%)</title><rect width=".2" height="15" x="305.5" y="245" fill="#D24A2D" rx="2" ry="2"/></g><g><title>Submittable::begin (3 samples, 0.06%)</title><rect width=".7" height="15" x="233.8" y="421" fill="#DA9D16" rx="2" ry="2"/></g><g><title>EcfFile::extract_ecfmicro (2 samples, 0.04%)</title><rect width=".4" height="15" x="351.6" y="357" fill="#CE0A13" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.04%)</title><rect width=".5" height="15" x="540.4" y="309" fill="#D78D25" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;ecf::AutoCancelAttr, std::default_delete&lt;ecf::AutoCancelAttr&gt; &gt;::unique_ptr&lt;std::default_delete&lt;ecf::AutoCancelAttr&gt;, void&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="240.6" y="261" fill="#F8C10F" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".3" height="15" x="414.2" y="277" fill="#E6BF0C" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~new_allocator (1 samples, 0.02%)</title><rect width=".2" height="15" x="651.9" y="245" fill="#D1BA23" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087" y="213" fill="#E61C05" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator-&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="591.5" y="245" fill="#EC7031" rx="2" ry="2"/></g><g><title>Family::findGenVariable (46 samples, 0.88%)</title><rect width="10.5" height="15" x="388.1" y="309" fill="#D9101C" rx="2" ry="2"/></g><g><title>Task::handleStateChange (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.6" y="341" fill="#F16D24" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (12 samples, 0.23%)</title><rect width="2.7" height="15" x="977.8" y="341" fill="#FDE22F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.04%)</title><rect width=".4" height="15" x="974.4" y="341" fill="#F1D112" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000" y="373" fill="#E6192A" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="332.3" y="277" fill="#F7C82E" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (59 samples, 1.13%)</title><rect width="13.3" height="15" x="293.3" y="341" fill="#F0CC2D" rx="2" ry="2"/></g><g><title>EcfFile::countEcfMicro (1 samples, 0.02%)</title><rect width=".2" height="15" x="1048.4" y="277" fill="#F17230" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (8 samples, 0.15%)</title><rect width="1.8" height="15" x="1051.3" y="245" fill="#EC8A14" rx="2" ry="2"/></g><g><title>[unknown] (57 samples, 1.10%)</title><rect width="12.9" height="15" x="188.4" y="437" fill="#DFAB2B" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;Task&gt; &gt;::construct&lt;Task, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="241.1" y="357" fill="#F3140E" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (2 samples, 0.04%)</title><rect width=".5" height="15" x="905.8" y="277" fill="#E41A1C" rx="2" ry="2"/></g><g><title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (5 samples, 0.10%)</title><rect width="1.1" height="15" x="158.7" y="565" fill="#E25F15" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (2 samples, 0.04%)</title><rect width=".5" height="15" x="537" y="309" fill="#D7541F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="597.8" y="357" fill="#E1A929" rx="2" ry="2"/></g><g><title>Variable::EMPTY (1 samples, 0.02%)</title><rect width=".3" height="15" x="400.8" y="277" fill="#F51815" rx="2" ry="2"/></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (25 samples, 0.48%)</title><rect width="5.6" height="15" x="55.2" y="565" fill="#EBB833" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::begin (1 samples, 0.02%)</title><rect width=".3" height="15" x="993.4" y="293" fill="#F2792F" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="866.8" y="165" fill="#F44E34" rx="2" ry="2"/></g><g><title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="805.7" y="149" fill="#FC4000" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::base (3 samples, 0.06%)</title><rect width=".7" height="15" x="574.9" y="293" fill="#FB4C09" rx="2" ry="2"/></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_Rb_tree_impl (1 samples, 0.02%)</title><rect width=".3" height="15" x="980.7" y="325" fill="#E35506" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (2 samples, 0.04%)</title><rect width=".5" height="15" x="984.1" y="373" fill="#DB0908" rx="2" ry="2"/></g><g><title>NodeContainer::getAllTasks (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="533" fill="#F1721E" rx="2" ry="2"/></g><g><title>[unknown] (36 samples, 0.69%)</title><rect width="8.1" height="15" x="218.4" y="501" fill="#F9DC02" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (7 samples, 0.13%)</title><rect width="1.5" height="15" x="853" y="197" fill="#FD341A" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (1,191 samples, 22.91%)</title><rect width="270.3" height="15" x="653" y="309" fill="#E7AD14" rx="2" ry="2"/><text x="656" y="319.5">PreProcessor::preProcess_line</text></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="306.6" y="341" fill="#E3C804" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (96 samples, 1.85%)</title><rect width="21.8" height="15" x="856.8" y="229" fill="#F4B231" rx="2" ry="2"/><text x="859.81" y="239.5">P..</text></g><g><title>Node::findGenVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="259" y="261" fill="#FD3206" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::int_adapter (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.7" y="277" fill="#F7062F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect width=".2" height="15" x="616.9" y="277" fill="#F13A2F" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="895.2" y="213" fill="#EB5917" rx="2" ry="2"/></g><g><title>std::__get_helper&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="533.8" y="261" fill="#CD4B0A" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="577.4" y="293" fill="#F3AC1A" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="1026.1" y="325" fill="#DC3E14" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.2" y="325" fill="#FA6910" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (16 samples, 0.31%)</title><rect width="3.6" height="15" x="588.8" y="293" fill="#D5CC09" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".2" height="15" x="413.1" y="277" fill="#DA0925" rx="2" ry="2"/></g><g><title>[unknown] (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1085.6" y="533" fill="#D72201" rx="2" ry="2"/></g><g><title>_IO_fputs (71 samples, 1.37%)</title><rect width="16.2" height="15" x="60.8" y="565" fill="#CD8115" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="232.9" y="517" fill="#FD632F" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="352" y="357" fill="#F0C12A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="292.8" y="325" fill="#FD6F06" rx="2" ry="2"/></g><g><title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="602.4" y="341" fill="#E2490D" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.1" y="405" fill="#E1CC35" rx="2" ry="2"/></g><g><title>Submittable::createChildProcess (32 samples, 0.62%)</title><rect width="7.2" height="15" x="974.2" y="389" fill="#EB7621" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect width=".2" height="15" x="1016.6" y="341" fill="#D9D326" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (1 samples, 0.02%)</title><rect width=".2" height="15" x="288.5" y="325" fill="#DF8E16" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.4" y="293" fill="#DEC927" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::empty (9 samples, 0.17%)</title><rect width="2.1" height="15" x="546.3" y="325" fill="#EA1E0E" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1035.4" y="229" fill="#E05927" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1 samples, 0.02%)</title><rect width=".3" height="15" x="917.6" y="245" fill="#F44C1D" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".7" height="15" x="142.1" y="517" fill="#F4D631" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1036.1" y="213" fill="#E5D625" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="1027" y="389" fill="#F3D731" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="284.9" y="277" fill="#E4AD01" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".3" height="15" x="543.8" y="325" fill="#CF5B16" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="807.1" y="197" fill="#D7B202" rx="2" ry="2"/></g><g><title>Node::variable_substitution (3 samples, 0.06%)</title><rect width=".7" height="15" x="1063.6" y="389" fill="#EE1A04" rx="2" ry="2"/></g><g><title>Parser::nodeStack (1 samples, 0.02%)</title><rect width=".2" height="15" x="238.8" y="437" fill="#D95E01" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (6 samples, 0.12%)</title><rect width="1.4" height="15" x="405.6" y="277" fill="#DAC529" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;AstTop, std::default_delete&lt;AstTop&gt; &gt;::operator (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.3" y="405" fill="#DD140D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="921" y="245" fill="#D60023" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="911.5" y="229" fill="#E87416" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="878.8" y="165" fill="#F1841E" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (8 samples, 0.15%)</title><rect width="1.8" height="15" x="534.1" y="261" fill="#F72E0B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="909.7" y="261" fill="#FEBF27" rx="2" ry="2"/></g><g><title>Node::findVariable (4 samples, 0.08%)</title><rect width=".9" height="15" x="1067" y="373" fill="#E2190C" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="400.4" y="213" fill="#F05108" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect width=".3" height="15" x="984.1" y="357" fill="#D99A31" rx="2" ry="2"/></g><g><title>EcfFile::EcfFile (1 samples, 0.02%)</title><rect width=".3" height="15" x="287.1" y="309" fill="#D93511" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (3 samples, 0.06%)</title><rect width=".7" height="15" x="554.7" y="261" fill="#E4B92C" rx="2" ry="2"/></g><g><title>ServerState::find_variable (2 samples, 0.04%)</title><rect width=".5" height="15" x="1066.3" y="389" fill="#EFBF1D" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="668.4" y="197" fill="#E63524" rx="2" ry="2"/></g><g><title>boost::date_time::microsec_clock&lt;boost::posix_time::ptime&gt;::create_time (1 samples, 0.02%)</title><rect width=".2" height="15" x="1001.4" y="389" fill="#E8AB29" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (31 samples, 0.60%)</title><rect width="7.1" height="15" x="269.6" y="197" fill="#F59936" rx="2" ry="2"/></g><g><title>_int_malloc (17 samples, 0.33%)</title><rect width="3.9" height="15" x="1108.3" y="581" fill="#E8A522" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".7" height="15" x="91.9" y="325" fill="#D03B36" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.9" y="133" fill="#E70E2D" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1071.5" y="309" fill="#DAA506" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1055.4" y="229" fill="#F64A25" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="395.6" y="213" fill="#F71F2D" rx="2" ry="2"/></g><g><title>Node::get_late (1 samples, 0.02%)</title><rect width=".2" height="15" x="308.7" y="421" fill="#F5AC2B" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1183.2" y="565" fill="#FD8F2C" rx="2" ry="2"/></g><g><title>ecf::Str::split (3 samples, 0.06%)</title><rect width=".7" height="15" x="1047" y="293" fill="#FA4A0A" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (2 samples, 0.04%)</title><rect width=".4" height="15" x="268.1" y="165" fill="#F2C301" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="934" y="309" fill="#E4310D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="290.3" y="277" fill="#F96316" rx="2" ry="2"/></g><g><title>IncludeFileCache::path[abi:cxx11] (1 samples, 0.02%)</title><rect width=".3" height="15" x="297.3" y="213" fill="#D5AD1C" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (20 samples, 0.38%)</title><rect width="4.5" height="15" x="339.6" y="357" fill="#FB1420" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (2 samples, 0.04%)</title><rect width=".4" height="15" x="641" y="293" fill="#D67804" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="869.3" y="213" fill="#E4C627" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect width=".3" height="15" x="304.8" y="149" fill="#F99C05" rx="2" ry="2"/></g><g><title>memcmp@plt (3 samples, 0.06%)</title><rect width=".7" height="15" x="511.1" y="293" fill="#E43926" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="782.4" y="229" fill="#ED5E10" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".2" height="15" x="561.3" y="245" fill="#E9AE16" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (2 samples, 0.04%)</title><rect width=".4" height="15" x="1071.1" y="325" fill="#EED029" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3 samples, 0.06%)</title><rect width=".7" height="15" x="563.6" y="277" fill="#F7A42F" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (5 samples, 0.10%)</title><rect width="1.2" height="15" x="781.2" y="229" fill="#ED7E13" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="978.5" y="309" fill="#E43336" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="782.4" y="245" fill="#EDB109" rx="2" ry="2"/></g><g><title>std::_Sp_counted_ptr_inplace&lt;Family, std::allocator&lt;Family&gt;, (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="357" fill="#D1C105" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (2 samples, 0.04%)</title><rect width=".5" height="15" x="286.4" y="277" fill="#F96116" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::base (2 samples, 0.04%)</title><rect width=".4" height="15" x="314.4" y="293" fill="#FEA818" rx="2" ry="2"/></g><g><title>[unknown] (14 samples, 0.27%)</title><rect width="3.2" height="15" x="223.3" y="469" fill="#EEDD15" rx="2" ry="2"/></g><g><title>[unknown] (11 samples, 0.21%)</title><rect width="2.5" height="15" x="90.1" y="357" fill="#D4D822" rx="2" ry="2"/></g><g><title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="677.3" y="165" fill="#D5B002" rx="2" ry="2"/></g><g><title>EcfFile::~EcfFile (1 samples, 0.02%)</title><rect width=".3" height="15" x="957.1" y="389" fill="#E12B24" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (7 samples, 0.13%)</title><rect width="1.6" height="15" x="294.6" y="277" fill="#CE040F" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (132 samples, 2.54%)</title><rect width="30" height="15" x="1028.4" y="389" fill="#E4A21E" rx="2" ry="2"/><text x="1031.4" y="399.5">Pr..</text></g><g><title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="364.7" y="261" fill="#E6CE19" rx="2" ry="2"/></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.04%)</title><rect width=".5" height="15" x="1189.3" y="565" fill="#E4490B" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".2" height="15" x="531.8" y="309" fill="#F2DD1E" rx="2" ry="2"/></g><g><title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="968.7" y="293" fill="#D6AB36" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (10 samples, 0.19%)</title><rect width="2.3" height="15" x="1030.9" y="341" fill="#ED280A" rx="2" ry="2"/></g><g><title>malloc (54 samples, 1.04%)</title><rect width="12.2" height="15" x="1114" y="581" fill="#FB0D1C" rx="2" ry="2"/></g><g><title>ServerState::find_variable (4 samples, 0.08%)</title><rect width=".9" height="15" x="1022.7" y="357" fill="#E07517" rx="2" ry="2"/></g><g><title>free (6 samples, 0.12%)</title><rect width="1.4" height="15" x="913.3" y="213" fill="#DB5420" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="296" y="261" fill="#FC0E01" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="928.1" y="277" fill="#DA2322" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::deallocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="970.5" y="293" fill="#D32934" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (1 samples, 0.02%)</title><rect width=".2" height="15" x="1072" y="341" fill="#ED3425" rx="2" ry="2"/></g><g><title>Node::timeDependenciesFree (1 samples, 0.02%)</title><rect width=".3" height="15" x="309.1" y="405" fill="#D7E421" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.9" y="165" fill="#F12028" rx="2" ry="2"/></g><g><title>std::allocate_shared&lt;Task, std::allocator&lt;Task&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="240.4" y="421" fill="#F22526" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::neg_infinity (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.7" y="293" fill="#E41F30" rx="2" ry="2"/></g><g><title>Task::resolveDependencies (20 samples, 0.38%)</title><rect width="4.6" height="15" x="1069" y="501" fill="#FD5114" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="1084.2" y="517" fill="#D77A15" rx="2" ry="2"/></g><g><title>Node::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="293" fill="#DF2723" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".6" height="15" x="232.7" y="565" fill="#F3D016" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (13 samples, 0.25%)</title><rect width="3" height="15" x="923.5" y="309" fill="#E94F34" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt (3 samples, 0.06%)</title><rect width=".6" height="15" x="825.3" y="149" fill="#EB1832" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (1 samples, 0.02%)</title><rect width=".2" height="15" x="280.3" y="133" fill="#FD4216" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (55 samples, 1.06%)</title><rect width="12.5" height="15" x="1170.9" y="581" fill="#F58132" rx="2" ry="2"/></g><g><title>Task::getAllTasks (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="453" fill="#ED7629" rx="2" ry="2"/></g><g><title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1026.6" y="309" fill="#F7392B" rx="2" ry="2"/></g><g><title>EcfFile::remove_nopp_end_tokens (88 samples, 1.69%)</title><rect width="19.9" height="15" x="349.8" y="373" fill="#DE1E24" rx="2" ry="2"/></g><g><title>_itoa_word (1 samples, 0.02%)</title><rect width=".2" height="15" x="77" y="549" fill="#EB2203" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (17 samples, 0.33%)</title><rect width="3.9" height="15" x="1034.5" y="293" fill="#EAB108" rx="2" ry="2"/></g><g><title>boost::date_time::microsec_clock&lt;boost::posix_time::ptime&gt;::universal_time (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.8" y="437" fill="#DE4803" rx="2" ry="2"/></g><g><title>std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1007.7" y="309" fill="#F25F23" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="1070.8" y="341" fill="#D5351A" rx="2" ry="2"/></g><g><title>Submittable::update_static_generated_variables (6 samples, 0.12%)</title><rect width="1.4" height="15" x="992.5" y="373" fill="#DA8426" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (22 samples, 0.42%)</title><rect width="5" height="15" x="1074" y="581" fill="#CD0A05" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="303.7" y="133" fill="#F34A2F" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (19 samples, 0.37%)</title><rect width="4.3" height="15" x="265.3" y="213" fill="#EE582E" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (8 samples, 0.15%)</title><rect width="1.9" height="15" x="1070.8" y="421" fill="#D9321F" rx="2" ry="2"/></g><g><title>InLimitMgr::inLimit (1 samples, 0.02%)</title><rect width=".2" height="15" x="1002.1" y="437" fill="#D4632E" rx="2" ry="2"/></g><g><title>std::end&lt;boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="801.2" y="229" fill="#E3751C" rx="2" ry="2"/></g><g><title>[unknown] (29 samples, 0.56%)</title><rect width="6.5" height="15" x="194.8" y="373" fill="#E50618" rx="2" ry="2"/></g><g><title>Family::defs (1 samples, 0.02%)</title><rect width=".3" height="15" x="258.5" y="213" fill="#E9941F" rx="2" ry="2"/></g><g><title>NodeContainer::check (6 samples, 0.12%)</title><rect width="1.3" height="15" x="235.4" y="469" fill="#DF572D" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (3 samples, 0.06%)</title><rect width=".7" height="15" x="935.1" y="341" fill="#F2E02C" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.5" y="373" fill="#D7CB32" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="1062" y="325" fill="#DC4207" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="980.5" y="341" fill="#DFBB32" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1026.8" y="357" fill="#DD880F" rx="2" ry="2"/></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".3" height="15" x="333.4" y="357" fill="#F5B80B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.9" y="373" fill="#F6271F" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.7" y="437" fill="#F6221F" rx="2" ry="2"/></g><g><title>Family::resolveDependencies (274 samples, 5.27%)</title><rect width="62.2" height="15" x="246" y="437" fill="#F16D22" rx="2" ry="2"/><text x="249.05" y="447.5">Family..</text></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (1 samples, 0.02%)</title><rect width=".3" height="15" x="968.9" y="341" fill="#DAC336" rx="2" ry="2"/></g><g><title>ecf::Str::split (2 samples, 0.04%)</title><rect width=".5" height="15" x="1068.1" y="373" fill="#F1DA11" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".3" height="15" x="1009.3" y="293" fill="#E7671C" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1054.5" y="261" fill="#F35B18" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1045.2" y="277" fill="#D6750A" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".7" height="15" x="230.4" y="453" fill="#D7C103" rx="2" ry="2"/></g><g><title>Submittable::submit_job_only (89 samples, 1.71%)</title><rect width="20.2" height="15" x="288" y="389" fill="#D89003" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (26 samples, 0.50%)</title><rect width="5.9" height="15" x="466.4" y="309" fill="#EBA51B" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".3" height="15" x="1044.7" y="261" fill="#F4BE2C" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (1 samples, 0.02%)</title><rect width=".2" height="15" x="1006.6" y="389" fill="#ECCA2B" rx="2" ry="2"/></g><g><title>Node::variable_dollar_subsitution (1 samples, 0.02%)</title><rect width=".3" height="15" x="799.8" y="261" fill="#DA1834" rx="2" ry="2"/></g><g><title>[unknown] (34 samples, 0.65%)</title><rect width="7.7" height="15" x="98.3" y="485" fill="#D3080C" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1053.6" y="293" fill="#D2D327" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="908.6" y="229" fill="#F0C605" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;Node, (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.1" y="293" fill="#E5582E" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="931.3" y="309" fill="#E66131" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="605.3" y="341" fill="#F19F27" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (46 samples, 0.88%)</title><rect width="10.5" height="15" x="401.7" y="293" fill="#E70E10" rx="2" ry="2"/></g><g><title>[unknown] (101 samples, 1.94%)</title><rect width="23" height="15" x="32.2" y="565" fill="#DA2A33" rx="2" ry="2"/><text x="35.24" y="575.5">[..</text></g><g><title>__gnu_cxx::operator==&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="546.3" y="309" fill="#D8B50F" rx="2" ry="2"/></g><g><title>[unknown] (46 samples, 0.88%)</title><rect width="10.4" height="15" x="32.5" y="549" fill="#DF1905" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1068.3" y="325" fill="#EDDE29" rx="2" ry="2"/></g><g><title>EcfFile::variableSubstitution (1,034 samples, 19.89%)</title><rect width="234.7" height="15" x="369.7" y="373" fill="#F27316" rx="2" ry="2"/><text x="372.74" y="383.5">EcfFile::variableSubstitution</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="1045" y="229" fill="#F49002" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="276.7" y="165" fill="#FBBE33" rx="2" ry="2"/></g><g><title>std::__iterator_category&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="902.4" y="197" fill="#F2060B" rx="2" ry="2"/></g><g><title>std::istream::seekg (1 samples, 0.02%)</title><rect width=".3" height="15" x="835" y="197" fill="#D17700" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.04%)</title><rect width=".4" height="15" x="955.1" y="373" fill="#FCB017" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, ecf::LateAttr*, std::default_delete&lt;ecf::LateAttr&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1069" y="437" fill="#EE721F" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="310.5" y="357" fill="#DACD24" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1066.8" y="325" fill="#E94705" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1066.5" y="373" fill="#D30C1E" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (44 samples, 0.85%)</title><rect width="10" height="15" x="296.2" y="277" fill="#F5851B" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="920.8" y="277" fill="#E5A30B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="855.7" y="181" fill="#CEBB32" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (26 samples, 0.50%)</title><rect width="5.9" height="15" x="911.3" y="245" fill="#E2CF31" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (61 samples, 1.17%)</title><rect width="13.8" height="15" x="782.6" y="245" fill="#D8310A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.04%)</title><rect width=".4" height="15" x="881.6" y="165" fill="#F48011" rx="2" ry="2"/></g><g><title>__offtime (1 samples, 0.02%)</title><rect width=".2" height="15" x="45.4" y="549" fill="#DF4513" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (2 samples, 0.04%)</title><rect width=".4" height="15" x="806" y="165" fill="#DDAB31" rx="2" ry="2"/></g><g><title>EcfFile::remove_nopp_end_tokens (9 samples, 0.17%)</title><rect width="2" height="15" x="248.8" y="309" fill="#E39715" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="956" y="373" fill="#EA6435" rx="2" ry="2"/></g><g><title>EcfFile::countEcfMicro (2 samples, 0.04%)</title><rect width=".5" height="15" x="837.7" y="213" fill="#D7A817" rx="2" ry="2"/></g><g><title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="881.3" y="165" fill="#EBAE0A" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="501" fill="#D76509" rx="2" ry="2"/></g><g><title>[libc-2.22.so] (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="341" fill="#CEA02A" rx="2" ry="2"/></g><g><title>ecf::Str::split (1 samples, 0.02%)</title><rect width=".2" height="15" x="280.3" y="149" fill="#EF6629" rx="2" ry="2"/></g><g><title>IncludeFileCache::path[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="262.2" y="229" fill="#F75F1F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="917.9" y="229" fill="#EEA22E" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="200.9" y="261" fill="#EE1B11" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect width=".2" height="15" x="984.4" y="325" fill="#EE0214" rx="2" ry="2"/></g><g><title>Node::find_parent_gen_variable_value (7 samples, 0.13%)</title><rect width="1.5" height="15" x="1023.9" y="373" fill="#E0A111" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="929.2" y="261" fill="#E3820B" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect width=".2" height="15" x="969.6" y="325" fill="#ECDE27" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="593.8" y="341" fill="#D82227" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (11 samples, 0.21%)</title><rect width="2.5" height="15" x="879.7" y="229" fill="#D3031D" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (10 samples, 0.19%)</title><rect width="2.3" height="15" x="981.4" y="357" fill="#D62D26" rx="2" ry="2"/></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="905.6" y="229" fill="#D13F0A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="980.5" y="325" fill="#F6C416" rx="2" ry="2"/></g><g><title>strlen (1 samples, 0.02%)</title><rect width=".2" height="15" x="316.9" y="405" fill="#DE8E06" rx="2" ry="2"/></g><g><title>Variable::empty (4 samples, 0.08%)</title><rect width=".9" height="15" x="565.6" y="309" fill="#FD0636" rx="2" ry="2"/></g><g><title>fputs@plt (7 samples, 0.13%)</title><rect width="1.6" height="15" x="328" y="357" fill="#F50433" rx="2" ry="2"/></g><g><title>FamilyParser::popFamily (1 samples, 0.02%)</title><rect width=".2" height="15" x="238.8" y="453" fill="#D17510" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (4 samples, 0.08%)</title><rect width=".9" height="15" x="866.8" y="181" fill="#F07E01" rx="2" ry="2"/></g><g><title>Task::resolveDependencies (296 samples, 5.69%)</title><rect width="67.2" height="15" x="1001.8" y="469" fill="#F3501D" rx="2" ry="2"/><text x="1004.84" y="479.5">Task::r..</text></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1053.1" y="245" fill="#E1CA31" rx="2" ry="2"/></g><g><title>std::__advance&lt;char const*, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="868.2" y="149" fill="#DFB804" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (28 samples, 0.54%)</title><rect width="6.4" height="15" x="473.2" y="309" fill="#EBA500" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect width=".2" height="15" x="680.5" y="197" fill="#E41E1E" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="921.5" y="277" fill="#D9532B" rx="2" ry="2"/></g><g><title>free (2 samples, 0.04%)</title><rect width=".4" height="15" x="880.9" y="165" fill="#EF1020" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="934" y="277" fill="#CE9415" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="970.3" y="309" fill="#EC0F0F" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".2" height="15" x="919" y="181" fill="#EEA030" rx="2" ry="2"/></g><g><title>NodeContainer::getAllTasks (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="501" fill="#F41732" rx="2" ry="2"/></g><g><title>Node::initState (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.5" y="453" fill="#D01735" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".2" height="15" x="1052.7" y="197" fill="#DB3B1A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="908.6" y="277" fill="#E10B26" rx="2" ry="2"/></g><g><title>virtual thunk to std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (1 samples, 0.02%)</title><rect width=".2" height="15" x="180.7" y="565" fill="#F16D1B" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (2 samples, 0.04%)</title><rect width=".5" height="15" x="1071.5" y="341" fill="#D0532C" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.6" y="485" fill="#CE7F0F" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect width=".4" height="15" x="1032.3" y="309" fill="#F1C52F" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1066.1" y="373" fill="#E80206" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="1056.8" y="277" fill="#EA7204" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1029.5" y="277" fill="#FB9A1E" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (2 samples, 0.04%)</title><rect width=".4" height="15" x="254" y="245" fill="#EFA01E" rx="2" ry="2"/></g><g><title>Node::findVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="1066.8" y="341" fill="#DA9904" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (1 samples, 0.02%)</title><rect width=".2" height="15" x="281" y="101" fill="#ED9400" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="918.8" y="197" fill="#D59B27" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (3 samples, 0.06%)</title><rect width=".7" height="15" x="260.3" y="293" fill="#DC2B25" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (7 samples, 0.13%)</title><rect width="1.6" height="15" x="395.4" y="229" fill="#EC0E0F" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (2 samples, 0.04%)</title><rect width=".4" height="15" x="280.8" y="133" fill="#F4412A" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="554.9" y="213" fill="#D82C10" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (29 samples, 0.56%)</title><rect width="6.6" height="15" x="843.9" y="197" fill="#EE4D33" rx="2" ry="2"/></g><g><title>fclose@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect width=".2" height="15" x="158" y="533" fill="#DF0F1E" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="988.5" y="309" fill="#D82634" rx="2" ry="2"/></g><g><title>Node::initState (3 samples, 0.06%)</title><rect width=".7" height="15" x="233.8" y="389" fill="#DB1B2F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.8" y="357" fill="#DFC205" rx="2" ry="2"/></g><g><title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="956.9" y="309" fill="#E77018" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char const*, void&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="1056.8" y="309" fill="#FDDB12" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="670.5" y="197" fill="#ED3111" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (1 samples, 0.02%)</title><rect width=".2" height="15" x="931.3" y="325" fill="#F51220" rx="2" ry="2"/></g><g><title>[unknown] (5 samples, 0.10%)</title><rect width="1.2" height="15" x="141.6" y="533" fill="#F03021" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".5" height="15" x="631.4" y="293" fill="#FEB611" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="974.8" y="341" fill="#D6D531" rx="2" ry="2"/></g><g><title>Node::variable_substitution (83 samples, 1.60%)</title><rect width="18.8" height="15" x="1008.2" y="389" fill="#F5531C" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="998" y="341" fill="#D00C0F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="280.3" y="117" fill="#ED4935" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1056.5" y="293" fill="#E49528" rx="2" ry="2"/></g><g><title>[unknown] (14 samples, 0.27%)</title><rect width="3.1" height="15" x="198.2" y="325" fill="#E87900" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (6 samples, 0.12%)</title><rect width="1.3" height="15" x="1043.4" y="261" fill="#CFA313" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::is_infinity (2 samples, 0.04%)</title><rect width=".5" height="15" x="971.4" y="309" fill="#E38D1D" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (24 samples, 0.46%)</title><rect width="5.4" height="15" x="355" y="357" fill="#D62134" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="286.9" y="293" fill="#DE4834" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="902.2" y="197" fill="#D2A81D" rx="2" ry="2"/></g><g><title>std::deque&lt;std::pair&lt;Node*, Parser const*&gt;, std::allocator&lt;std::pair&lt;Node*, Parser const*&gt; &gt; &gt;::back (1 samples, 0.02%)</title><rect width=".3" height="15" x="245.1" y="469" fill="#DA5311" rx="2" ry="2"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".2" height="15" x="1027.3" y="389" fill="#D6C031" rx="2" ry="2"/></g><g><title>[unknown] (16 samples, 0.31%)</title><rect width="3.6" height="15" x="38.6" y="389" fill="#F12D04" rx="2" ry="2"/></g><g><title>__GI___libc_open (68 samples, 1.31%)</title><rect width="15.4" height="15" x="77.2" y="565" fill="#E83530" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.1" y="421" fill="#E54F02" rx="2" ry="2"/></g><g><title>ServerState::find_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="246.3" y="261" fill="#E60C1A" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (13 samples, 0.25%)</title><rect width="2.9" height="15" x="548.4" y="325" fill="#CE4024" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (2 samples, 0.04%)</title><rect width=".5" height="15" x="1071.5" y="325" fill="#FE1D1F" rx="2" ry="2"/></g><g><title>std::copy&lt;std::move_iterator&lt;int*&gt;, int*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="344.1" y="261" fill="#EA1202" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1049.5" y="165" fill="#D0AA28" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="992.3" y="357" fill="#E52D20" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (6 samples, 0.12%)</title><rect width="1.3" height="15" x="603.1" y="357" fill="#DC1C2C" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="559.7" y="277" fill="#DA2523" rx="2" ry="2"/></g><g><title>ecf::theComputedNodeState&lt;std::shared_ptr&lt;Node&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="286.7" y="245" fill="#DDBF06" rx="2" ry="2"/></g><g><title>std::__copy_move_a&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1007.7" y="325" fill="#F4B724" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="245" fill="#EE7A04" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".3" height="15" x="397.4" y="277" fill="#FDB220" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.9" y="149" fill="#D75A18" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087" y="261" fill="#E3970B" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="284.9" y="293" fill="#F2DE00" rx="2" ry="2"/></g><g><title>Task::begin (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.6" y="405" fill="#DF4108" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (42 samples, 0.81%)</title><rect width="9.5" height="15" x="945.6" y="373" fill="#F64D13" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.9" height="15" x="229.2" y="549" fill="#D55C19" rx="2" ry="2"/></g><g><title>Family::begin (5 samples, 0.10%)</title><rect width="1.2" height="15" x="233.3" y="469" fill="#F99923" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".4" height="15" x="284.2" y="213" fill="#EE2101" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1057.7" y="293" fill="#F80822" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="565.2" y="261" fill="#E23D24" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (8 samples, 0.15%)</title><rect width="1.8" height="15" x="1166.4" y="581" fill="#F8DA36" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.2" height="15" x="40" y="357" fill="#EE450A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="315" y="341" fill="#D7512C" rx="2" ry="2"/></g><g><title>std::cbegin&lt;boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="854.8" y="181" fill="#DDBC27" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="277.1" y="133" fill="#E0B12D" rx="2" ry="2"/></g><g><title>std::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="919.5" y="181" fill="#DC0322" rx="2" ry="2"/></g><g><title>ecf::Str::split (17 samples, 0.33%)</title><rect width="3.8" height="15" x="241.3" y="485" fill="#EF2411" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="297.1" y="149" fill="#F56F18" rx="2" ry="2"/></g><g><title>[ld-2.22.so] (74 samples, 1.42%)</title><rect width="16.8" height="15" x="13.6" y="581" fill="#DD1F01" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000" y="389" fill="#CDDE2D" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt (5 samples, 0.10%)</title><rect width="1.1" height="15" x="882.5" y="245" fill="#D39325" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1002.8" y="421" fill="#E1A615" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087" y="197" fill="#DA9A1B" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".2" height="15" x="826.9" y="133" fill="#D8D007" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="283.3" y="213" fill="#E56822" rx="2" ry="2"/></g><g><title>[unknown] (20 samples, 0.38%)</title><rect width="4.5" height="15" x="88.1" y="373" fill="#CFC827" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="854.3" y="165" fill="#E5301A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (2 samples, 0.04%)</title><rect width=".5" height="15" x="830.9" y="181" fill="#F32E02" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.04%)</title><rect width=".4" height="15" x="250.4" y="213" fill="#DECE0C" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="799.4" y="245" fill="#E05824" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="397.7" y="293" fill="#F38115" rx="2" ry="2"/></g><g><title>Node::findVariableValue (10 samples, 0.19%)</title><rect width="2.3" height="15" x="796.9" y="245" fill="#D68F0A" rx="2" ry="2"/></g><g><title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="286.2" y="213" fill="#D57427" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (2 samples, 0.04%)</title><rect width=".4" height="15" x="680.7" y="229" fill="#CE0A19" rx="2" ry="2"/></g><g><title>std::_Head_base&lt;0ul, RepeatBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="165" fill="#E50408" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (7 samples, 0.13%)</title><rect width="1.6" height="15" x="261.7" y="245" fill="#FD5D05" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1085.4" y="517" fill="#D70E02" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;Expression, std::default_delete&lt;Expression&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.5" y="421" fill="#DBAB14" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (4 samples, 0.08%)</title><rect width=".9" height="15" x="864.8" y="149" fill="#E9200E" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (1 samples, 0.02%)</title><rect width=".3" height="15" x="997.5" y="341" fill="#F7AA33" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (2 samples, 0.04%)</title><rect width=".5" height="15" x="1006.8" y="373" fill="#D21A23" rx="2" ry="2"/></g><g><title>EcfFile::remove_nopp_end_tokens (4 samples, 0.08%)</title><rect width=".9" height="15" x="288.3" y="341" fill="#CE862E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.08%)</title><rect width=".9" height="15" x="1055" y="261" fill="#EB6A10" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (29 samples, 0.56%)</title><rect width="6.6" height="15" x="747.6" y="245" fill="#EF6705" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".2" height="15" x="674.1" y="181" fill="#F03814" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (5 samples, 0.10%)</title><rect width="1.1" height="15" x="556.8" y="229" fill="#DC631F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.2" y="309" fill="#DD411E" rx="2" ry="2"/></g><g><title>std::istream::sentry::sentry (13 samples, 0.25%)</title><rect width="3" height="15" x="164.1" y="565" fill="#FA5320" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1058.4" y="373" fill="#D6160B" rx="2" ry="2"/></g><g><title>NodeContainer::resolveDependencies (274 samples, 5.27%)</title><rect width="62.2" height="15" x="246" y="421" fill="#D02E36" rx="2" ry="2"/><text x="249.05" y="431.5">NodeCo..</text></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="266.5" y="133" fill="#DFAC14" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="1030.4" y="325" fill="#FE810D" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1045" y="245" fill="#F9162A" rx="2" ry="2"/></g><g><title>std::__make_move_if_noexcept_iterator&lt;Variable, std::move_iterator&lt;Variable*&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="240.1" y="405" fill="#D24027" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="978.2" y="277" fill="#E22E2B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="391.8" y="277" fill="#EA8703" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect width=".5" height="15" x="275.3" y="165" fill="#F4AB33" rx="2" ry="2"/></g><g><title>boost::date_time::date&lt;boost::gregorian::date, boost::gregorian::gregorian_calendar, boost::gregorian::date_duration&gt;::date (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.6" y="389" fill="#F05A36" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".2" height="15" x="333.2" y="277" fill="#E9C708" rx="2" ry="2"/></g><g><title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.9" y="373" fill="#D01617" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="1032.9" y="325" fill="#CF7130" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (2 samples, 0.04%)</title><rect width=".4" height="15" x="722" y="245" fill="#F4BA0E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (11 samples, 0.21%)</title><rect width="2.5" height="15" x="928.8" y="277" fill="#DF3611" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1041.1" y="277" fill="#F3290C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.7" y="373" fill="#F72733" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="935.3" y="325" fill="#CD6C25" rx="2" ry="2"/></g><g><title>std::__shared_ptr&lt;Task, (4 samples, 0.08%)</title><rect width=".9" height="15" x="240.4" y="389" fill="#D94535" rx="2" ry="2"/></g><g><title>Node::variable_dollar_subsitution (1 samples, 0.02%)</title><rect width=".2" height="15" x="1033.4" y="341" fill="#F55B2D" rx="2" ry="2"/></g><g><title>ecf::Log::log (3 samples, 0.06%)</title><rect width=".7" height="15" x="972.1" y="341" fill="#E41B06" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (1 samples, 0.02%)</title><rect width=".3" height="15" x="304.8" y="181" fill="#F24322" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1006.8" y="389" fill="#DBB90B" rx="2" ry="2"/></g><g><title>Variable::EMPTY (1 samples, 0.02%)</title><rect width=".3" height="15" x="394" y="261" fill="#EE4421" rx="2" ry="2"/></g><g><title>SubGenVariables::update_static_generated_variables (4 samples, 0.08%)</title><rect width=".9" height="15" x="315.5" y="373" fill="#F8522B" rx="2" ry="2"/></g><g><title>std::vector&lt;PartExpression, std::allocator&lt;PartExpression&gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".3" height="15" x="239.2" y="405" fill="#D5CC01" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (3 samples, 0.06%)</title><rect width=".7" height="15" x="554.7" y="245" fill="#F39933" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".3" height="15" x="142.5" y="485" fill="#E52A01" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (17 samples, 0.33%)</title><rect width="3.9" height="15" x="1162.3" y="581" fill="#CDB105" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect width=".2" height="15" x="935.8" y="341" fill="#DD8804" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="872" y="181" fill="#DAE225" rx="2" ry="2"/></g><g><title>Node::findVariableValue (5 samples, 0.10%)</title><rect width="1.1" height="15" x="290.1" y="293" fill="#E5A02F" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="853.4" y="165" fill="#DAD32A" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="291.4" y="277" fill="#FB5D31" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".2" height="15" x="306.2" y="245" fill="#E08C24" rx="2" ry="2"/></g><g><title>EcfFile::extract_ecfmicro (1 samples, 0.02%)</title><rect width=".2" height="15" x="251.5" y="293" fill="#F1801E" rx="2" ry="2"/></g><g><title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="933.3" y="261" fill="#E61A13" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="1027.7" y="389" fill="#F93D1D" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="437" fill="#D03814" rx="2" ry="2"/></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::empty (4 samples, 0.08%)</title><rect width=".9" height="15" x="592.9" y="341" fill="#D49109" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="315" y="325" fill="#E25336" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="579.9" y="341" fill="#F06306" rx="2" ry="2"/></g><g><title>Submittable::update_generated_variables (2 samples, 0.04%)</title><rect width=".5" height="15" x="246" y="341" fill="#FDA728" rx="2" ry="2"/></g><g><title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000" y="357" fill="#DC5A16" rx="2" ry="2"/></g><g><title>Family::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="1023.9" y="341" fill="#CD0C2D" rx="2" ry="2"/></g><g><title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect width=".2" height="15" x="167.5" y="517" fill="#F0CE2D" rx="2" ry="2"/></g><g><title>std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;::operator++ (1 samples, 0.02%)</title><rect width=".2" height="15" x="804.6" y="133" fill="#E18102" rx="2" ry="2"/></g><g><title>IncludeFileCache::path[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="831.4" y="197" fill="#E39808" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect width=".2" height="15" x="333.2" y="293" fill="#FA1618" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (6 samples, 0.12%)</title><rect width="1.4" height="15" x="639.6" y="293" fill="#CD8D04" rx="2" ry="2"/></g><g><title>NodeContainer::check (6 samples, 0.12%)</title><rect width="1.3" height="15" x="235.4" y="485" fill="#D9AC2E" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="249.4" y="213" fill="#E2D422" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="1058.4" y="357" fill="#FDD61D" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::erase (3 samples, 0.06%)</title><rect width=".7" height="15" x="349.1" y="357" fill="#E7AE27" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="405.1" y="277" fill="#FBA634" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1038.2" y="277" fill="#FBBA1F" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="914.9" y="213" fill="#E03D0A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="782.4" y="197" fill="#D95B21" rx="2" ry="2"/></g><g><title>[perf_job_gen] (1 samples, 0.02%)</title><rect width=".2" height="15" x="683" y="245" fill="#EE132E" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1025.2" y="357" fill="#D68628" rx="2" ry="2"/></g><g><title>boost::detail::lexical_converter_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;::try_convert (1 samples, 0.02%)</title><rect width=".2" height="15" x="315.3" y="309" fill="#E16915" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.08%)</title><rect width=".9" height="15" x="1052" y="213" fill="#E36730" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (1 samples, 0.02%)</title><rect width=".2" height="15" x="997.1" y="309" fill="#F32122" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="1030.2" y="325" fill="#EFD82D" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (28 samples, 0.54%)</title><rect width="6.4" height="15" x="801.2" y="245" fill="#DE3B17" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*&amp;, long&gt; (20 samples, 0.38%)</title><rect width="4.5" height="15" x="802.8" y="213" fill="#FBE432" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="279" y="133" fill="#FB2C15" rx="2" ry="2"/></g><g><title>std::__niter_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="998.9" y="293" fill="#D96110" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;Node&gt;, std::allocator&lt;std::shared_ptr&lt;Node&gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.9" y="469" fill="#DD6F2B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect width=".2" height="15" x="931.5" y="325" fill="#DD231C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="935.1" y="293" fill="#EFB504" rx="2" ry="2"/></g><g><title>Node::resolveDependencies (3 samples, 0.06%)</title><rect width=".7" height="15" x="308.9" y="421" fill="#D1D127" rx="2" ry="2"/></g><g><title>std::enable_shared_from_this&lt;Node&gt;::enable_shared_from_this (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="277" fill="#DA9132" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="357" fill="#D39E1D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (1 samples, 0.02%)</title><rect width=".2" height="15" x="1183.4" y="581" fill="#D4A910" rx="2" ry="2"/></g><g><title>[unknown] (51 samples, 0.98%)</title><rect width="11.5" height="15" x="215" y="533" fill="#CF4813" rx="2" ry="2"/></g><g><title>Node::get_late (1 samples, 0.02%)</title><rect width=".3" height="15" x="1069" y="485" fill="#D8800D" rx="2" ry="2"/></g><g><title>__libc_start_main (3,703 samples, 71.23%)</title><rect width="840.5" height="15" x="233.3" y="581" fill="#D28735" rx="2" ry="2"/><text x="236.34" y="591.5">__libc_start_main</text></g><g><title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="972.6" y="309" fill="#D3CF11" rx="2" ry="2"/></g><g><title>Suite::resolveDependencies (3,647 samples, 70.15%)</title><rect width="827.8" height="15" x="245.8" y="533" fill="#EBD22B" rx="2" ry="2"/><text x="248.82" y="543.5">Suite::resolveDependencies</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (38 samples, 0.73%)</title><rect width="8.6" height="15" x="870" y="213" fill="#D84C0C" rx="2" ry="2"/></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect width=".2" height="15" x="1112.6" y="565" fill="#F22918" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="263.7" y="229" fill="#E86C0C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char const*, void&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="878.8" y="213" fill="#D0B71C" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::operator* (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.6" y="229" fill="#DE9C0B" rx="2" ry="2"/></g><g><title>_dl_map_object (9 samples, 0.17%)</title><rect width="2.1" height="15" x="1085.1" y="581" fill="#CDC02B" rx="2" ry="2"/></g><g><title>ServerState::find_variable (3 samples, 0.06%)</title><rect width=".7" height="15" x="987.1" y="357" fill="#DA512D" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (15 samples, 0.29%)</title><rect width="3.4" height="15" x="393.8" y="277" fill="#E88133" rx="2" ry="2"/></g><g><title>TaskParser::addTask (1 samples, 0.02%)</title><rect width=".2" height="15" x="237.2" y="437" fill="#FBE20F" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (1 samples, 0.02%)</title><rect width=".3" height="15" x="304.1" y="165" fill="#DB1508" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1085.4" y="485" fill="#F11411" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect width=".2" height="15" x="651.9" y="309" fill="#D38D2F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect width=".2" height="15" x="266" y="165" fill="#E7960C" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="286.9" y="261" fill="#DE6302" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="574.2" y="309" fill="#FA062D" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;ecf::LateAttr, std::default_delete&lt;ecf::LateAttr&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".3" height="15" x="1069" y="469" fill="#E2690D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="865" y="37" fill="#F96015" rx="2" ry="2"/></g><g><title>Node::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="561.3" y="293" fill="#F24204" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="325" fill="#D5C305" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1073.3" y="405" fill="#E14406" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="259.7" y="245" fill="#DB0A27" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect width=".6" height="15" x="888.4" y="261" fill="#D12C2C" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;Expression, std::default_delete&lt;Expression&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.5" y="405" fill="#D4841E" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (8 samples, 0.15%)</title><rect width="1.8" height="15" x="261.7" y="261" fill="#E0B02D" rx="2" ry="2"/></g><g><title>NodeContainer::get_all_nodes (2 samples, 0.04%)</title><rect width=".5" height="15" x="234.9" y="517" fill="#F5B315" rx="2" ry="2"/></g><g><title>std::advance&lt;char const*, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="351.8" y="325" fill="#F94118" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (3 samples, 0.06%)</title><rect width=".7" height="15" x="1047" y="277" fill="#D7BA0F" rx="2" ry="2"/></g><g><title>[unknown] (26 samples, 0.50%)</title><rect width="5.9" height="15" x="220.6" y="485" fill="#ED8902" rx="2" ry="2"/></g><g><title>Node::findVariableValue (55 samples, 1.06%)</title><rect width="12.5" height="15" x="1010" y="357" fill="#E30B2D" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (22 samples, 0.42%)</title><rect width="5" height="15" x="641.4" y="293" fill="#F76230" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;ecf::LateAttr, std::default_delete&lt;ecf::LateAttr&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".2" height="15" x="308.7" y="405" fill="#E03804" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (44 samples, 0.85%)</title><rect width="10" height="15" x="712" y="245" fill="#CFB604" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="1061.8" y="405" fill="#D7E005" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="803" y="197" fill="#CD5302" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.2" y="245" fill="#F4B922" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;AstTop, std::default_delete&lt;AstTop&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.3" y="389" fill="#E35F30" rx="2" ry="2"/></g><g><title>Node::findReferencedNode (4 samples, 0.08%)</title><rect width=".9" height="15" x="235.4" y="325" fill="#F93724" rx="2" ry="2"/></g><g><title>std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (24 samples, 0.46%)</title><rect width="5.4" height="15" x="364.3" y="325" fill="#E23333" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1054.3" y="277" fill="#FDC718" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (2 samples, 0.04%)</title><rect width=".5" height="15" x="878.8" y="229" fill="#EBAA21" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect width=".7" height="15" x="261" y="293" fill="#D8A135" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1052" y="197" fill="#F26315" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="295.1" y="261" fill="#ECD810" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (4 samples, 0.08%)</title><rect width="1" height="15" x="254.4" y="245" fill="#D7A11E" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (1 samples, 0.02%)</title><rect width=".3" height="15" x="1070.8" y="373" fill="#CDA41E" rx="2" ry="2"/></g><g><title>[unknown] (58 samples, 1.12%)</title><rect width="13.1" height="15" x="188.2" y="453" fill="#F9742B" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".2" height="15" x="806.9" y="181" fill="#F74610" rx="2" ry="2"/></g><g><title>std::make_shared&lt;Family, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="437" fill="#D2D01F" rx="2" ry="2"/></g><g><title>AstRoot::accept (4 samples, 0.08%)</title><rect width=".9" height="15" x="235.4" y="389" fill="#FBC513" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (2 samples, 0.04%)</title><rect width=".4" height="15" x="302.8" y="229" fill="#F7391E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="1056.5" y="277" fill="#F85824" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect width=".2" height="15" x="978.9" y="309" fill="#D52119" rx="2" ry="2"/></g><g><title>EcfFile::create_job[abi:cxx11] (259 samples, 4.98%)</title><rect width="58.8" height="15" x="1003.2" y="421" fill="#F00328" rx="2" ry="2"/><text x="1006.21" y="431.5">EcfFil..</text></g><g><title>Submittable::increment_try_no (2 samples, 0.04%)</title><rect width=".5" height="15" x="1002.3" y="453" fill="#E39A08" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::is_special (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000.9" y="293" fill="#E4B10A" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="182.3" y="469" fill="#F8110E" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (1,227 samples, 23.60%)</title><rect width="278.5" height="15" x="652.8" y="325" fill="#D0BC01" rx="2" ry="2"/><text x="655.77" y="335.5">PreProcessor::preProcess</text></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="405" fill="#D9A70E" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (4 samples, 0.08%)</title><rect width=".9" height="15" x="554.5" y="277" fill="#FD8921" rx="2" ry="2"/></g><g><title>_IO_vsprintf (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="229" fill="#EE962A" rx="2" ry="2"/></g><g><title>NodeContainer::resolveDependencies (3,331 samples, 64.07%)</title><rect width="756" height="15" x="245.8" y="453" fill="#EFD401" rx="2" ry="2"/><text x="248.82" y="463.5">NodeContainer::resolveDependencies</text></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="878.1" y="181" fill="#DE7115" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="651" y="277" fill="#F02634" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::base (1 samples, 0.02%)</title><rect width=".2" height="15" x="540" y="293" fill="#EF5105" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.04%)</title><rect width=".5" height="15" x="679.3" y="181" fill="#F7B817" rx="2" ry="2"/></g><g><title>Repeat::empty (3 samples, 0.06%)</title><rect width=".7" height="15" x="979.6" y="325" fill="#FD9C2F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="280.8" y="69" fill="#FCB904" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (1 samples, 0.02%)</title><rect width=".3" height="15" x="1073.3" y="437" fill="#E66A34" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (2 samples, 0.04%)</title><rect width=".5" height="15" x="979.8" y="293" fill="#D43B28" rx="2" ry="2"/></g><g><title>Node::repeat (3 samples, 0.06%)</title><rect width=".7" height="15" x="530.4" y="325" fill="#D5D91F" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="615.3" y="229" fill="#EF7735" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="310.3" y="373" fill="#E6AC07" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="973.5" y="293" fill="#FC5D09" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="284.6" y="309" fill="#EB5820" rx="2" ry="2"/></g><g><title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.4" y="293" fill="#FB8807" rx="2" ry="2"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".2" height="15" x="997.8" y="357" fill="#DD5A1F" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@plt (7 samples, 0.13%)</title><rect width="1.6" height="15" x="202.7" y="581" fill="#D2AA13" rx="2" ry="2"/></g><g><title>[unknown] (47 samples, 0.90%)</title><rect width="10.6" height="15" x="215.9" y="517" fill="#ED9213" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="801.4" y="229" fill="#F8E02D" rx="2" ry="2"/></g><g><title>Submittable::update_generated_variables (32 samples, 0.62%)</title><rect width="7.3" height="15" x="309.6" y="405" fill="#F28F06" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="46.8" y="485" fill="#D95011" rx="2" ry="2"/></g><g><title>__xstat64 (13 samples, 0.25%)</title><rect width="3" height="15" x="45.6" y="549" fill="#E3C30B" rx="2" ry="2"/></g><g><title>open_path (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1085.6" y="565" fill="#D6B900" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".3" height="15" x="1113.7" y="581" fill="#F0C915" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (34 samples, 0.65%)</title><rect width="7.8" height="15" x="1048.1" y="309" fill="#E32C00" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="1022.3" y="341" fill="#D73404" rx="2" ry="2"/></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="973.5" y="261" fill="#F46613" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="970.1" y="325" fill="#D39827" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.9" y="421" fill="#D77107" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (40 samples, 0.77%)</title><rect width="9.1" height="15" x="670.7" y="197" fill="#E2BE0F" rx="2" ry="2"/></g><g><title>std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="288.7" y="245" fill="#E6AB03" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.4" y="309" fill="#FA8E26" rx="2" ry="2"/></g><g><title>JobsParam::set_ecf_file (2 samples, 0.04%)</title><rect width=".4" height="15" x="286" y="325" fill="#DD6901" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1023" y="341" fill="#EC3D18" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt;::_M_head (3 samples, 0.06%)</title><rect width=".7" height="15" x="396.3" y="181" fill="#F2042D" rx="2" ry="2"/></g><g><title>boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt;::counted_time_rep (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000.9" y="325" fill="#F75035" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1025" y="341" fill="#D64C07" rx="2" ry="2"/></g><g><title>DefsStructureParser::doParse (46 samples, 0.88%)</title><rect width="10.4" height="15" x="235.4" y="533" fill="#E6AE35" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (2 samples, 0.04%)</title><rect width=".5" height="15" x="382.9" y="341" fill="#EB9232" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".4" height="15" x="934" y="261" fill="#F15034" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="283.7" y="165" fill="#F3C830" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (4 samples, 0.08%)</title><rect width=".9" height="15" x="843" y="197" fill="#E37C20" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="827.8" y="133" fill="#D59110" rx="2" ry="2"/></g><g><title>memcmp@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="560.4" y="261" fill="#E0A62A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (3 samples, 0.06%)</title><rect width=".7" height="15" x="282.6" y="197" fill="#FD5C1D" rx="2" ry="2"/></g><g><title>boost::gregorian::greg_month::operator unsigned short (1 samples, 0.02%)</title><rect width=".2" height="15" x="1000.7" y="325" fill="#DE2636" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="992.1" y="357" fill="#ECB915" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.7" y="405" fill="#CD9509" rx="2" ry="2"/></g><g><title>ecf::AstResolveVisitor::visitNode (4 samples, 0.08%)</title><rect width=".9" height="15" x="235.4" y="357" fill="#F3460D" rx="2" ry="2"/></g><g><title>Node::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="252.4" y="229" fill="#E8E214" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1052.9" y="213" fill="#EF3001" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.2" y="293" fill="#E61734" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (2 samples, 0.04%)</title><rect width=".4" height="15" x="296.9" y="213" fill="#E44F15" rx="2" ry="2"/></g><g><title>Suite::begin (6 samples, 0.12%)</title><rect width="1.4" height="15" x="233.3" y="533" fill="#FE141D" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (3 samples, 0.06%)</title><rect width=".6" height="15" x="1023.9" y="357" fill="#F9A72F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (5 samples, 0.10%)</title><rect width="1.2" height="15" x="995.9" y="309" fill="#F5D80F" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1057.9" y="341" fill="#ED7D06" rx="2" ry="2"/></g><g><title>Suite::findGenVariable (19 samples, 0.37%)</title><rect width="4.3" height="15" x="561.3" y="309" fill="#FEA914" rx="2" ry="2"/></g><g><title>NodeContainer::get_all_nodes (2 samples, 0.04%)</title><rect width=".5" height="15" x="234.9" y="533" fill="#F16225" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="227.4" y="533" fill="#ECAB01" rx="2" ry="2"/></g><g><title>std::cend&lt;boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="241.7" y="453" fill="#F0BB04" rx="2" ry="2"/></g><g><title>Variable::EMPTY (1 samples, 0.02%)</title><rect width=".2" height="15" x="1009.6" y="309" fill="#F32801" rx="2" ry="2"/></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (3 samples, 0.06%)</title><rect width=".6" height="15" x="231.1" y="581" fill="#D52D1C" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="798" y="229" fill="#EFB028" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".4" height="15" x="998" y="357" fill="#E31828" rx="2" ry="2"/></g><g><title>std::_Sp_counted_ptr_inplace&lt;Task, std::allocator&lt;Task&gt;, (2 samples, 0.04%)</title><rect width=".5" height="15" x="240.6" y="357" fill="#E5E215" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="292.1" y="245" fill="#F3C514" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".2" height="15" x="868.6" y="213" fill="#F67735" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1045" y="277" fill="#EAC90D" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (3 samples, 0.06%)</title><rect width=".7" height="15" x="987.8" y="357" fill="#F66509" rx="2" ry="2"/></g><g><title>strlen@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="54.9" y="549" fill="#E05310" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="238.6" y="421" fill="#E1C804" rx="2" ry="2"/></g><g><title>NodeContainer::getAllTasks (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="469" fill="#F67A1A" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="288" y="325" fill="#F57F27" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (2 samples, 0.04%)</title><rect width=".5" height="15" x="707" y="245" fill="#DDA003" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (6 samples, 0.12%)</title><rect width="1.4" height="15" x="760.1" y="245" fill="#F29506" rx="2" ry="2"/></g><g><title>std::__shared_ptr&lt;Family, (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="389" fill="#FC2E1A" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (9 samples, 0.17%)</title><rect width="2" height="15" x="303.5" y="245" fill="#D74A0E" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;Expression, std::default_delete&lt;Expression&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.5" y="389" fill="#D40617" rx="2" ry="2"/></g><g><title>memcmp@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="393.6" y="261" fill="#CD3912" rx="2" ry="2"/></g><g><title>ecf::Str::ECF_INCLUDE[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="906.5" y="277" fill="#E59835" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="852.5" y="197" fill="#DA3C18" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="561.3" y="277" fill="#DCA236" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;Node&gt;, std::allocator&lt;std::shared_ptr&lt;Node&gt; &gt; &gt;::emplace_back&lt;std::shared_ptr&lt;Node&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.9" y="453" fill="#F8E322" rx="2" ry="2"/></g><g><title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="672.1" y="181" fill="#F60634" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="1059.5" y="373" fill="#F91D0E" rx="2" ry="2"/></g><g><title>Node::parent (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.6" y="277" fill="#DCD92C" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1072.9" y="437" fill="#FCDD18" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (9 samples, 0.17%)</title><rect width="2" height="15" x="847.5" y="181" fill="#FE9827" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (9 samples, 0.17%)</title><rect width="2.1" height="15" x="1013.6" y="341" fill="#FA4720" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".3" height="15" x="233.3" y="437" fill="#F4011C" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="991.4" y="341" fill="#E1A121" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1056.1" y="293" fill="#EA9000" rx="2" ry="2"/></g><g><title>ServerState::find_variable (29 samples, 0.56%)</title><rect width="6.6" height="15" x="536.1" y="325" fill="#F69520" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (3 samples, 0.06%)</title><rect width=".7" height="15" x="299.6" y="213" fill="#F70C17" rx="2" ry="2"/></g><g><title>Node::findVariableValue (496 samples, 9.54%)</title><rect width="112.5" height="15" x="417.9" y="325" fill="#EFAF17" rx="2" ry="2"/><text x="420.86" y="335.5">Node::findVar..</text></g><g><title>Node::isAlias (1 samples, 0.02%)</title><rect width=".3" height="15" x="852.7" y="213" fill="#F00727" rx="2" ry="2"/></g><g><title>__xstat64 (42 samples, 0.81%)</title><rect width="9.5" height="15" x="32.7" y="533" fill="#D1D71A" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1053.1" y="213" fill="#DD8329" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="308" y="293" fill="#F52A15" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, Expression*, std::default_delete&lt;Expression&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.5" y="373" fill="#E0DF16" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.02%)</title><rect width=".3" height="15" x="316.6" y="373" fill="#D4C706" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="305.1" y="149" fill="#F5992F" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.3" y="421" fill="#E68E35" rx="2" ry="2"/></g><g><title>std::shared_ptr&lt;Node&gt;::shared_ptr (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.9" y="405" fill="#D46B25" rx="2" ry="2"/></g><g><title>[unknown] (21 samples, 0.40%)</title><rect width="4.7" height="15" x="196.6" y="341" fill="#D0C718" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (51 samples, 0.98%)</title><rect width="11.5" height="15" x="957.4" y="309" fill="#D80626" rx="2" ry="2"/></g><g><title>ecf::File::create (2 samples, 0.04%)</title><rect width=".4" height="15" x="1003.9" y="389" fill="#DCAD35" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (1 samples, 0.02%)</title><rect width=".3" height="15" x="287.1" y="293" fill="#E22D12" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (4 samples, 0.08%)</title><rect width=".9" height="15" x="472.3" y="309" fill="#CF720D" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1024.8" y="341" fill="#DB832C" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.8" y="309" fill="#DFB731" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (1 samples, 0.02%)</title><rect width=".2" height="15" x="1030" y="325" fill="#F30013" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="872.5" y="165" fill="#FDC301" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (2 samples, 0.04%)</title><rect width=".4" height="15" x="248.1" y="293" fill="#CFE435" rx="2" ry="2"/></g><g><title>EcfFile::removeCommentAndManual (1 samples, 0.02%)</title><rect width=".3" height="15" x="288" y="341" fill="#DA1D1F" rx="2" ry="2"/></g><g><title>Task::handleStateChange (2 samples, 0.04%)</title><rect width=".5" height="15" x="286.4" y="309" fill="#D48126" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (1 samples, 0.02%)</title><rect width=".2" height="15" x="655.5" y="293" fill="#FA1A0B" rx="2" ry="2"/></g><g><title>boost::date_time::time_duration&lt;boost::posix_time::time_duration, boost::date_time::time_resolution_traits&lt;boost::date_time::time_resolution_traits_adapted64_impl, (3 samples, 0.06%)</title><rect width=".7" height="15" x="971.2" y="357" fill="#EB9819" rx="2" ry="2"/></g><g><title>ecf::File::splitFileIntoLines (1 samples, 0.02%)</title><rect width=".2" height="15" x="247.4" y="293" fill="#F3B734" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (9 samples, 0.17%)</title><rect width="2" height="15" x="918.1" y="261" fill="#E88D19" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (2 samples, 0.04%)</title><rect width=".4" height="15" x="268.1" y="181" fill="#E7C333" rx="2" ry="2"/></g><g><title>ecf::File::splitFileIntoLines (2 samples, 0.04%)</title><rect width=".5" height="15" x="1004.3" y="389" fill="#D9D81B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="333.2" y="325" fill="#D6C006" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="855.7" y="165" fill="#CFB108" rx="2" ry="2"/></g><g><title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="829.8" y="117" fill="#D7592B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.5" y="405" fill="#CE6213" rx="2" ry="2"/></g><g><title>boost::gregorian::date::date (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.6" y="405" fill="#FE4925" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="544.1" y="325" fill="#E75F03" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect width=".2" height="15" x="998.7" y="277" fill="#E63413" rx="2" ry="2"/></g><g><title>EcfFile::countEcfMicro (5 samples, 0.10%)</title><rect width="1.1" height="15" x="606.5" y="341" fill="#FCAE04" rx="2" ry="2"/></g><g><title>std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="288.7" y="293" fill="#FD8F2B" rx="2" ry="2"/></g><g><title>Node::add_label (1 samples, 0.02%)</title><rect width=".2" height="15" x="239" y="437" fill="#E3B70F" rx="2" ry="2"/></g><g><title>std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="364.3" y="277" fill="#F0C80F" rx="2" ry="2"/></g><g><title>Submittable::submit_job_only (290 samples, 5.58%)</title><rect width="65.8" height="15" x="1002.8" y="453" fill="#DFDF09" rx="2" ry="2"/><text x="1005.75" y="463.5">Submitt..</text></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="866.1" y="133" fill="#E58F09" rx="2" ry="2"/></g><g><title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="248.5" y="245" fill="#D84515" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="978.2" y="309" fill="#CE5712" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.06%)</title><rect width=".7" height="15" x="365.4" y="277" fill="#E07E08" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.2" y="405" fill="#FC6C2E" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="181" fill="#DD942D" rx="2" ry="2"/></g><g><title>operator delete (1 samples, 0.02%)</title><rect width=".2" height="15" x="914.7" y="213" fill="#F97C2A" rx="2" ry="2"/></g><g><title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect width=".3" height="15" x="1188.6" y="581" fill="#EB821C" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="344.1" y="325" fill="#DDC633" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::deallocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="305.7" y="181" fill="#D92608" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.06%)</title><rect width=".7" height="15" x="282.6" y="165" fill="#E91029" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="879.5" y="229" fill="#D43422" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (9 samples, 0.17%)</title><rect width="2" height="15" x="331.2" y="341" fill="#EC291E" rx="2" ry="2"/></g><g><title>boost::date_time::base_time&lt;boost::posix_time::ptime, boost::date_time::counted_time_system&lt;boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt; &gt; &gt;::operator- (1 samples, 0.02%)</title><rect width=".2" height="15" x="1001.2" y="405" fill="#D70434" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (4 samples, 0.08%)</title><rect width=".9" height="15" x="52" y="549" fill="#F41A33" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;Task&gt; &gt;::construct&lt;Task, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="240.6" y="341" fill="#F9C900" rx="2" ry="2"/></g><g><title>Family::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="309" fill="#D29003" rx="2" ry="2"/></g><g><title>NodeContainer::get_all_nodes (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.9" y="501" fill="#CE972C" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.2" height="15" x="942.2" y="357" fill="#DAA009" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="874.3" y="165" fill="#D05A12" rx="2" ry="2"/></g><g><title>new_do_write (3 samples, 0.06%)</title><rect width=".7" height="15" x="1161.6" y="581" fill="#FD7C0A" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (43 samples, 0.83%)</title><rect width="9.8" height="15" x="296.2" y="261" fill="#FE4521" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.2" y="229" fill="#DDC40D" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="1024.5" y="341" fill="#F7C91F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="921" y="261" fill="#F09A11" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".4" height="15" x="1035.9" y="229" fill="#F8E436" rx="2" ry="2"/></g><g><title>std::stack&lt;std::pair&lt;Node*, Parser const*&gt;, std::deque&lt;std::pair&lt;Node*, Parser const*&gt;, std::allocator&lt;std::pair&lt;Node*, Parser const*&gt; &gt; &gt; &gt;::top (1 samples, 0.02%)</title><rect width=".3" height="15" x="245.1" y="485" fill="#F86E25" rx="2" ry="2"/></g><g><title>[libstdc++.so.6.0.24] (2 samples, 0.04%)</title><rect width=".5" height="15" x="30.4" y="565" fill="#D1B60C" rx="2" ry="2"/></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~map (1 samples, 0.02%)</title><rect width=".2" height="15" x="981" y="357" fill="#D3B734" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="803.9" y="181" fill="#F9042D" rx="2" ry="2"/></g><g><title>SubGenVariables::update_dynamic_generated_variables (2 samples, 0.04%)</title><rect width=".5" height="15" x="246" y="309" fill="#F34C1D" rx="2" ry="2"/></g><g><title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="966.7" y="277" fill="#CE690A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (2 samples, 0.04%)</title><rect width=".4" height="15" x="806.7" y="197" fill="#F2AA05" rx="2" ry="2"/></g><g><title>IncludeFileCache::path[abi:cxx11] (8 samples, 0.15%)</title><rect width="1.9" height="15" x="681.1" y="245" fill="#D43A23" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".3" height="15" x="287.1" y="277" fill="#E87330" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="879.7" y="181" fill="#EB272C" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1008.2" y="373" fill="#D49920" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="1032" y="325" fill="#D1732B" rx="2" ry="2"/></g><g><title>ecf::theComputedNodeState&lt;std::shared_ptr&lt;Suite&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="286.4" y="181" fill="#F94F1C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="1058.4" y="389" fill="#F32F05" rx="2" ry="2"/></g><g><title>SubGenVariables::update_dynamic_generated_variables (14 samples, 0.27%)</title><rect width="3.2" height="15" x="312.3" y="373" fill="#E79F04" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (22 samples, 0.42%)</title><rect width="5" height="15" x="297.8" y="229" fill="#E65C10" rx="2" ry="2"/></g><g><title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="248.5" y="213" fill="#E6302F" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (1 samples, 0.02%)</title><rect width=".2" height="15" x="277.6" y="133" fill="#E9D605" rx="2" ry="2"/></g><g><title>[unknown] (31 samples, 0.60%)</title><rect width="7" height="15" x="35.2" y="453" fill="#FE3F1E" rx="2" ry="2"/></g><g><title>boost::conversion::detail::try_lexical_convert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (5 samples, 0.10%)</title><rect width="1.2" height="15" x="320.9" y="341" fill="#E07534" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="303" y="213" fill="#E3A021" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1064.3" y="357" fill="#EC6025" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1064.7" y="357" fill="#EA7700" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".2" height="15" x="911.1" y="245" fill="#F85005" rx="2" ry="2"/></g><g><title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1007.7" y="293" fill="#D3C632" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="264" y="229" fill="#DB1D22" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (24 samples, 0.46%)</title><rect width="5.4" height="15" x="555.9" y="309" fill="#FD5713" rx="2" ry="2"/></g><g><title>SubGenVariables::update_generated_variables (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.3" y="453" fill="#D93D1E" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1068.3" y="309" fill="#F0500C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect width=".2" height="15" x="973.5" y="309" fill="#CFBF24" rx="2" ry="2"/></g><g><title>_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="687.3" y="245" fill="#F66618" rx="2" ry="2"/></g><g><title>NodeContainer::computedState (1 samples, 0.02%)</title><rect width=".2" height="15" x="286.7" y="261" fill="#D05429" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="917.9" y="245" fill="#DC0425" rx="2" ry="2"/></g><g><title>ecf::Str::split (4 samples, 0.08%)</title><rect width=".9" height="15" x="864.8" y="165" fill="#CF9311" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (742 samples, 14.27%)</title><rect width="168.4" height="15" x="383.4" y="341" fill="#EABD07" rx="2" ry="2"/><text x="386.36" y="351.5">Node::findParentVaria..</text></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="907.7" y="261" fill="#F78112" rx="2" ry="2"/></g><g><title>Submittable::update_limits (2 samples, 0.04%)</title><rect width=".4" height="15" x="973.5" y="357" fill="#CECE2E" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="602.6" y="325" fill="#CD782B" rx="2" ry="2"/></g><g><title>Node::findGenVariable (4 samples, 0.08%)</title><rect width=".9" height="15" x="554.5" y="293" fill="#F73E32" rx="2" ry="2"/></g><g><title>std::forward&lt;char const*&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="244.5" y="405" fill="#CE700E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="332.1" y="293" fill="#EEE41D" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::capacity (1 samples, 0.02%)</title><rect width=".2" height="15" x="831.2" y="165" fill="#DE3D34" rx="2" ry="2"/></g><g><title>boost::detail::lexical_istream_limited_src&lt;char, std::char_traits&lt;char&gt;, false, 40ul&gt;::shl_unsigned&lt;unsigned long&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="321.2" y="293" fill="#D3732B" rx="2" ry="2"/></g><g><title>std::__iterator_category&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000" y="341" fill="#D37B06" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.9" y="117" fill="#F6E008" rx="2" ry="2"/></g><g><title>Node::findGenVariable (17 samples, 0.33%)</title><rect width="3.9" height="15" x="393.8" y="293" fill="#D9AF1A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="559.3" y="277" fill="#DC1808" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (7 samples, 0.13%)</title><rect width="1.6" height="15" x="271.7" y="181" fill="#E48A0A" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::operator* (2 samples, 0.04%)</title><rect width=".4" height="15" x="537.5" y="309" fill="#FDA60B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (2 samples, 0.04%)</title><rect width=".4" height="15" x="1007.3" y="389" fill="#DE3A30" rx="2" ry="2"/></g><g><title>boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt;::counted_time_rep (1 samples, 0.02%)</title><rect width=".2" height="15" x="1001.4" y="341" fill="#D83228" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="246" y="213" fill="#F50018" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (59 samples, 1.13%)</title><rect width="13.3" height="15" x="553.4" y="325" fill="#E09C26" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".3" height="15" x="1085.1" y="549" fill="#F92B2D" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="244.9" y="469" fill="#F2E31A" rx="2" ry="2"/></g><g><title>Node::triggerAst (2 samples, 0.04%)</title><rect width=".4" height="15" x="236.3" y="437" fill="#DE7513" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (2 samples, 0.04%)</title><rect width=".4" height="15" x="806" y="181" fill="#F64B30" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="854.5" y="213" fill="#E68C36" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="879.1" y="213" fill="#DD8C09" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;ecf::AutoCancelAttr&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect width=".2" height="15" x="240.6" y="197" fill="#E57F34" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (24 samples, 0.46%)</title><rect width="5.4" height="15" x="775.8" y="229" fill="#E38C23" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (24 samples, 0.46%)</title><rect width="5.5" height="15" x="1048.1" y="293" fill="#FE8A17" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="564.3" y="277" fill="#E95726" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".3" height="15" x="286.4" y="245" fill="#EB8200" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.6" y="293" fill="#ECE100" rx="2" ry="2"/></g><g><title>[unknown] (66 samples, 1.27%)</title><rect width="14.9" height="15" x="186.4" y="501" fill="#DCD01C" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".3" height="15" x="363.8" y="325" fill="#E1B009" rx="2" ry="2"/></g><g><title>NodeContainer::addTask (1 samples, 0.02%)</title><rect width=".2" height="15" x="237.2" y="421" fill="#E3C51A" rx="2" ry="2"/></g><g><title>Node::variableSubsitution (1 samples, 0.02%)</title><rect width=".2" height="15" x="286.9" y="309" fill="#F98708" rx="2" ry="2"/></g><g><title>std::advance&lt;char const*, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="868.2" y="165" fill="#F41B04" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="978" y="309" fill="#EB4B33" rx="2" ry="2"/></g><g><title>Variable::Variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="310.1" y="373" fill="#E61B2B" rx="2" ry="2"/></g><g><title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="249.4" y="245" fill="#F48B1E" rx="2" ry="2"/></g><g><title>NodeContainer::resolveDependencies (184 samples, 3.54%)</title><rect width="41.8" height="15" x="246" y="389" fill="#E8A91A" rx="2" ry="2"/><text x="249.05" y="399.5">Nod..</text></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".7" height="15" x="1059.7" y="325" fill="#F66807" rx="2" ry="2"/></g><g><title>Repeat::empty (1 samples, 0.02%)</title><rect width=".3" height="15" x="991.6" y="357" fill="#F33F2D" rx="2" ry="2"/></g><g><title>EcfFile::variableSubstitution (2 samples, 0.04%)</title><rect width=".4" height="15" x="1070.4" y="437" fill="#DD7C19" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (8 samples, 0.15%)</title><rect width="1.8" height="15" x="892" y="229" fill="#D3D42B" rx="2" ry="2"/></g><g><title>Variable::EMPTY (1 samples, 0.02%)</title><rect width=".2" height="15" x="397.2" y="277" fill="#D7D424" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt (3 samples, 0.06%)</title><rect width=".6" height="15" x="873.2" y="165" fill="#EB7D0E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="264.4" y="229" fill="#EA2312" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (37 samples, 0.71%)</title><rect width="8.4" height="15" x="822.5" y="181" fill="#D62319" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="956.7" y="341" fill="#CDAD00" rx="2" ry="2"/></g><g><title>_IO_fputs (1 samples, 0.02%)</title><rect width=".2" height="15" x="1189.1" y="565" fill="#EB4D04" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::as_number (1 samples, 0.02%)</title><rect width=".3" height="15" x="971.4" y="293" fill="#F9702C" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="1009.8" y="325" fill="#FAE229" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (1 samples, 0.02%)</title><rect width=".2" height="15" x="867.5" y="149" fill="#E9050D" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::__normal_iterator (4 samples, 0.08%)</title><rect width=".9" height="15" x="546.8" y="293" fill="#F58A19" rx="2" ry="2"/></g><g><title>llseek (1 samples, 0.02%)</title><rect width=".3" height="15" x="158.4" y="533" fill="#D6D91C" rx="2" ry="2"/></g><g><title>memchr@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="147.8" y="565" fill="#EF6504" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="804.4" y="149" fill="#F19215" rx="2" ry="2"/></g><g><title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="861.4" y="69" fill="#F84A33" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="245.4" y="485" fill="#D2C71C" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1004.3" y="357" fill="#E0551D" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="988.7" y="293" fill="#D36013" rx="2" ry="2"/></g><g><title>ServerState::find_variable (3 samples, 0.06%)</title><rect width=".7" height="15" x="1024.5" y="357" fill="#EF5322" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7 samples, 0.13%)</title><rect width="1.6" height="15" x="614.9" y="245" fill="#F6D016" rx="2" ry="2"/></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="332.7" y="277" fill="#EB7D24" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (3 samples, 0.06%)</title><rect width=".6" height="15" x="400.2" y="245" fill="#F33A29" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="560.2" y="261" fill="#F5E302" rx="2" ry="2"/></g><g><title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="921.3" y="213" fill="#D8BC25" rx="2" ry="2"/></g><g><title>boost::date_time::counted_time_system&lt;boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt; &gt;::subtract_times (1 samples, 0.02%)</title><rect width=".2" height="15" x="1001.2" y="389" fill="#E97728" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="180.5" y="549" fill="#F96234" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="782.4" y="165" fill="#F54527" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="182.3" y="485" fill="#FE1835" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (6 samples, 0.12%)</title><rect width="1.4" height="15" x="266.2" y="165" fill="#FE2809" rx="2" ry="2"/></g><g><title>FamGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="1008.9" y="325" fill="#E70D26" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="989.8" y="341" fill="#F44322" rx="2" ry="2"/></g><g><title>[unknown] (58 samples, 1.12%)</title><rect width="13.1" height="15" x="188.2" y="469" fill="#DF5526" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="229" fill="#D4C82F" rx="2" ry="2"/></g><g><title>__GI___chmod (10 samples, 0.19%)</title><rect width="2.2" height="15" x="942.2" y="373" fill="#E48321" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".3" height="15" x="235.8" y="245" fill="#ED991D" rx="2" ry="2"/></g><g><title>Family::Family (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="309" fill="#F63A03" rx="2" ry="2"/></g><g><title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="592.6" y="293" fill="#E71221" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.08%)</title><rect width=".9" height="15" x="916.3" y="213" fill="#E3551C" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (4 samples, 0.08%)</title><rect width="1" height="15" x="338.6" y="357" fill="#F4D314" rx="2" ry="2"/></g><g><title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="344.1" y="357" fill="#D4A114" rx="2" ry="2"/></g><g><title>std::__copy_move&lt;true, false, std::random_access_iterator_tag&gt;::__copy_m&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="249.7" y="213" fill="#E18309" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="282.6" y="181" fill="#EC1E1D" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (3 samples, 0.06%)</title><rect width=".7" height="15" x="836.8" y="181" fill="#FED909" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".3" height="15" x="577.6" y="293" fill="#CF5F28" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="929" y="261" fill="#D49006" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (3 samples, 0.06%)</title><rect width=".6" height="15" x="798.3" y="229" fill="#D3C41D" rx="2" ry="2"/></g><g><title>std::vector&lt;Task*, std::allocator&lt;Task*&gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="437" fill="#E26D10" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="969.4" y="341" fill="#EFDF29" rx="2" ry="2"/></g><g><title>DefsStructureParser::getNextLine (1 samples, 0.02%)</title><rect width=".2" height="15" x="245.4" y="501" fill="#D9AE23" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="604.9" y="341" fill="#F29411" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="872.2" y="181" fill="#F4BD2D" rx="2" ry="2"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".2" height="15" x="878.6" y="229" fill="#CD4224" rx="2" ry="2"/></g><g><title>Defs::beginAll (6 samples, 0.12%)</title><rect width="1.4" height="15" x="233.3" y="549" fill="#E4CC01" rx="2" ry="2"/></g><g><title>[unknown] (25 samples, 0.48%)</title><rect width="5.6" height="15" x="36.6" y="421" fill="#D25220" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="671.4" y="181" fill="#D0482A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (8 samples, 0.15%)</title><rect width="1.9" height="15" x="1054" y="293" fill="#D54813" rx="2" ry="2"/></g><g><title>std::__copy_move_a&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="248.5" y="229" fill="#FDE215" rx="2" ry="2"/></g><g><title>Node::findVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="800.3" y="229" fill="#D2BF04" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="293.7" y="261" fill="#F2DD07" rx="2" ry="2"/></g><g><title>__GI___chmod (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1059.3" y="405" fill="#E7120C" rx="2" ry="2"/></g><g><title>memcpy@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1112.4" y="549" fill="#D69208" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1072.2" y="341" fill="#D0B604" rx="2" ry="2"/></g><g><title>mmap64 (1 samples, 0.02%)</title><rect width=".3" height="15" x="1085.1" y="565" fill="#DA3917" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (3 samples, 0.06%)</title><rect width=".7" height="15" x="1056.8" y="325" fill="#EFD601" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="282.1" y="101" fill="#F99927" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (9 samples, 0.17%)</title><rect width="2.1" height="15" x="828.2" y="133" fill="#FC3C09" rx="2" ry="2"/></g><g><title>_start (1 samples, 0.02%)</title><rect width=".2" height="15" x="1112.4" y="581" fill="#FDB625" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1025.9" y="341" fill="#E1BD0C" rx="2" ry="2"/></g><g><title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (16 samples, 0.31%)</title><rect width="3.6" height="15" x="707.5" y="245" fill="#F98E27" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="325" fill="#DD2425" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.08%)</title><rect width="1" height="15" x="932.8" y="309" fill="#D98D0F" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="606.2" y="357" fill="#E02F1C" rx="2" ry="2"/></g><g><title>Node::findVariableValue (10 samples, 0.19%)</title><rect width="2.3" height="15" x="317.1" y="389" fill="#DE4C1B" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="333" y="261" fill="#F0C62A" rx="2" ry="2"/></g><g><title>Submittable::Submittable (2 samples, 0.04%)</title><rect width=".5" height="15" x="240.6" y="293" fill="#D04F13" rx="2" ry="2"/></g><g><title>mprotect (1 samples, 0.02%)</title><rect width=".2" height="15" x="1085.4" y="565" fill="#DFBE32" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087" y="309" fill="#FE3207" rx="2" ry="2"/></g><g><title>ecf::Str::ECF_PORT[abi:cxx11] (1 samples, 0.02%)</title><rect width=".3" height="15" x="585.1" y="341" fill="#E06B0B" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.2" y="261" fill="#D3A333" rx="2" ry="2"/></g><g><title>Node::variable_substitution (1 samples, 0.02%)</title><rect width=".3" height="15" x="293" y="341" fill="#DA0019" rx="2" ry="2"/></g><g><title>__memcmp_sse2 (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.8" y="581" fill="#E4610D" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="979.1" y="309" fill="#D78D29" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (9 samples, 0.17%)</title><rect width="2" height="15" x="395.2" y="245" fill="#D19031" rx="2" ry="2"/></g><g><title>Node::variable_substitution (14 samples, 0.27%)</title><rect width="3.1" height="15" x="977.6" y="357" fill="#E88412" rx="2" ry="2"/></g><g><title>Repeat::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="1022.5" y="357" fill="#ED4436" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (15 samples, 0.29%)</title><rect width="3.4" height="15" x="927.9" y="293" fill="#D14529" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="887.9" y="261" fill="#EE0529" rx="2" ry="2"/></g><g><title>EcfFile::operator= (51 samples, 0.98%)</title><rect width="11.5" height="15" x="957.4" y="373" fill="#CE5B17" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (1 samples, 0.02%)</title><rect width=".3" height="15" x="259.4" y="213" fill="#CFC42A" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator= (2 samples, 0.04%)</title><rect width=".4" height="15" x="1188.9" y="581" fill="#EF1C1E" rx="2" ry="2"/></g><g><title>cereal::detail::PolymorphicVirtualCaster&lt;Submittable, Alias&gt;::PolymorphicVirtualCaster (1 samples, 0.02%)</title><rect width=".2" height="15" x="1112.6" y="581" fill="#E3A117" rx="2" ry="2"/></g><g><title>__GI___libc_read (92 samples, 1.77%)</title><rect width="20.9" height="15" x="205.6" y="581" fill="#DF1901" rx="2" ry="2"/></g><g><title>ServerState::find_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="316" y="325" fill="#F07300" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (7 samples, 0.13%)</title><rect width="1.6" height="15" x="618" y="293" fill="#FE961C" rx="2" ry="2"/></g><g><title>ecf::File::splitFileIntoLines (10 samples, 0.19%)</title><rect width="2.2" height="15" x="331.2" y="357" fill="#CD4912" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (27 samples, 0.52%)</title><rect width="6.2" height="15" x="898.3" y="213" fill="#DC0807" rx="2" ry="2"/></g><g><title>_ZNSt12__basic_fileIcE5closeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="152.3" y="533" fill="#D86226" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".3" height="15" x="1054.7" y="261" fill="#F64727" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1057.2" y="309" fill="#F65C2D" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.2" height="15" x="11.4" y="469" fill="#F4AC31" rx="2" ry="2"/></g><g><title>_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="204.5" y="581" fill="#F2901D" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="12.7" y="405" fill="#FD3418" rx="2" ry="2"/></g><g><title>Node::set_state (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.4" y="421" fill="#DA4C11" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (13 samples, 0.25%)</title><rect width="3" height="15" x="330.9" y="373" fill="#F87327" rx="2" ry="2"/></g><g><title>Node::setStateOnly (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.6" y="341" fill="#DF2325" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect width=".2" height="15" x="333.2" y="341" fill="#D1422C" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="1035.4" y="245" fill="#DA8836" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1058.1" y="325" fill="#F94A31" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="1062" y="357" fill="#E4B129" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="973.5" y="277" fill="#F1A104" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="977.1" y="341" fill="#F59210" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign&lt;char const*, void&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="315.3" y="277" fill="#E5D511" rx="2" ry="2"/></g><g><title>Submittable::submit_job_only (18 samples, 0.35%)</title><rect width="4.1" height="15" x="1069.5" y="485" fill="#EE2331" rx="2" ry="2"/></g><g><title>SuiteGenVariables::findGenVariable (2 samples, 0.04%)</title><rect width=".5" height="15" x="292.1" y="261" fill="#F77533" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="200.9" y="245" fill="#F99A0B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1047.5" y="261" fill="#E51501" rx="2" ry="2"/></g><g><title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="373" fill="#FA192D" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="938.5" y="325" fill="#DF6735" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="157.8" y="533" fill="#EE1902" rx="2" ry="2"/></g><g><title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocator (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.5" y="357" fill="#E22A22" rx="2" ry="2"/></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="865" y="69" fill="#EF7805" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="919.9" y="229" fill="#CF7636" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="830.9" y="149" fill="#F43A1F" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (6 samples, 0.12%)</title><rect width="1.4" height="15" x="511.8" y="293" fill="#F9AE33" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv@plt (4 samples, 0.08%)</title><rect width=".9" height="15" x="465.5" y="309" fill="#CFD800" rx="2" ry="2"/></g><g><title>Repeat::empty (22 samples, 0.42%)</title><rect width="5" height="15" x="531.1" y="325" fill="#D5CB33" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="232.9" y="549" fill="#E35923" rx="2" ry="2"/></g><g><title>memcmp@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="849.5" y="181" fill="#CEB52C" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="226.1" y="437" fill="#F7B223" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="305.3" y="197" fill="#F40B27" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (9 samples, 0.17%)</title><rect width="2.1" height="15" x="1028.6" y="357" fill="#FCD035" rx="2" ry="2"/></g><g><title>Submittable::submit_job_only (3,012 samples, 57.93%)</title><rect width="683.6" height="15" x="317.1" y="421" fill="#EDAB29" rx="2" ry="2"/><text x="320.09" y="431.5">Submittable::submit_job_only</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".4" height="15" x="1049.3" y="181" fill="#EB4901" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (12 samples, 0.23%)</title><rect width="2.8" height="15" x="613.7" y="261" fill="#E7242A" rx="2" ry="2"/></g><g><title>perf (16 samples, 0.31%)</title><rect width="3.6" height="15" x="10" y="597" fill="#D7BA19" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="852.5" y="181" fill="#F19A29" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator==&lt;ecf::TimeAttr const*, std::vector&lt;ecf::TimeAttr, std::allocator&lt;ecf::TimeAttr&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="309.1" y="373" fill="#EDD000" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (3 samples, 0.06%)</title><rect width=".7" height="15" x="271" y="181" fill="#CD071E" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="421" fill="#FA4923" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.02%)</title><rect width=".2" height="15" x="333.2" y="309" fill="#FA411B" rx="2" ry="2"/></g><g><title>[unknown] (9 samples, 0.17%)</title><rect width="2" height="15" x="199.3" y="309" fill="#CD292B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect width=".2" height="15" x="1025.7" y="373" fill="#E0DA23" rx="2" ry="2"/></g><g><title>Suite::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="988.9" y="341" fill="#E86B2C" rx="2" ry="2"/></g><g><title>[unknown] (68 samples, 1.31%)</title><rect width="15.4" height="15" x="185.9" y="533" fill="#F1AD2B" rx="2" ry="2"/></g><g><title>[unknown] (47 samples, 0.90%)</title><rect width="10.7" height="15" x="81.9" y="453" fill="#F30E0F" rx="2" ry="2"/></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Rb_tree (1 samples, 0.02%)</title><rect width=".3" height="15" x="980.7" y="341" fill="#EFA11D" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="800.3" y="245" fill="#F95327" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;Expression, std::default_delete&lt;Expression&gt; &gt;::operator= (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.7" y="421" fill="#D17305" rx="2" ry="2"/></g><g><title>EcfFile::countEcfMicro (1 samples, 0.02%)</title><rect width=".2" height="15" x="1028.4" y="373" fill="#EF4019" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="258.8" y="261" fill="#D71A01" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087" y="229" fill="#CE4B27" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (88 samples, 1.69%)</title><rect width="20" height="15" x="632.8" y="325" fill="#F52B0D" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="283" y="133" fill="#D4C601" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="1025.9" y="357" fill="#EA5C22" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1071.8" y="309" fill="#F31E1B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect width=".2" height="15" x="592.4" y="293" fill="#E6CD00" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="970.5" y="309" fill="#CD6B34" rx="2" ry="2"/></g><g><title>NodeContainer::computedState (1 samples, 0.02%)</title><rect width=".3" height="15" x="973.2" y="325" fill="#DF6126" rx="2" ry="2"/></g><g><title>_int_free (4 samples, 0.08%)</title><rect width=".9" height="15" x="912.4" y="213" fill="#F98714" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (312 samples, 6.00%)</title><rect width="70.9" height="15" x="655.9" y="277" fill="#D6C234" rx="2" ry="2"/><text x="658.95" y="287.5">EcfFile:..</text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;Variable*&gt;, Variable*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="238.6" y="357" fill="#D31026" rx="2" ry="2"/></g><g><title>vfprintf (1 samples, 0.02%)</title><rect width=".2" height="15" x="31.8" y="549" fill="#D1C432" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (419 samples, 8.06%)</title><rect width="95.1" height="15" x="810.7" y="277" fill="#D25C0E" rx="2" ry="2"/><text x="813.74" y="287.5">PreProcesso..</text></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="46.8" y="501" fill="#D64831" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="867.9" y="181" fill="#EDBD28" rx="2" ry="2"/></g><g><title>Node::findVariableValue (11 samples, 0.21%)</title><rect width="2.5" height="15" x="989.1" y="357" fill="#D20616" rx="2" ry="2"/></g><g><title>Suite::findGenVariable (2 samples, 0.04%)</title><rect width=".4" height="15" x="313.5" y="309" fill="#F20E14" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (1 samples, 0.02%)</title><rect width=".2" height="15" x="304.6" y="197" fill="#FD6D12" rx="2" ry="2"/></g><g><title>_int_free (3 samples, 0.06%)</title><rect width=".7" height="15" x="880.2" y="165" fill="#E61C0B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (13 samples, 0.25%)</title><rect width="3" height="15" x="619.6" y="293" fill="#D2330C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*&amp;, long&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="276.9" y="149" fill="#FEB020" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="262.6" y="229" fill="#F1992F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (3 samples, 0.06%)</title><rect width=".6" height="15" x="303.5" y="149" fill="#CE4D0F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (4 samples, 0.08%)</title><rect width=".9" height="15" x="865.9" y="165" fill="#FC4E0F" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (17 samples, 0.33%)</title><rect width="3.9" height="15" x="1034.5" y="309" fill="#D2AC0F" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect width=".2" height="15" x="970.1" y="309" fill="#E0A70C" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="259.4" y="149" fill="#E7391B" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".3" height="15" x="1073.3" y="421" fill="#DA1D08" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect width=".3" height="15" x="288.9" y="245" fill="#D73130" rx="2" ry="2"/></g><g><title>memcmp@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1159.4" y="581" fill="#F41E06" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.4" y="373" fill="#D43712" rx="2" ry="2"/></g><g><title>std::__iterator_category&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="283" y="117" fill="#FB9802" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="284.2" y="197" fill="#D67C0D" rx="2" ry="2"/></g><g><title>ecf::log (3 samples, 0.06%)</title><rect width=".7" height="15" x="972.1" y="357" fill="#EFB725" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect width=".5" height="15" x="970.3" y="341" fill="#D87501" rx="2" ry="2"/></g><g><title>Node::findReferencedNode (4 samples, 0.08%)</title><rect width=".9" height="15" x="235.4" y="309" fill="#D79601" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="721.8" y="229" fill="#EBC931" rx="2" ry="2"/></g><g><title>Node::variable_substitution (5 samples, 0.10%)</title><rect width="1.1" height="15" x="800.1" y="261" fill="#F9BF11" rx="2" ry="2"/></g><g><title>__dynamic_cast (3 samples, 0.06%)</title><rect width=".7" height="15" x="43.8" y="549" fill="#EB1310" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1023.4" y="341" fill="#D96D23" rx="2" ry="2"/></g><g><title>[unknown] (5 samples, 0.10%)</title><rect width="1.1" height="15" x="943.3" y="277" fill="#E59224" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (8 samples, 0.15%)</title><rect width="1.9" height="15" x="968.9" y="357" fill="#D15A16" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="151.6" y="533" fill="#D0DA07" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="228.8" y="453" fill="#FEB918" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect width=".2" height="15" x="267.4" y="117" fill="#CD6621" rx="2" ry="2"/></g><g><title>std::__copy_move_a&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.2" y="357" fill="#F05C34" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (4 samples, 0.08%)</title><rect width=".9" height="15" x="587.9" y="293" fill="#E6AB05" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="1035.9" y="213" fill="#D46B04" rx="2" ry="2"/></g><g><title>Node::find_parent_gen_variable_value (2 samples, 0.04%)</title><rect width=".5" height="15" x="1002.3" y="373" fill="#D90E25" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect width=".2" height="15" x="799.2" y="245" fill="#D21501" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect width=".3" height="15" x="1064.9" y="389" fill="#DF4E28" rx="2" ry="2"/></g><g><title>Node::begin (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.5" y="469" fill="#FBE432" rx="2" ry="2"/></g><g><title>Defs::get_all_nodes (2 samples, 0.04%)</title><rect width=".5" height="15" x="234.9" y="549" fill="#E4D20C" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (25 samples, 0.48%)</title><rect width="5.7" height="15" x="277.6" y="213" fill="#D1C610" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (14 samples, 0.27%)</title><rect width="3.2" height="15" x="532.7" y="277" fill="#E62417" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="234" y="293" fill="#CD3719" rx="2" ry="2"/></g><g><title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="915.8" y="213" fill="#F49F14" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="826.2" y="149" fill="#E4022A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="233.3" y="421" fill="#D17F17" rx="2" ry="2"/></g><g><title>_Znwm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="998.2" y="341" fill="#EB120F" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="306.4" y="245" fill="#F12A36" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="244" y="437" fill="#D4BF28" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (68 samples, 1.31%)</title><rect width="15.5" height="15" x="1008.4" y="373" fill="#D07002" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="594" y="357" fill="#D95B01" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (2 samples, 0.04%)</title><rect width=".5" height="15" x="969.6" y="341" fill="#EE0F13" rx="2" ry="2"/></g><g><title>ecf::Str::split (3 samples, 0.06%)</title><rect width=".7" height="15" x="276.7" y="197" fill="#E72306" rx="2" ry="2"/></g><g><title>JobsParam::user_edit_variables[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="374.5" y="357" fill="#DE8C0E" rx="2" ry="2"/></g><g><title>__GI___mmap64 (12 samples, 0.23%)</title><rect width="2.7" height="15" x="226.5" y="581" fill="#FB242D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (2 samples, 0.04%)</title><rect width=".5" height="15" x="307.1" y="341" fill="#E5650E" rx="2" ry="2"/></g><g><title>_ZdlPv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="204.7" y="581" fill="#ECC51F" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (2 samples, 0.04%)</title><rect width=".4" height="15" x="1050.9" y="229" fill="#E08129" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="235.8" y="261" fill="#E0BA21" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".2" height="15" x="48.8" y="549" fill="#DF712E" rx="2" ry="2"/></g><g><title>Node::repeat (1 samples, 0.02%)</title><rect width=".3" height="15" x="579.2" y="341" fill="#FE6A08" rx="2" ry="2"/></g><g><title>[unknown] (53 samples, 1.02%)</title><rect width="12" height="15" x="80.6" y="485" fill="#E48E2B" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (5 samples, 0.10%)</title><rect width="1.2" height="15" x="1065.6" y="405" fill="#D4660B" rx="2" ry="2"/></g><g><title>ServerState::find_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="1003" y="421" fill="#D74B11" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".3" height="15" x="979.1" y="293" fill="#F53D17" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="973.5" y="245" fill="#F12412" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (47 samples, 0.90%)</title><rect width="10.7" height="15" x="857.7" y="213" fill="#F23D2A" rx="2" ry="2"/></g><g><title>[unknown] (656 samples, 12.62%)</title><rect width="148.9" height="15" x="32" y="581" fill="#F11012" rx="2" ry="2"/><text x="35.02" y="591.5">[unknown]</text></g><g><title>EcfFile::create_job[abi:cxx11] (2,808 samples, 54.01%)</title><rect width="637.3" height="15" x="319.8" y="389" fill="#CE0332" rx="2" ry="2"/><text x="322.81" y="399.5">EcfFile::create_job[abi:cxx11]</text></g><g><title>std::_Head_base&lt;0ul, RepeatBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect width=".2" height="15" x="557.7" y="165" fill="#E88213" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="980.5" y="293" fill="#DDD22B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.5" y="421" fill="#F66F16" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt;::_M_head (2 samples, 0.04%)</title><rect width=".5" height="15" x="554.9" y="181" fill="#E39B04" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="905.2" y="213" fill="#DD672E" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="277" fill="#DA2A0B" rx="2" ry="2"/></g><g><title>std::locale::_S_initialize (2 samples, 0.04%)</title><rect width=".4" height="15" x="167.1" y="565" fill="#D77F32" rx="2" ry="2"/></g><g><title>std::_Construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="919.2" y="181" fill="#E96311" rx="2" ry="2"/></g><g><title>Node::variable_substitution (963 samples, 18.52%)</title><rect width="218.6" height="15" x="375.4" y="357" fill="#E5B804" rx="2" ry="2"/><text x="378.42" y="367.5">Node::variable_substitution</text></g><g><title>FamGenVariables::findGenVariable (22 samples, 0.42%)</title><rect width="5" height="15" x="388.8" y="293" fill="#F6BC1B" rx="2" ry="2"/></g><g><title>Node::update_variable (3 samples, 0.06%)</title><rect width=".7" height="15" x="237.9" y="421" fill="#F93C33" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="1060.4" y="405" fill="#DFAA09" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="106" y="517" fill="#D55B15" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="996.6" y="261" fill="#DEB20A" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;Expression, std::default_delete&lt;Expression&gt; &gt;::_M_deleter (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.7" y="405" fill="#F15F36" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="980.3" y="325" fill="#E6D51F" rx="2" ry="2"/></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1052.9" y="181" fill="#DF642B" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="309" fill="#F60C2E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="938.5" y="277" fill="#DE2F0C" rx="2" ry="2"/></g><g><title>boost::conversion::detail::try_lexical_convert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1003.4" y="373" fill="#EB7411" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="988.7" y="325" fill="#DE3D07" rx="2" ry="2"/></g><g><title>boost::lexical_cast&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1003.4" y="389" fill="#ED2B0B" rx="2" ry="2"/></g><g><title>Submittable::update_static_generated_variables (1 samples, 0.02%)</title><rect width=".2" height="15" x="1066.8" y="405" fill="#E5C410" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (3 samples, 0.06%)</title><rect width=".7" height="15" x="651.2" y="293" fill="#EAD716" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".3" height="15" x="1066.5" y="357" fill="#DC6822" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (73 samples, 1.40%)</title><rect width="16.5" height="15" x="664.6" y="245" fill="#D82107" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator+ (1 samples, 0.02%)</title><rect width=".3" height="15" x="1025.4" y="373" fill="#DF520B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect width=".2" height="15" x="51.8" y="549" fill="#FE0E17" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (2 samples, 0.04%)</title><rect width=".4" height="15" x="329.6" y="357" fill="#DD8A17" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="796.4" y="245" fill="#D70D18" rx="2" ry="2"/></g><g><title>ecf::File::create (2 samples, 0.04%)</title><rect width=".5" height="15" x="246.7" y="293" fill="#F92A04" rx="2" ry="2"/></g><g><title>__lseek_nocancel (22 samples, 0.42%)</title><rect width="5" height="15" x="152.8" y="533" fill="#E4851E" rx="2" ry="2"/></g><g><title>Node::find_parent_gen_variable_value (2 samples, 0.04%)</title><rect width=".5" height="15" x="246" y="277" fill="#DC6827" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect width=".2" height="15" x="1052.5" y="197" fill="#D3DD1E" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (9 samples, 0.17%)</title><rect width="2.1" height="15" x="1028.6" y="341" fill="#E24C01" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="999.3" y="357" fill="#CEC825" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (46 samples, 0.88%)</title><rect width="10.4" height="15" x="821" y="197" fill="#DA192F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="908.6" y="261" fill="#D5A018" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".3" height="15" x="993.4" y="277" fill="#F08511" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="864.8" y="133" fill="#CEA301" rx="2" ry="2"/></g><g><title>ServerState::find_variable (2 samples, 0.04%)</title><rect width=".4" height="15" x="605.6" y="357" fill="#F91C0A" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="295.8" y="245" fill="#F7850D" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="802.3" y="213" fill="#F0B815" rx="2" ry="2"/></g><g><title>std::__niter_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="349.5" y="293" fill="#EE7914" rx="2" ry="2"/></g><g><title>Submittable::script_based_job_submission (288 samples, 5.54%)</title><rect width="65.4" height="15" x="1003.2" y="437" fill="#DEB000" rx="2" ry="2"/><text x="1006.21" y="447.5">Submitt..</text></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="866.8" y="133" fill="#F85E21" rx="2" ry="2"/></g><g><title>SubGenVariables::update_generated_variables (2 samples, 0.04%)</title><rect width=".5" height="15" x="246" y="325" fill="#D3E500" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1047" y="261" fill="#E96F04" rx="2" ry="2"/></g><g><title>Suite::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="308" y="309" fill="#DE6419" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (1 samples, 0.02%)</title><rect width=".3" height="15" x="1069.9" y="421" fill="#D73D0A" rx="2" ry="2"/></g><g><title>Node::variableSubsitution (26 samples, 0.50%)</title><rect width="5.9" height="15" x="975.3" y="373" fill="#D7190C" rx="2" ry="2"/></g><g><title>_ZNSaIcEC1Ev@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="920.1" y="293" fill="#D13820" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (4 samples, 0.08%)</title><rect width=".9" height="15" x="855.9" y="213" fill="#DC1E2C" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".2" height="15" x="557.9" y="277" fill="#EC720E" rx="2" ry="2"/></g><g><title>std::istream::sentry::sentry (4 samples, 0.08%)</title><rect width=".9" height="15" x="711.1" y="245" fill="#F6D633" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (4 samples, 0.08%)</title><rect width=".9" height="15" x="865.9" y="181" fill="#CEC904" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="992.8" y="293" fill="#DB592C" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="105.8" y="309" fill="#F2862E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1068.3" y="341" fill="#E39219" rx="2" ry="2"/></g><g><title>_Znwm@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="205" y="581" fill="#F58A29" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1048.6" y="213" fill="#FD7B15" rx="2" ry="2"/></g><g><title>__strchrnul (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="213" fill="#E67535" rx="2" ry="2"/></g><g><title>std::locale::operator== (1 samples, 0.02%)</title><rect width=".3" height="15" x="321.6" y="277" fill="#F28408" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Node&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Node&gt;, std::shared_ptr&lt;Node&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.2" y="453" fill="#EE9522" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1023.6" y="357" fill="#F38618" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".2" height="15" x="252.4" y="197" fill="#E46824" rx="2" ry="2"/></g><g><title>_start (1 samples, 0.02%)</title><rect width=".2" height="15" x="142.8" y="565" fill="#D2A611" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="801" y="229" fill="#F8B72D" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="894" y="213" fill="#FA2E36" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="453" fill="#CE8D32" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::reserve (1 samples, 0.02%)</title><rect width=".3" height="15" x="240.1" y="421" fill="#E90300" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (1 samples, 0.02%)</title><rect width=".2" height="15" x="1072.2" y="357" fill="#E6A70C" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (59 samples, 1.13%)</title><rect width="13.3" height="15" x="293.3" y="309" fill="#D3AE27" rx="2" ry="2"/></g><g><title>[unknown] (7 samples, 0.13%)</title><rect width="1.6" height="15" x="141.2" y="549" fill="#F85E23" rx="2" ry="2"/></g><g><title>EcfFile::doCreateJobFile[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.5" y="437" fill="#E71F1A" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="975.1" y="341" fill="#D98B19" rx="2" ry="2"/></g><g><title>NodeContainer::NodeContainer (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="293" fill="#D37F18" rx="2" ry="2"/></g><g><title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="930.4" y="245" fill="#EA521F" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (1 samples, 0.02%)</title><rect width=".3" height="15" x="304.1" y="149" fill="#D23C2C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="293.5" y="245" fill="#EDDD0D" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="1067.4" y="357" fill="#FC2B35" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (8 samples, 0.15%)</title><rect width="1.8" height="15" x="303.5" y="213" fill="#D6A934" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS5_S4_EES8_@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="587.4" y="293" fill="#E6641B" rx="2" ry="2"/></g><g><title>std::__shared_ptr&lt;IncludeFileCache, (3 samples, 0.06%)</title><rect width=".7" height="15" x="1037" y="245" fill="#D6D636" rx="2" ry="2"/></g><g><title>Node::setStateOnly (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.4" y="405" fill="#F72710" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (2 samples, 0.04%)</title><rect width=".5" height="15" x="1004.3" y="405" fill="#E60C17" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase_at_end (51 samples, 0.98%)</title><rect width="11.5" height="15" x="957.4" y="341" fill="#D31121" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt;::_M_head (5 samples, 0.10%)</title><rect width="1.2" height="15" x="534.7" y="229" fill="#EF8F09" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="991.9" y="341" fill="#E87F2F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect width=".2" height="15" x="883.8" y="245" fill="#F9C903" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="306.4" y="229" fill="#D8C308" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="865" y="85" fill="#E4C508" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="831.6" y="197" fill="#D8B131" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="976" y="325" fill="#FE8E14" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (1 samples, 0.02%)</title><rect width=".3" height="15" x="561.5" y="293" fill="#E3CF31" rx="2" ry="2"/></g><g><title>[unknown] (12 samples, 0.23%)</title><rect width="2.7" height="15" x="45.9" y="533" fill="#F5D730" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (4 samples, 0.08%)</title><rect width=".9" height="15" x="1015.7" y="341" fill="#D36B04" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (7 samples, 0.13%)</title><rect width="1.6" height="15" x="896.3" y="213" fill="#E86A24" rx="2" ry="2"/></g><g><title>Node::findVariable (4 samples, 0.08%)</title><rect width=".9" height="15" x="993.9" y="341" fill="#EFDD1E" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="938.5" y="309" fill="#ED8B0E" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="937.6" y="309" fill="#D6511E" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="578.6" y="325" fill="#DE362B" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".3" height="15" x="152.5" y="517" fill="#F39F23" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="671.2" y="181" fill="#F54521" rx="2" ry="2"/></g><g><title>boost::date_time::microsec_clock&lt;boost::posix_time::ptime&gt;::create_time (2 samples, 0.04%)</title><rect width=".5" height="15" x="1000.7" y="389" fill="#F6DD1D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::begin (1 samples, 0.02%)</title><rect width=".2" height="15" x="598.1" y="357" fill="#F45E32" rx="2" ry="2"/></g><g><title>Defs::getAllTasks (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="549" fill="#F7D428" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (11 samples, 0.21%)</title><rect width="2.5" height="15" x="277.8" y="149" fill="#D7AD08" rx="2" ry="2"/></g><g><title>std::ios_base::ios_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="163.7" y="533" fill="#D75530" rx="2" ry="2"/></g><g><title>PreProcessor::~PreProcessor (2 samples, 0.04%)</title><rect width=".4" height="15" x="938.3" y="373" fill="#D63810" rx="2" ry="2"/></g><g><title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="268.5" y="181" fill="#D7B229" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="200.4" y="293" fill="#D0A332" rx="2" ry="2"/></g><g><title>Submittable::locatedEcfFile (81 samples, 1.56%)</title><rect width="18.4" height="15" x="981.4" y="389" fill="#F6AC25" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect width=".3" height="15" x="754.2" y="245" fill="#DCD026" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (2 samples, 0.04%)</title><rect width=".4" height="15" x="338.2" y="357" fill="#FDA10E" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="895.6" y="213" fill="#D89606" rx="2" ry="2"/></g><g><title>Family::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="385.6" y="325" fill="#EA2620" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (15 samples, 0.29%)</title><rect width="3.4" height="15" x="241.5" y="469" fill="#F48313" rx="2" ry="2"/></g><g><title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="333.7" y="357" fill="#CD9C04" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (2 samples, 0.04%)</title><rect width=".4" height="15" x="597.4" y="357" fill="#D21C1C" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (6 samples, 0.12%)</title><rect width="1.3" height="15" x="1071.1" y="389" fill="#EEAE1A" rx="2" ry="2"/></g><g><title>_ZNSaIcED1Ev@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="595.3" y="357" fill="#E8AC16" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (12 samples, 0.23%)</title><rect width="2.8" height="15" x="49" y="549" fill="#F98016" rx="2" ry="2"/></g><g><title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1026.6" y="293" fill="#CD9907" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="930.6" y="245" fill="#EB5506" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10 samples, 0.19%)</title><rect width="2.3" height="15" x="879.7" y="213" fill="#D1710E" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1055.6" y="245" fill="#E76524" rx="2" ry="2"/></g><g><title>[unknown] (76 samples, 1.46%)</title><rect width="17.2" height="15" x="184.1" y="549" fill="#E56B2B" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="1049.3" y="165" fill="#ED9322" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".4" height="15" x="290.8" y="277" fill="#FD3515" rx="2" ry="2"/></g><g><title>Task::defs (1 samples, 0.02%)</title><rect width=".2" height="15" x="606" y="357" fill="#ECD81E" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (6 samples, 0.12%)</title><rect width="1.3" height="15" x="293.3" y="277" fill="#DE7D09" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="801" y="213" fill="#F20317" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect width=".2" height="15" x="974.2" y="341" fill="#D0E233" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::is_special (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.2" y="341" fill="#F09E23" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".3" height="15" x="992.5" y="293" fill="#FDE429" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="261" fill="#F0560B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="604.7" y="341" fill="#E7B501" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (1 samples, 0.02%)</title><rect width=".2" height="15" x="860" y="181" fill="#F7A923" rx="2" ry="2"/></g><g><title>ecf::Str::split (8 samples, 0.15%)</title><rect width="1.8" height="15" x="995.7" y="341" fill="#FDB214" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (8 samples, 0.15%)</title><rect width="1.8" height="15" x="920.6" y="293" fill="#D62808" rx="2" ry="2"/></g><g><title>[unknown] (33 samples, 0.63%)</title><rect width="7.5" height="15" x="98.5" y="453" fill="#EA9918" rx="2" ry="2"/></g><g><title>__GI___munmap (8 samples, 0.15%)</title><rect width="1.9" height="15" x="229.2" y="581" fill="#E8AC21" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="289.8" y="245" fill="#FE960D" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".3" height="15" x="286.4" y="213" fill="#ECDA20" rx="2" ry="2"/></g><g><title>std::vector&lt;InLimit, std::allocator&lt;InLimit&gt; &gt;::empty (2 samples, 0.04%)</title><rect width=".5" height="15" x="308.2" y="389" fill="#EED71F" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1085.4" y="501" fill="#E52813" rx="2" ry="2"/></g><g><title>__init_cpu_features (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087.2" y="549" fill="#E15323" rx="2" ry="2"/></g><g><title>Node::parent (1 samples, 0.02%)</title><rect width=".2" height="15" x="579" y="341" fill="#D9C717" rx="2" ry="2"/></g><g><title>ecf::Str::split (3 samples, 0.06%)</title><rect width=".7" height="15" x="651.2" y="309" fill="#ED4A09" rx="2" ry="2"/></g><g><title>_Znwm@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="615.5" y="229" fill="#F2DA2E" rx="2" ry="2"/></g><g><title>_int_malloc (159 samples, 3.06%)</title><rect width="36.1" height="15" x="106.7" y="565" fill="#FA1011" rx="2" ry="2"/><text x="109.69" y="575.5">_in..</text></g><g><title>[unknown] (43 samples, 0.83%)</title><rect width="9.7" height="15" x="82.9" y="437" fill="#F23014" rx="2" ry="2"/></g><g><title>strlen (56 samples, 1.08%)</title><rect width="12.8" height="15" x="167.7" y="565" fill="#EC5D05" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (8 samples, 0.15%)</title><rect width="1.8" height="15" x="280.8" y="165" fill="#FA720F" rx="2" ry="2"/></g><g><title>_int_free (9 samples, 0.17%)</title><rect width="2" height="15" x="960.1" y="277" fill="#EE1B28" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.4" y="389" fill="#EB7A25" rx="2" ry="2"/></g><g><title>std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="248.5" y="261" fill="#D13C2D" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1033.2" y="325" fill="#E05529" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="932.4" y="309" fill="#FB9E1F" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1060.2" y="261" fill="#D2702E" rx="2" ry="2"/></g><g><title>std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt;::base (1 samples, 0.02%)</title><rect width=".2" height="15" x="919.5" y="149" fill="#E8140F" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="993.7" y="309" fill="#E90717" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="982.6" y="325" fill="#FCC109" rx="2" ry="2"/></g><g><title>std::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="616.9" y="197" fill="#FC0F36" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="651.9" y="293" fill="#F2DA2E" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="1023.4" y="325" fill="#E57614" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.4" y="277" fill="#F06110" rx="2" ry="2"/></g><g><title>EcfFile::extract_ecfmicro (3 samples, 0.06%)</title><rect width=".7" height="15" x="859.5" y="197" fill="#F17028" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="247.4" y="245" fill="#D84E25" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="232.9" y="533" fill="#D06819" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="308" y="341" fill="#ED7720" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (7 samples, 0.13%)</title><rect width="1.6" height="15" x="902.9" y="197" fill="#E0A41F" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;ecf::LateAttr, std::default_delete&lt;ecf::LateAttr&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".2" height="15" x="308.7" y="389" fill="#DB5529" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="586.3" y="309" fill="#F6751F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (1 samples, 0.02%)</title><rect width=".3" height="15" x="807.3" y="213" fill="#DC0733" rx="2" ry="2"/></g><g><title>boost::detail::lcast_put_unsigned&lt;std::char_traits&lt;char&gt;, unsigned long, char&gt;::main_convert_loop (1 samples, 0.02%)</title><rect width=".2" height="15" x="321.4" y="277" fill="#D40D05" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (1 samples, 0.02%)</title><rect width=".2" height="15" x="1072" y="309" fill="#D12710" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="580.4" y="341" fill="#F08101" rx="2" ry="2"/></g><g><title>Defs::set_most_significant_state (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.6" y="245" fill="#E0C420" rx="2" ry="2"/></g><g><title>std::__distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="591" y="261" fill="#F75319" rx="2" ry="2"/></g><g><title>memcmp@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="1073.3" y="389" fill="#D3DE19" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (82 samples, 1.58%)</title><rect width="18.6" height="15" x="265.3" y="229" fill="#D8DA20" rx="2" ry="2"/></g><g><title>AstEqual::accept (4 samples, 0.08%)</title><rect width=".9" height="15" x="235.4" y="405" fill="#F9430B" rx="2" ry="2"/></g><g><title>[unknown] (67 samples, 1.29%)</title><rect width="15.2" height="15" x="186.1" y="517" fill="#F20525" rx="2" ry="2"/></g><g><title>ecf::Str::split (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.4" y="277" fill="#D96233" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="996.6" y="277" fill="#F45214" rx="2" ry="2"/></g><g><title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="369.5" y="277" fill="#DB2404" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="678.6" y="149" fill="#DDD30F" rx="2" ry="2"/></g><g><title>Jobs::generate (3,647 samples, 70.15%)</title><rect width="827.8" height="15" x="245.8" y="549" fill="#CE6726" rx="2" ry="2"/><text x="248.82" y="559.5">Jobs::generate</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="865.4" y="85" fill="#DEB61A" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="269.2" y="165" fill="#E2AC2B" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (2 samples, 0.04%)</title><rect width=".4" height="15" x="988.5" y="341" fill="#F7270E" rx="2" ry="2"/></g><g><title>_ZNKSt12__basic_fileIcE7is_openEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="152.1" y="533" fill="#F24B18" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;ecf::AutoCancelAttr&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect width=".3" height="15" x="240.8" y="213" fill="#CFC706" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="956.7" y="325" fill="#EF9311" rx="2" ry="2"/></g><g><title>NodeContainer::check (6 samples, 0.12%)</title><rect width="1.3" height="15" x="235.4" y="501" fill="#F63B08" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="872.7" y="165" fill="#ECC507" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (9 samples, 0.17%)</title><rect width="2.1" height="15" x="1070.8" y="437" fill="#FD5F1E" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (1,441 samples, 27.72%)</title><rect width="327.1" height="15" x="607.6" y="341" fill="#D58C06" rx="2" ry="2"/><text x="610.6" y="351.5">PreProcessor::preProcess_includes</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="267.8" y="181" fill="#D68C21" rx="2" ry="2"/></g><g><title>ecf::Str::EMPTY[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="316.2" y="325" fill="#DBA624" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (6 samples, 0.12%)</title><rect width="1.3" height="15" x="570.4" y="309" fill="#F1BF23" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (104 samples, 2.00%)</title><rect width="23.7" height="15" x="1033.8" y="341" fill="#FDD72B" rx="2" ry="2"/><text x="1036.85" y="351.5">P..</text></g><g><title>PreProcessor::preProcess_includes (33 samples, 0.63%)</title><rect width="7.5" height="15" x="860.2" y="197" fill="#F22036" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (13 samples, 0.25%)</title><rect width="3" height="15" x="1042" y="277" fill="#E0B828" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="389" fill="#F25A1A" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect width=".2" height="15" x="400.6" y="181" fill="#E40B28" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.6" y="469" fill="#F9572E" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="800.5" y="213" fill="#F64A25" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (4 samples, 0.08%)</title><rect width="1" height="15" x="932.8" y="325" fill="#DF3C0B" rx="2" ry="2"/></g><g><title>__pthread_once (1 samples, 0.02%)</title><rect width=".2" height="15" x="321.2" y="277" fill="#DA880E" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (2 samples, 0.04%)</title><rect width=".4" height="15" x="1065.2" y="405" fill="#F80115" rx="2" ry="2"/></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="804.2" y="165" fill="#F47A20" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (14 samples, 0.27%)</title><rect width="3.1" height="15" x="807.6" y="261" fill="#EF6E1E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect width=".3" height="15" x="1072.4" y="405" fill="#CDD104" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="860.9" y="85" fill="#FD091A" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="970.3" y="277" fill="#DD5206" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".4" height="15" x="303.7" y="117" fill="#E38B31" rx="2" ry="2"/></g><g><title>malloc (1 samples, 0.02%)</title><rect width=".2" height="15" x="874.5" y="165" fill="#EBD529" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="1048.8" y="197" fill="#E10207" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (1 samples, 0.02%)</title><rect width=".2" height="15" x="247.4" y="309" fill="#F06F1B" rx="2" ry="2"/></g><g><title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1037.7" y="277" fill="#F4D110" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (8 samples, 0.15%)</title><rect width="1.8" height="15" x="936.5" y="357" fill="#DE5413" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (1 samples, 0.02%)</title><rect width=".3" height="15" x="305.7" y="229" fill="#DE3832" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (4 samples, 0.08%)</title><rect width=".9" height="15" x="255.4" y="245" fill="#E48400" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1023.9" y="309" fill="#D17412" rx="2" ry="2"/></g><g><title>DefsStructureParser::do_parse_file (40 samples, 0.77%)</title><rect width="9.1" height="15" x="236.7" y="517" fill="#E78115" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".3" height="15" x="142.5" y="501" fill="#EA041B" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="1031.6" y="325" fill="#F5E334" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect width=".2" height="15" x="904.5" y="213" fill="#E5301C" rx="2" ry="2"/></g><g><title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (24 samples, 0.46%)</title><rect width="5.4" height="15" x="364.3" y="309" fill="#FBBF0E" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (10 samples, 0.19%)</title><rect width="2.3" height="15" x="879.7" y="197" fill="#F0C720" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="907.2" y="245" fill="#E52323" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (7 samples, 0.13%)</title><rect width="1.6" height="15" x="263.5" y="261" fill="#D9D01A" rx="2" ry="2"/></g><g><title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="955.8" y="373" fill="#D27F31" rx="2" ry="2"/></g><g><title>AstNode::referencedNode (4 samples, 0.08%)</title><rect width=".9" height="15" x="235.4" y="341" fill="#FD5F24" rx="2" ry="2"/></g><g><title>fileno@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="1113.3" y="581" fill="#EF5715" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m@plt (6 samples, 0.12%)</title><rect width="1.4" height="15" x="940.3" y="373" fill="#D98A24" rx="2" ry="2"/></g><g><title>[unknown] (22 samples, 0.42%)</title><rect width="5" height="15" x="152.8" y="517" fill="#EBD209" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (5 samples, 0.10%)</title><rect width="1.1" height="15" x="854.8" y="197" fill="#F13E13" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="247.4" y="229" fill="#D8D405" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="245" fill="#DEB62A" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="232.9" y="501" fill="#DCC016" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="332.7" y="309" fill="#DF662A" rx="2" ry="2"/></g><g><title>boost::date_time::microsec_clock&lt;boost::posix_time::ptime&gt;::universal_time (1 samples, 0.02%)</title><rect width=".2" height="15" x="1001.4" y="405" fill="#DF1E1B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*&amp;, long&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="865" y="117" fill="#ED3F16" rx="2" ry="2"/></g><g><title>EcfFile::operator= (2 samples, 0.04%)</title><rect width=".4" height="15" x="286" y="309" fill="#E8B314" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (141 samples, 2.71%)</title><rect width="32" height="15" x="385.9" y="325" fill="#F86132" rx="2" ry="2"/><text x="388.86" y="335.5">No..</text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;int*&gt;, int*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="344.1" y="293" fill="#D1511C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect width=".4" height="15" x="956.7" y="373" fill="#D7B52A" rx="2" ry="2"/></g><g><title>std::shared_ptr&lt;Node&gt;::~shared_ptr (1 samples, 0.02%)</title><rect width=".2" height="15" x="237.2" y="389" fill="#E33E31" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.2" y="341" fill="#E2C636" rx="2" ry="2"/></g><g><title>[unknown] (36 samples, 0.69%)</title><rect width="8.1" height="15" x="34.1" y="501" fill="#EC9E16" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (43 samples, 0.83%)</title><rect width="9.7" height="15" x="1038.4" y="309" fill="#F5D10A" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="651.2" y="277" fill="#DFCE0D" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (3 samples, 0.06%)</title><rect width=".6" height="15" x="401.1" y="293" fill="#E36322" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="806.4" y="181" fill="#E62802" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="944.2" y="213" fill="#D26F0A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (25 samples, 0.48%)</title><rect width="5.6" height="15" x="364.1" y="341" fill="#D74B0D" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (17 samples, 0.33%)</title><rect width="3.9" height="15" x="683.4" y="245" fill="#CF192B" rx="2" ry="2"/></g><g><title>[unknown] (6 samples, 0.12%)</title><rect width="1.3" height="15" x="227.9" y="469" fill="#DA7024" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (1 samples, 0.02%)</title><rect width=".2" height="15" x="151.2" y="565" fill="#E22F22" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (2 samples, 0.04%)</title><rect width=".5" height="15" x="1004.3" y="373" fill="#DC752F" rx="2" ry="2"/></g><g><title>Family::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="259.4" y="245" fill="#E1B001" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="933.8" y="309" fill="#F0D708" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1058.8" y="405" fill="#DE8913" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (6 samples, 0.12%)</title><rect width="1.3" height="15" x="293.3" y="293" fill="#D0D228" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="617.6" y="293" fill="#F1C912" rx="2" ry="2"/></g><g><title>IncludeFileCache::path[abi:cxx11] (2 samples, 0.04%)</title><rect width=".5" height="15" x="617.1" y="293" fill="#DB1930" rx="2" ry="2"/></g><g><title>[unknown] (5 samples, 0.10%)</title><rect width="1.1" height="15" x="158.7" y="549" fill="#D26F27" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="266.5" y="149" fill="#EFAB24" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (7 samples, 0.13%)</title><rect width="1.6" height="15" x="296.2" y="245" fill="#DD0734" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="293.5" y="213" fill="#FC6E17" rx="2" ry="2"/></g><g><title>Node::findVariableValue (2 samples, 0.04%)</title><rect width=".5" height="15" x="1065.8" y="389" fill="#F5C21F" rx="2" ry="2"/></g><g><title>__strcmp_sse2_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="1189.8" y="565" fill="#D09005" rx="2" ry="2"/></g><g><title>ServerState::find_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="991.9" y="357" fill="#D73B01" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (67 samples, 1.29%)</title><rect width="15.2" height="15" x="890.6" y="245" fill="#F8B42C" rx="2" ry="2"/></g><g><title>Node::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="413.1" y="293" fill="#EE0004" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="830.9" y="165" fill="#DB9B08" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1036.6" y="277" fill="#F17611" rx="2" ry="2"/></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="670.2" y="181" fill="#CE6A23" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (1 samples, 0.02%)</title><rect width=".3" height="15" x="1070.8" y="389" fill="#E1BF36" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (35 samples, 0.67%)</title><rect width="8" height="15" x="269.6" y="213" fill="#D8E015" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (92 samples, 1.77%)</title><rect width="20.9" height="15" x="761.5" y="245" fill="#E7D00D" rx="2" ry="2"/></g><g><title>[unknown] (9 samples, 0.17%)</title><rect width="2" height="15" x="227.2" y="549" fill="#D95606" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (3 samples, 0.06%)</title><rect width=".7" height="15" x="917.2" y="261" fill="#D60835" rx="2" ry="2"/></g><g><title>NodeContainer::begin (6 samples, 0.12%)</title><rect width="1.4" height="15" x="233.3" y="517" fill="#E30517" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (3 samples, 0.06%)</title><rect width=".7" height="15" x="541.3" y="293" fill="#CF0B11" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="973.5" y="325" fill="#E10B31" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".3" height="15" x="991.6" y="341" fill="#E6320A" rx="2" ry="2"/></g><g><title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="245.6" y="485" fill="#DED91C" rx="2" ry="2"/></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::map (1 samples, 0.02%)</title><rect width=".3" height="15" x="980.7" y="357" fill="#EC890A" rx="2" ry="2"/></g><g><title>Node::findVariableValue (6 samples, 0.12%)</title><rect width="1.4" height="15" x="975.3" y="341" fill="#F89523" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (277 samples, 5.33%)</title><rect width="62.8" height="15" x="819.4" y="245" fill="#DE9C13" rx="2" ry="2"/><text x="822.36" y="255.5">PrePro..</text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="106" y="549" fill="#CF892E" rx="2" ry="2"/></g><g><title>SubGenVariables::update_static_generated_variables (6 samples, 0.12%)</title><rect width="1.4" height="15" x="992.5" y="357" fill="#E7AF2B" rx="2" ry="2"/></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Rb_tree (1 samples, 0.02%)</title><rect width=".2" height="15" x="981" y="341" fill="#F95101" rx="2" ry="2"/></g><g><title>[unknown] (23 samples, 0.44%)</title><rect width="5.2" height="15" x="196.1" y="357" fill="#E6120D" rx="2" ry="2"/></g><g><title>std::__copy_move_a&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (24 samples, 0.46%)</title><rect width="5.4" height="15" x="364.3" y="293" fill="#D06C2A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (9 samples, 0.17%)</title><rect width="2.1" height="15" x="722.4" y="245" fill="#FB8207" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".3" height="15" x="142.5" y="453" fill="#DE0216" rx="2" ry="2"/></g><g><title>__GI___mempcpy (38 samples, 0.73%)</title><rect width="8.6" height="15" x="21.8" y="565" fill="#DFB409" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (18 samples, 0.35%)</title><rect width="4" height="15" x="613.1" y="293" fill="#D4D625" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".3" height="15" x="651.6" y="261" fill="#DD3808" rx="2" ry="2"/></g><g><title>EcfFile::extract_ecfmicro (2 samples, 0.04%)</title><rect width=".5" height="15" x="337.7" y="357" fill="#D8CD32" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.9" height="15" x="229.2" y="517" fill="#F1640C" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1084.9" y="469" fill="#E91424" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".2" height="15" x="248.3" y="277" fill="#D49E01" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (21 samples, 0.40%)</title><rect width="4.8" height="15" x="1048.6" y="277" fill="#EBDE1A" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".2" height="15" x="542.5" y="293" fill="#D08708" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="945.3" y="357" fill="#F0B424" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".3" height="15" x="866.3" y="117" fill="#CD7501" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="535.9" y="277" fill="#EA0702" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="282.1" y="69" fill="#FBC502" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="303.2" y="229" fill="#CD2D19" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="283.7" y="197" fill="#E9241A" rx="2" ry="2"/></g><g><title>Expression::add (1 samples, 0.02%)</title><rect width=".3" height="15" x="239.2" y="421" fill="#CF6605" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="938.5" y="293" fill="#F0502F" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (8 samples, 0.15%)</title><rect width="1.9" height="15" x="860.4" y="149" fill="#F8841C" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="289.4" y="293" fill="#E28B24" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::base (1 samples, 0.02%)</title><rect width=".2" height="15" x="546.3" y="293" fill="#FD7305" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".3" height="15" x="259.4" y="165" fill="#E94B35" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (12 samples, 0.23%)</title><rect width="2.7" height="15" x="860.2" y="165" fill="#D80316" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".3" height="15" x="929.4" y="261" fill="#DBA20B" rx="2" ry="2"/></g><g><title>[unknown] (6 samples, 0.12%)</title><rect width="1.3" height="15" x="227.9" y="485" fill="#DC8311" rx="2" ry="2"/></g><g><title>Submittable::increment_try_no (33 samples, 0.63%)</title><rect width="7.5" height="15" x="309.6" y="421" fill="#D1612E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (2 samples, 0.04%)</title><rect width=".4" height="15" x="233.8" y="341" fill="#D60123" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="956.7" y="357" fill="#ED5526" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (2 samples, 0.04%)</title><rect width=".5" height="15" x="674.3" y="181" fill="#E66304" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (51 samples, 0.98%)</title><rect width="11.6" height="15" x="894" y="229" fill="#F3632E" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (1 samples, 0.02%)</title><rect width=".2" height="15" x="944.4" y="373" fill="#DC6706" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".3" height="15" x="1069.9" y="405" fill="#DCB027" rx="2" ry="2"/></g><g><title>std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~allocator (1 samples, 0.02%)</title><rect width=".2" height="15" x="651.9" y="261" fill="#E0BA30" rx="2" ry="2"/></g><g><title>_Znwm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="917.9" y="213" fill="#D44200" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.6" y="325" fill="#DC4B13" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="1056.8" y="293" fill="#DB001B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.6" y="309" fill="#EC8D23" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::~_Vector_base (1 samples, 0.02%)</title><rect width=".3" height="15" x="957.1" y="373" fill="#E5A626" rx="2" ry="2"/></g><g><title>Node::begin (3 samples, 0.06%)</title><rect width=".7" height="15" x="233.8" y="405" fill="#E5861C" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.4" y="389" fill="#D0E132" rx="2" ry="2"/></g><g><title>[unknown] (65 samples, 1.25%)</title><rect width="14.7" height="15" x="186.6" y="485" fill="#F04927" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".5" height="15" x="866.3" y="133" fill="#F05607" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="688.2" y="245" fill="#D7D326" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (82 samples, 1.58%)</title><rect width="18.6" height="15" x="265.3" y="245" fill="#E25B09" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (7 samples, 0.13%)</title><rect width="1.6" height="15" x="266" y="181" fill="#E29E20" rx="2" ry="2"/></g><g><title>Node::variable_substitution (37 samples, 0.71%)</title><rect width="8.4" height="15" x="251.7" y="293" fill="#FB0527" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;Variable&gt;::construct&lt;Variable, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.9" y="389" fill="#CD8D19" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::begin (5 samples, 0.10%)</title><rect width="1.2" height="15" x="546.5" y="309" fill="#E86705" rx="2" ry="2"/></g><g><title>Task::script_extension[abi:cxx11] (6 samples, 0.12%)</title><rect width="1.4" height="15" x="993.9" y="373" fill="#CD1304" rx="2" ry="2"/></g><g><title>[perf_job_gen] (1 samples, 0.02%)</title><rect width=".2" height="15" x="934.7" y="341" fill="#F09E05" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.9" y="181" fill="#FD0631" rx="2" ry="2"/></g><g><title>Node::parent (2 samples, 0.04%)</title><rect width=".5" height="15" x="566.7" y="325" fill="#D20B2A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (2 samples, 0.04%)</title><rect width=".5" height="15" x="1029.3" y="309" fill="#D3891F" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1059.9" y="277" fill="#D6401A" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (8 samples, 0.15%)</title><rect width="1.8" height="15" x="835.7" y="197" fill="#EF8626" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="936.7" y="341" fill="#D40207" rx="2" ry="2"/></g><g><title>Node::find_parent_user_variable_value (4 samples, 0.08%)</title><rect width=".9" height="15" x="315.5" y="341" fill="#D1B206" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1071.3" y="309" fill="#D4C22F" rx="2" ry="2"/></g><g><title>ServerState::find_variable (2 samples, 0.04%)</title><rect width=".5" height="15" x="291.2" y="293" fill="#DF7B22" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="266.7" y="117" fill="#D74E24" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect width=".2" height="15" x="984.4" y="357" fill="#DE1013" rx="2" ry="2"/></g><g><title>_IO_vsprintf (1 samples, 0.02%)</title><rect width=".2" height="15" x="31.8" y="565" fill="#FEE334" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (3 samples, 0.06%)</title><rect width=".7" height="15" x="276.7" y="181" fill="#F72114" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="200.4" y="277" fill="#F83B0A" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="995.7" y="325" fill="#EE6732" rx="2" ry="2"/></g><g><title>[unknown] (41 samples, 0.79%)</title><rect width="9.3" height="15" x="83.3" y="421" fill="#DB6A00" rx="2" ry="2"/></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect width=".2" height="15" x="1188.9" y="565" fill="#DEC80B" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="282.1" y="85" fill="#EF8136" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.4" y="341" fill="#F4052D" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (17 samples, 0.33%)</title><rect width="3.9" height="15" x="984.6" y="373" fill="#D3D82C" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (22 samples, 0.42%)</title><rect width="5" height="15" x="277.6" y="181" fill="#E82503" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (6 samples, 0.12%)</title><rect width="1.4" height="15" x="249.4" y="277" fill="#D5B219" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (4 samples, 0.08%)</title><rect width="1" height="15" x="932.8" y="293" fill="#EB021A" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (8 samples, 0.15%)</title><rect width="1.8" height="15" x="358.6" y="341" fill="#F18115" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="331.6" y="293" fill="#E80D12" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="46.8" y="469" fill="#E99F0A" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="605.1" y="341" fill="#E56F04" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="415.4" y="277" fill="#F1B92B" rx="2" ry="2"/></g><g><title>Parser::doParse (4 samples, 0.08%)</title><rect width=".9" height="15" x="237.9" y="469" fill="#EBB60D" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="316.4" y="373" fill="#E51A17" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;0ul, Expression*, std::default_delete&lt;Expression&gt; &gt;::_M_head (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.5" y="341" fill="#F3DC2E" rx="2" ry="2"/></g><g><title>Defs::restore (46 samples, 0.88%)</title><rect width="10.4" height="15" x="235.4" y="549" fill="#D94725" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::_M_check_len (2 samples, 0.04%)</title><rect width=".4" height="15" x="919.7" y="245" fill="#D61A0F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5 samples, 0.10%)</title><rect width="1.1" height="15" x="967.6" y="277" fill="#DE260F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.06%)</title><rect width=".7" height="15" x="310.5" y="373" fill="#E8681D" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (3 samples, 0.06%)</title><rect width=".6" height="15" x="303.5" y="165" fill="#FBE325" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::erase (2 samples, 0.04%)</title><rect width=".5" height="15" x="288.7" y="325" fill="#EA1B31" rx="2" ry="2"/></g><g><title>Task::Task (2 samples, 0.04%)</title><rect width=".5" height="15" x="240.6" y="309" fill="#F56D11" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (12 samples, 0.23%)</title><rect width="2.7" height="15" x="628.7" y="293" fill="#DF3600" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;Node&gt;, std::allocator&lt;std::shared_ptr&lt;Node&gt; &gt; &gt;::emplace_back&lt;std::shared_ptr&lt;Node&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.2" y="469" fill="#E12613" rx="2" ry="2"/></g><g><title>EcfFile::countEcfMicro (5 samples, 0.10%)</title><rect width="1.1" height="15" x="858.4" y="197" fill="#DAC21E" rx="2" ry="2"/></g><g><title>std::vector&lt;Label, std::allocator&lt;Label&gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="239" y="405" fill="#E3460E" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1048.6" y="261" fill="#F40918" rx="2" ry="2"/></g><g><title>std::forward&lt;long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="244.7" y="437" fill="#E90015" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="563.1" y="277" fill="#FB2F2F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="933.8" y="325" fill="#F3BA10" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (4 samples, 0.08%)</title><rect width="1" height="15" x="932.8" y="277" fill="#D7D120" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="290.5" y="277" fill="#DE6F00" rx="2" ry="2"/></g><g><title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.29%)</title><rect width="3.4" height="15" x="159.8" y="565" fill="#D0160A" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="991.2" y="325" fill="#E4C92A" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.6" y="261" fill="#F28027" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.06%)</title><rect width=".6" height="15" x="1055" y="245" fill="#E5D711" rx="2" ry="2"/></g><g><title>Family::resolveDependencies (3,627 samples, 69.76%)</title><rect width="823.2" height="15" x="245.8" y="501" fill="#CFCA0C" rx="2" ry="2"/><text x="248.82" y="511.5">Family::resolveDependencies</text></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1023.2" y="341" fill="#CE2524" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (3 samples, 0.06%)</title><rect width=".7" height="15" x="285.1" y="309" fill="#FA4807" rx="2" ry="2"/></g><g><title>boost::date_time::microsec_clock&lt;boost::posix_time::ptime&gt;::universal_time (2 samples, 0.04%)</title><rect width=".5" height="15" x="1000.7" y="405" fill="#D2712B" rx="2" ry="2"/></g><g><title>NodeContainer::getAllTasks (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="485" fill="#CF8721" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="308" y="325" fill="#DE6709" rx="2" ry="2"/></g><g><title>__GI___chmod (1 samples, 0.02%)</title><rect width=".2" height="15" x="205.4" y="581" fill="#E08D1F" rx="2" ry="2"/></g><g><title>[unknown] (11 samples, 0.21%)</title><rect width="2.5" height="15" x="103.5" y="357" fill="#FC530A" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="1059.5" y="357" fill="#F4301A" rx="2" ry="2"/></g><g><title>getenv (1 samples, 0.02%)</title><rect width=".2" height="15" x="48.6" y="549" fill="#ED902C" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (6 samples, 0.12%)</title><rect width="1.4" height="15" x="906.7" y="277" fill="#DD7714" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="283.7" y="133" fill="#D9AA0B" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (35 samples, 0.67%)</title><rect width="7.9" height="15" x="1038.4" y="293" fill="#EB1628" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="805.3" y="181" fill="#CF9D17" rx="2" ry="2"/></g><g><title>std::shared_ptr&lt;Task&gt;::shared_ptr&lt;std::allocator&lt;Task&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="240.4" y="405" fill="#E10B23" rx="2" ry="2"/></g><g><title>[unknown] (6 samples, 0.12%)</title><rect width="1.3" height="15" x="227.9" y="501" fill="#EEA333" rx="2" ry="2"/></g><g><title>ecf::JobProfiler::JobProfiler (2 samples, 0.04%)</title><rect width=".5" height="15" x="1000.7" y="421" fill="#E30029" rx="2" ry="2"/></g><g><title>_Znwm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1045" y="213" fill="#E4BD30" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="934.2" y="213" fill="#F34E2A" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="650.5" y="309" fill="#FB2419" rx="2" ry="2"/></g><g><title>Variable::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="397.9" y="293" fill="#E7CF2B" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="986.9" y="341" fill="#FB7D03" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="304.8" y="133" fill="#DD4613" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="149" fill="#E5050C" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (2 samples, 0.04%)</title><rect width=".5" height="15" x="1068.1" y="357" fill="#D7501D" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="284.2" y="229" fill="#CE5414" rx="2" ry="2"/></g><g><title>std::vector&lt;Label, std::allocator&lt;Label&gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect width=".2" height="15" x="239" y="389" fill="#F7BB19" rx="2" ry="2"/></g><g><title>[unknown] (36 samples, 0.69%)</title><rect width="8.2" height="15" x="97.8" y="501" fill="#DE3A35" rx="2" ry="2"/></g><g><title>EcfFile::countEcfMicro (18 samples, 0.35%)</title><rect width="4.1" height="15" x="815.3" y="245" fill="#DA0B36" rx="2" ry="2"/></g><g><title>Node::variable_substitution (14 samples, 0.27%)</title><rect width="3.2" height="15" x="289.4" y="325" fill="#E98615" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1058.1" y="341" fill="#DA1110" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (20 samples, 0.38%)</title><rect width="4.5" height="15" x="674.8" y="181" fill="#F9C906" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="321.9" y="293" fill="#E16611" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (2 samples, 0.04%)</title><rect width=".5" height="15" x="979.8" y="309" fill="#FDB831" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="252.6" y="229" fill="#DDC030" rx="2" ry="2"/></g><g><title>std::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1052.9" y="165" fill="#E5340A" rx="2" ry="2"/></g><g><title>boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::end (1 samples, 0.02%)</title><rect width=".3" height="15" x="241.7" y="421" fill="#D6CE1D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1064" y="373" fill="#D30F08" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="1067.7" y="357" fill="#FC3C0E" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.2" height="15" x="11.4" y="453" fill="#ED4D05" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="988.7" y="309" fill="#DC7F22" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="180.7" y="549" fill="#D4AB12" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (5 samples, 0.10%)</title><rect width="1.2" height="15" x="263.5" y="245" fill="#DCB805" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="294.8" y="261" fill="#E34131" rx="2" ry="2"/></g><g><title>Node::setStateOnly (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.5" y="437" fill="#F12918" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="1036.3" y="229" fill="#E06C22" rx="2" ry="2"/></g><g><title>Node::requeue_labels (1 samples, 0.02%)</title><rect width=".2" height="15" x="319.4" y="405" fill="#D6072D" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.04%)</title><rect width=".5" height="15" x="1007.7" y="373" fill="#F4CB2C" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (4 samples, 0.08%)</title><rect width=".9" height="15" x="44.5" y="549" fill="#EB2826" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="683.2" y="245" fill="#F6B40B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect width=".2" height="15" x="1008" y="309" fill="#D73F26" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::erase (2 samples, 0.04%)</title><rect width=".5" height="15" x="1007.7" y="389" fill="#FEDB2F" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="906.3" y="277" fill="#F4761C" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (2 samples, 0.04%)</title><rect width=".5" height="15" x="252.4" y="261" fill="#E12F10" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".2" height="15" x="1022.5" y="341" fill="#ED3E1F" rx="2" ry="2"/></g><g><title>[unknown] (63 samples, 1.21%)</title><rect width="14.3" height="15" x="78.3" y="533" fill="#F97C22" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="412" y="261" fill="#ED0811" rx="2" ry="2"/></g><g><title>ServerState::find_variable (50 samples, 0.96%)</title><rect width="11.4" height="15" x="567.2" y="325" fill="#ED7321" rx="2" ry="2"/></g><g><title>[unknown] (11 samples, 0.21%)</title><rect width="2.5" height="15" x="11.1" y="517" fill="#F74F14" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087" y="245" fill="#D1C001" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (7 samples, 0.13%)</title><rect width="1.6" height="15" x="256.5" y="245" fill="#F70C1E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (1 samples, 0.02%)</title><rect width=".2" height="15" x="319.4" y="389" fill="#D4C71C" rx="2" ry="2"/></g><g><title>Defs::check (6 samples, 0.12%)</title><rect width="1.3" height="15" x="235.4" y="517" fill="#EEDD26" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (23 samples, 0.44%)</title><rect width="5.2" height="15" x="912" y="229" fill="#CF812E" rx="2" ry="2"/></g><g><title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1049.7" y="229" fill="#F9971D" rx="2" ry="2"/></g><g><title>Node::variableSubsitution (3 samples, 0.06%)</title><rect width=".7" height="15" x="1063.6" y="405" fill="#CF8D0E" rx="2" ry="2"/></g><g><title>memcpy@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="898.1" y="213" fill="#FDD607" rx="2" ry="2"/></g><g><title>all (5,199 samples, 100%)</title><rect width="1180" height="15" x="10" y="613" fill="#EDDF20" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="976.9" y="309" fill="#FB9501" rx="2" ry="2"/></g><g><title>EcfFile::countEcfMicro (2 samples, 0.04%)</title><rect width=".5" height="15" x="1033.8" y="325" fill="#E85504" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (6 samples, 0.12%)</title><rect width="1.4" height="15" x="556.5" y="245" fill="#F41004" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".3" height="15" x="142.5" y="421" fill="#F5A117" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".2" height="15" x="988.5" y="293" fill="#F99E01" rx="2" ry="2"/></g><g><title>std::vector&lt;ecf::CronAttr, std::allocator&lt;ecf::CronAttr&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="309.4" y="405" fill="#F88E18" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="314.8" y="309" fill="#F64925" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="237.6" y="421" fill="#D5AE21" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect width=".3" height="15" x="1050.6" y="213" fill="#CD8225" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char const*, void&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="351.6" y="325" fill="#FD652F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="280.5" y="149" fill="#E4E514" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::operator++ (3 samples, 0.06%)</title><rect width=".6" height="15" x="573.6" y="309" fill="#FC4B19" rx="2" ry="2"/></g><g><title>NState::state (1 samples, 0.02%)</title><rect width=".3" height="15" x="973.2" y="277" fill="#ED4D28" rx="2" ry="2"/></g><g><title>free (13 samples, 0.25%)</title><rect width="3" height="15" x="962.1" y="277" fill="#F09A05" rx="2" ry="2"/></g><g><title>[perf_job_gen] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1003.7" y="309" fill="#EF4C0E" rx="2" ry="2"/></g><g><title>Suite::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="578.8" y="325" fill="#E85F33" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (8 samples, 0.15%)</title><rect width="1.8" height="15" x="399" y="277" fill="#DA4826" rx="2" ry="2"/></g><g><title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.2" y="373" fill="#D58C1A" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (101 samples, 1.94%)</title><rect width="22.9" height="15" x="261.7" y="277" fill="#FC4D27" rx="2" ry="2"/><text x="264.71" y="287.5">P..</text></g><g><title>Node::find_parent_user_variable_value (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.6" y="261" fill="#F45A2F" rx="2" ry="2"/></g><g><title>Node::set_state (2 samples, 0.04%)</title><rect width=".5" height="15" x="286.4" y="325" fill="#D8930C" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="1084.2" y="501" fill="#E97F35" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.6" y="277" fill="#EBDC22" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="904" y="181" fill="#D1BE0A" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="540.9" y="309" fill="#E2D632" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="293.5" y="229" fill="#F3AA05" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (2 samples, 0.04%)</title><rect width=".4" height="15" x="311.2" y="373" fill="#EC6D11" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EE@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="596" y="357" fill="#D8C823" rx="2" ry="2"/></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1054.5" y="245" fill="#E2361F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".2" height="15" x="332.5" y="293" fill="#E29022" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="281.9" y="133" fill="#EFB12D" rx="2" ry="2"/></g><g><title>boost::conversion::detail::try_lexical_convert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="315.3" y="325" fill="#D9B534" rx="2" ry="2"/></g><g><title>_int_free (91 samples, 1.75%)</title><rect width="20.7" height="15" x="1087.6" y="581" fill="#DF5D05" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="296.9" y="197" fill="#F87028" rx="2" ry="2"/></g><g><title>std::__get_helper&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="554.9" y="197" fill="#D1A026" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (8 samples, 0.15%)</title><rect width="1.8" height="15" x="668.7" y="197" fill="#F3180C" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (1 samples, 0.02%)</title><rect width=".2" height="15" x="280.8" y="117" fill="#E4BB16" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="263.3" y="245" fill="#CD500A" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".2" height="15" x="973" y="325" fill="#CF6D2F" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="167.5" y="533" fill="#FAD003" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="802.6" y="213" fill="#E29819" rx="2" ry="2"/></g><g><title>Node::Node (2 samples, 0.04%)</title><rect width=".5" height="15" x="240.6" y="277" fill="#E68D2A" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="331.6" y="325" fill="#EAAD28" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="876.8" y="133" fill="#D94125" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect width=".2" height="15" x="540.2" y="309" fill="#D72E0F" rx="2" ry="2"/></g><g><title>_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="330.9" y="357" fill="#E1B719" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.3" height="15" x="155.5" y="485" fill="#F6950D" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1052.9" y="197" fill="#E88B05" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="197" fill="#DCBC01" rx="2" ry="2"/></g><g><title>operator delete (2 samples, 0.04%)</title><rect width=".4" height="15" x="965.1" y="277" fill="#EF1206" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1065.2" y="373" fill="#F85008" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (7 samples, 0.13%)</title><rect width="1.6" height="15" x="583.5" y="325" fill="#EC5C00" rx="2" ry="2"/></g><g><title>EcfFile::operator= (6 samples, 0.12%)</title><rect width="1.4" height="15" x="1062" y="405" fill="#DB732A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect width=".2" height="15" x="883.6" y="245" fill="#D3021F" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;Task*&gt; &gt;::construct&lt;Task*, Task*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="405" fill="#CF582E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.9" y="357" fill="#FC2807" rx="2" ry="2"/></g><g><title>std::next&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1051.1" y="197" fill="#FE1209" rx="2" ry="2"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".3" height="15" x="970.5" y="277" fill="#DB3931" rx="2" ry="2"/></g><g><title>NodeContainer::resolveDependencies (3,647 samples, 70.15%)</title><rect width="827.8" height="15" x="245.8" y="517" fill="#EEB921" rx="2" ry="2"/><text x="248.82" y="527.5">NodeContainer::resolveDependencies</text></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".3" height="15" x="1070.8" y="357" fill="#EEC01E" rx="2" ry="2"/></g><g><title>_IO_file_close (82 samples, 1.58%)</title><rect width="18.6" height="15" x="182.7" y="581" fill="#EA6403" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect width=".3" height="15" x="305.7" y="245" fill="#E25626" rx="2" ry="2"/></g><g><title>Submittable::createChildProcess (1 samples, 0.02%)</title><rect width=".2" height="15" x="286.9" y="325" fill="#F09022" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3 samples, 0.06%)</title><rect width=".7" height="15" x="1041.3" y="277" fill="#D92135" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (3 samples, 0.06%)</title><rect width=".7" height="15" x="390.4" y="277" fill="#D6DD07" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="305.7" y="213" fill="#DB0218" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="485" fill="#EA050F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="302.6" y="213" fill="#CF2C21" rx="2" ry="2"/></g><g><title>Node::add_variable (2 samples, 0.04%)</title><rect width=".5" height="15" x="239.9" y="437" fill="#E2581E" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (2 samples, 0.04%)</title><rect width=".5" height="15" x="252.4" y="245" fill="#E87E16" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (1,462 samples, 28.12%)</title><rect width="331.8" height="15" x="606.5" y="373" fill="#CD0C2A" rx="2" ry="2"/><text x="609.47" y="383.5">PreProcessor::preProcess</text></g><g><title>Node::findVariable (3 samples, 0.06%)</title><rect width=".7" height="15" x="992.5" y="309" fill="#FCE408" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1062.7" y="309" fill="#FAD323" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".5" height="15" x="910.6" y="277" fill="#CEBA15" rx="2" ry="2"/></g><g><title>__dynamic_cast (3 samples, 0.06%)</title><rect width=".7" height="15" x="231.7" y="581" fill="#F1171E" rx="2" ry="2"/></g><g><title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="158.7" y="533" fill="#D2D10D" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="286" y="245" fill="#D5561B" rx="2" ry="2"/></g><g><title>std::vector&lt;Task*, std::allocator&lt;Task*&gt; &gt;::emplace_back&lt;Task*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.7" y="421" fill="#F93E26" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="1059.5" y="341" fill="#F5C720" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".2" height="15" x="1057.9" y="293" fill="#F8B22B" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (12 samples, 0.23%)</title><rect width="2.7" height="15" x="558.1" y="293" fill="#EBDB24" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (12 samples, 0.23%)</title><rect width="2.7" height="15" x="860.2" y="181" fill="#CEB81E" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="987.3" y="341" fill="#E36016" rx="2" ry="2"/></g><g><title>[unknown] (36 samples, 0.69%)</title><rect width="8.2" height="15" x="97.8" y="517" fill="#F5B52F" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (4 samples, 0.08%)</title><rect width=".9" height="15" x="352.3" y="357" fill="#ED770F" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="319.1" y="373" fill="#D48521" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="312.1" y="325" fill="#FA6B06" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="907" y="261" fill="#EEDB26" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect width=".3" height="15" x="248.5" y="277" fill="#F0DC2F" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (3 samples, 0.06%)</title><rect width=".7" height="15" x="1050.6" y="245" fill="#EC0F26" rx="2" ry="2"/></g><g><title>_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="688.9" y="245" fill="#E2612D" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="994.4" y="325" fill="#E2C026" rx="2" ry="2"/></g><g><title>_IO_un_link (3 samples, 0.06%)</title><rect width=".7" height="15" x="202" y="581" fill="#EA0506" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="561.3" y="213" fill="#F75E2C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="305.3" y="181" fill="#E7B736" rx="2" ry="2"/></g><g><title>NodeContainer::findImmediateChild (1 samples, 0.02%)</title><rect width=".3" height="15" x="235.8" y="277" fill="#EBAD12" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="286.9" y="277" fill="#E0E210" rx="2" ry="2"/></g><g><title>ecf::theComputedNodeState&lt;std::shared_ptr&lt;Suite&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="973" y="277" fill="#F3D11D" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (2 samples, 0.04%)</title><rect width=".4" height="15" x="412.2" y="293" fill="#EB6028" rx="2" ry="2"/></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="827.1" y="133" fill="#D16C16" rx="2" ry="2"/></g><g><title>boost::lexical_cast&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="315.3" y="341" fill="#ED2920" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (2 samples, 0.04%)</title><rect width=".4" height="15" x="545.9" y="325" fill="#EE5019" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="875.9" y="149" fill="#E43612" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="313.7" y="277" fill="#EA1915" rx="2" ry="2"/></g><g><title>Node::findVariableValue (4 samples, 0.08%)</title><rect width=".9" height="15" x="978.7" y="325" fill="#EFC01F" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="397" y="229" fill="#FA7C22" rx="2" ry="2"/></g><g><title>VariableParser::doParse (2 samples, 0.04%)</title><rect width=".5" height="15" x="239.9" y="453" fill="#E38115" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (6 samples, 0.12%)</title><rect width="1.4" height="15" x="312.5" y="325" fill="#E8830A" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="827.5" y="133" fill="#D94417" rx="2" ry="2"/></g><g><title>ecf::JobProfiler::~JobProfiler (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.8" y="453" fill="#EA8A29" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="311.6" y="373" fill="#F0332F" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".7" height="15" x="1059.7" y="293" fill="#D1652F" rx="2" ry="2"/></g><g><title>EcfFile::variableSubstitution (87 samples, 1.67%)</title><rect width="19.7" height="15" x="1008.2" y="405" fill="#DE9901" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (78 samples, 1.50%)</title><rect width="17.7" height="15" x="632.8" y="309" fill="#DC302E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (20 samples, 0.38%)</title><rect width="4.6" height="15" x="926.7" y="309" fill="#FE811B" rx="2" ry="2"/></g><g><title>FamGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="387.9" y="309" fill="#FCC118" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (6 samples, 0.12%)</title><rect width="1.3" height="15" x="863.2" y="149" fill="#E59013" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (15 samples, 0.29%)</title><rect width="3.4" height="15" x="598.3" y="357" fill="#F07F28" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (2 samples, 0.04%)</title><rect width=".4" height="15" x="989.4" y="341" fill="#F33C00" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (3 samples, 0.06%)</title><rect width=".7" height="15" x="726.1" y="261" fill="#D37E11" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;Variable&gt; &gt;::construct&lt;Variable, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.9" y="405" fill="#FD671C" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (80 samples, 1.54%)</title><rect width="18.1" height="15" x="819.4" y="213" fill="#D80424" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::end (1 samples, 0.02%)</title><rect width=".3" height="15" x="987.5" y="341" fill="#ED1703" rx="2" ry="2"/></g><g><title>[unknown] (67 samples, 1.29%)</title><rect width="15.2" height="15" x="77.4" y="549" fill="#DB6812" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (4 samples, 0.08%)</title><rect width=".9" height="15" x="832.1" y="197" fill="#E50C1F" rx="2" ry="2"/></g><g><title>SubGenVariables::update_generated_variables (25 samples, 0.48%)</title><rect width="5.7" height="15" x="311.2" y="389" fill="#CE6031" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1035" y="277" fill="#F8A40D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.7" y="357" fill="#EC3E34" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="309" fill="#F65C05" rx="2" ry="2"/></g><g><title>Family::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="553.1" y="325" fill="#E9B930" rx="2" ry="2"/></g><g><title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="902" y="197" fill="#DB9F27" rx="2" ry="2"/></g><g><title>Submittable::update_generated_variables (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.3" y="469" fill="#E1211E" rx="2" ry="2"/></g><g><title>boost::date_time::date&lt;boost::gregorian::date, boost::gregorian::gregorian_calendar, boost::gregorian::date_duration&gt;::date (1 samples, 0.02%)</title><rect width=".2" height="15" x="1000.7" y="357" fill="#FB1B08" rx="2" ry="2"/></g><g><title>ServerState::find_variable (5 samples, 0.10%)</title><rect width="1.1" height="15" x="313.9" y="325" fill="#FE5F00" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::operator++ (1 samples, 0.02%)</title><rect width=".2" height="15" x="544.3" y="325" fill="#FC9D09" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".5" height="15" x="956.2" y="373" fill="#E09615" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="341" fill="#EA850A" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="938.5" y="341" fill="#FE781B" rx="2" ry="2"/></g><g><title>std::locale::~locale (2 samples, 0.04%)</title><rect width=".5" height="15" x="31.3" y="549" fill="#F79127" rx="2" ry="2"/></g><g><title>Submittable::update_generated_variables (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.8" y="373" fill="#D28409" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (11 samples, 0.21%)</title><rect width="2.5" height="15" x="273.3" y="181" fill="#F4AD27" rx="2" ry="2"/></g><g><title>_Znwm@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="830.9" y="117" fill="#D39B2F" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (7 samples, 0.13%)</title><rect width="1.6" height="15" x="294.6" y="293" fill="#DC801C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.10%)</title><rect width="1.1" height="15" x="937.2" y="325" fill="#FB091F" rx="2" ry="2"/></g><g><title>Task::get_all_nodes (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.2" y="501" fill="#D0E408" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (4 samples, 0.08%)</title><rect width=".9" height="15" x="280.8" y="149" fill="#FB6627" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="1059" y="405" fill="#F3AD00" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="281.2" y="117" fill="#DE472A" rx="2" ry="2"/></g><g><title>Parser::doParse (3 samples, 0.06%)</title><rect width=".7" height="15" x="237.2" y="469" fill="#CEB714" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;int*&gt;, int*, int&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="344.1" y="309" fill="#E9B807" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".4" height="15" x="291.7" y="293" fill="#D2DC2C" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::base (2 samples, 0.04%)</title><rect width=".5" height="15" x="571.7" y="309" fill="#E8BC11" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1058.6" y="405" fill="#EC9513" rx="2" ry="2"/></g><g><title>std::__make_move_if_noexcept_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="680.7" y="213" fill="#EB001A" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (2 samples, 0.04%)</title><rect width=".5" height="15" x="1027.9" y="405" fill="#D1351C" rx="2" ry="2"/></g><g><title>Node::add_part_trigger (3 samples, 0.06%)</title><rect width=".7" height="15" x="239.2" y="437" fill="#D75E24" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (14 samples, 0.27%)</title><rect width="3.2" height="15" x="884.7" y="261" fill="#E0051A" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.6" y="325" fill="#D76036" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Node&gt; &gt;::construct&lt;std::shared_ptr&lt;Node&gt;, std::shared_ptr&lt;Node&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.2" y="437" fill="#FDAA1B" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="562.9" y="277" fill="#EE3B24" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="969.4" y="309" fill="#D31203" rx="2" ry="2"/></g><g><title>Node::variable_substitution (2 samples, 0.04%)</title><rect width=".5" height="15" x="1002.3" y="389" fill="#E6D732" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="941.9" y="373" fill="#F81535" rx="2" ry="2"/></g><g><title>boost::posix_time::ptime::ptime (1 samples, 0.02%)</title><rect width=".2" height="15" x="1001.4" y="373" fill="#EE6B00" rx="2" ry="2"/></g><g><title>Variable::empty (1 samples, 0.02%)</title><rect width=".3" height="15" x="416.7" y="309" fill="#F73B16" rx="2" ry="2"/></g><g><title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".3" height="15" x="955.5" y="373" fill="#ED570E" rx="2" ry="2"/></g><g><title>[unknown] (7 samples, 0.13%)</title><rect width="1.6" height="15" x="942.8" y="293" fill="#EA2920" rx="2" ry="2"/></g><g><title>boost::date_time::base_time&lt;boost::posix_time::ptime, boost::date_time::counted_time_system&lt;boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt; &gt; &gt;::base_time (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000.9" y="357" fill="#D4721E" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".3" height="15" x="1053.1" y="197" fill="#DDB223" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (25 samples, 0.48%)</title><rect width="5.7" height="15" x="297.8" y="245" fill="#F75A00" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".5" height="15" x="1004.3" y="341" fill="#D5E41D" rx="2" ry="2"/></g><g><title>boost::detail::lexical_converter_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt;::try_convert (5 samples, 0.10%)</title><rect width="1.2" height="15" x="320.9" y="325" fill="#D4AE2E" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="277" fill="#D6740D" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="285.8" y="309" fill="#EF8327" rx="2" ry="2"/></g><g><title>std::ios_base::ios_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="163.2" y="565" fill="#E5AD20" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (1 samples, 0.02%)</title><rect width=".2" height="15" x="277.6" y="165" fill="#E19233" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect width=".2" height="15" x="970.1" y="341" fill="#E1260E" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.4" y="357" fill="#CE4125" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (6 samples, 0.12%)</title><rect width="1.4" height="15" x="556.5" y="277" fill="#EBBA08" rx="2" ry="2"/></g><g><title>[unknown] (6 samples, 0.12%)</title><rect width="1.4" height="15" x="1085.8" y="517" fill="#CD150D" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="277.4" y="197" fill="#F3D405" rx="2" ry="2"/></g><g><title>Node::findVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="650.5" y="293" fill="#D0102C" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt (3 samples, 0.06%)</title><rect width=".6" height="15" x="594.7" y="357" fill="#FB151D" rx="2" ry="2"/></g><g><title>[unknown] (82 samples, 1.58%)</title><rect width="18.6" height="15" x="182.7" y="565" fill="#D99C02" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect width=".3" height="15" x="1053.1" y="261" fill="#DB761D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (28 samples, 0.54%)</title><rect width="6.4" height="15" x="586.5" y="309" fill="#DEBC22" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (4 samples, 0.08%)</title><rect width=".9" height="15" x="998.4" y="341" fill="#FEC601" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="982.3" y="325" fill="#F52817" rx="2" ry="2"/></g><g><title>TaskParser::addTask (4 samples, 0.08%)</title><rect width=".9" height="15" x="240.4" y="469" fill="#FEBB08" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="576.5" y="309" fill="#EB8332" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (31 samples, 0.60%)</title><rect width="7" height="15" x="871.6" y="197" fill="#CE2019" rx="2" ry="2"/></g><g><title>NodeContainer::begin (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.6" y="421" fill="#E10200" rx="2" ry="2"/></g><g><title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="834.3" y="197" fill="#DA3719" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="890.4" y="245" fill="#FB6F2C" rx="2" ry="2"/></g><g><title>Submittable::update_static_generated_variables (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.6" y="309" fill="#DFDB1F" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="311" y="357" fill="#D31C1A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="304.6" y="181" fill="#D8762D" rx="2" ry="2"/></g><g><title>Node::add_variable (1 samples, 0.02%)</title><rect width=".3" height="15" x="237.6" y="437" fill="#E34A0E" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="267.6" y="181" fill="#E44100" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".3" height="15" x="331.8" y="293" fill="#F7562D" rx="2" ry="2"/></g><g><title>std::istream::sentry::sentry (2 samples, 0.04%)</title><rect width=".4" height="15" x="835.3" y="197" fill="#E7D616" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="1055.9" y="309" fill="#CF0928" rx="2" ry="2"/></g><g><title>Family::update_generated_variables (1 samples, 0.02%)</title><rect width=".3" height="15" x="233.3" y="453" fill="#FC3617" rx="2" ry="2"/></g><g><title>_Znwm@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="895.9" y="213" fill="#F86317" rx="2" ry="2"/></g><g><title>Node::begin (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.6" y="373" fill="#E06803" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".3" height="15" x="259.4" y="197" fill="#D2A822" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="260.1" y="293" fill="#F21A0F" rx="2" ry="2"/></g><g><title>ServerState::find_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.6" y="245" fill="#EF2E26" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="565.4" y="293" fill="#E13F36" rx="2" ry="2"/></g><g><title>[perf_job_gen] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1056.1" y="245" fill="#E42804" rx="2" ry="2"/></g><g><title>_IO_setb (1 samples, 0.02%)</title><rect width=".2" height="15" x="201.8" y="581" fill="#E59619" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::begin (3 samples, 0.06%)</title><rect width=".7" height="15" x="542" y="309" fill="#F9940C" rx="2" ry="2"/></g><g><title>strlen (5 samples, 0.10%)</title><rect width="1.1" height="15" x="53.8" y="549" fill="#ED380D" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;Family&gt;::construct&lt;Family, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="325" fill="#FADC29" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="994.6" y="325" fill="#E1840F" rx="2" ry="2"/></g><g><title>SubGenVariables::SubGenVariables (7 samples, 0.13%)</title><rect width="1.6" height="15" x="309.6" y="389" fill="#D98C2F" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="997.3" y="325" fill="#FAD711" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (1 samples, 0.02%)</title><rect width=".2" height="15" x="280.8" y="101" fill="#DB6218" rx="2" ry="2"/></g><g><title>std::shared_ptr&lt;Family&gt;::shared_ptr&lt;std::allocator&lt;Family&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="405" fill="#E7D928" rx="2" ry="2"/></g><g><title>boost::date_time::gregorian_calendar_base&lt;boost::date_time::year_month_day_base&lt;boost::gregorian::greg_year, boost::gregorian::greg_month, boost::gregorian::greg_day&gt;, unsigned int&gt;::day_number (1 samples, 0.02%)</title><rect width=".2" height="15" x="1000.7" y="341" fill="#E09A15" rx="2" ry="2"/></g><g><title>Node::find_parent_gen_variable_value (2 samples, 0.04%)</title><rect width=".5" height="15" x="292.1" y="309" fill="#FAE422" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="882" y="213" fill="#F2142B" rx="2" ry="2"/></g><g><title>FamilyParser::doParse (4 samples, 0.08%)</title><rect width=".9" height="15" x="237" y="485" fill="#F7A10C" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".3" height="15" x="995" y="309" fill="#DF9A14" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (2 samples, 0.04%)</title><rect width=".4" height="15" x="1002.8" y="437" fill="#E92A14" rx="2" ry="2"/></g><g><title>malloc@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="897.9" y="213" fill="#DA940D" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="680.5" y="181" fill="#CD671B" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1046.8" y="245" fill="#D00B2E" rx="2" ry="2"/></g><g><title>boost::lexical_cast&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, unsigned long&gt; (5 samples, 0.10%)</title><rect width="1.2" height="15" x="320.9" y="357" fill="#FD8626" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (10 samples, 0.19%)</title><rect width="2.2" height="15" x="917.9" y="277" fill="#E89229" rx="2" ry="2"/></g><g><title>memchr (21 samples, 0.40%)</title><rect width="4.8" height="15" x="143" y="565" fill="#E98720" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (2 samples, 0.04%)</title><rect width=".5" height="15" x="850" y="181" fill="#DBD91F" rx="2" ry="2"/></g><g><title>std::_Rb_tree_header::_M_reset (1 samples, 0.02%)</title><rect width=".3" height="15" x="980.7" y="293" fill="#FDE535" rx="2" ry="2"/></g><g><title>boost::date_time::counted_time_system&lt;boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt; &gt;::get_time_rep (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000.9" y="341" fill="#E51C06" rx="2" ry="2"/></g><g><title>ServerState::find_variable (2 samples, 0.04%)</title><rect width=".5" height="15" x="994.8" y="341" fill="#F18302" rx="2" ry="2"/></g><g><title>std::shared_ptr&lt;Node&gt;::shared_ptr (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.2" y="421" fill="#F23C02" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.02%)</title><rect width=".2" height="15" x="1047.5" y="245" fill="#CDD51C" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="1051.3" y="213" fill="#FCE236" rx="2" ry="2"/></g><g><title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect width=".2" height="15" x="1000.5" y="389" fill="#F02002" rx="2" ry="2"/></g><g><title>Node::findVariableValue (2 samples, 0.04%)</title><rect width=".5" height="15" x="1046.3" y="277" fill="#F5D820" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect width=".5" height="15" x="302.1" y="197" fill="#D1CF21" rx="2" ry="2"/></g><g><title>std::__get_helper&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="400.6" y="197" fill="#DBB019" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (2 samples, 0.04%)</title><rect width=".5" height="15" x="289.6" y="277" fill="#F86325" rx="2" ry="2"/></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (1 samples, 0.02%)</title><rect width=".3" height="15" x="1183.6" y="581" fill="#F89710" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect width=".3" height="15" x="865.4" y="101" fill="#F69510" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (1,165 samples, 22.41%)</title><rect width="264.4" height="15" x="655.7" y="293" fill="#D81B12" rx="2" ry="2"/><text x="658.72" y="303.5">PreProcessor::preProcess_includes</text></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".2" height="15" x="561.3" y="229" fill="#DC0112" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (7 samples, 0.13%)</title><rect width="1.6" height="15" x="803.7" y="197" fill="#DC9600" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::shared_ptr&lt;Node&gt; &gt;::construct&lt;std::shared_ptr&lt;Node&gt;, std::shared_ptr&lt;Node&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.9" y="421" fill="#E69C28" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (23 samples, 0.44%)</title><rect width="5.2" height="15" x="407" y="277" fill="#D61612" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1008.9" y="357" fill="#F65202" rx="2" ry="2"/></g><g><title>std::locale::locale (2 samples, 0.04%)</title><rect width=".5" height="15" x="30.4" y="549" fill="#FB911B" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="151.2" y="549" fill="#E1D61D" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".2" height="15" x="980.1" y="277" fill="#E9A310" rx="2" ry="2"/></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="283.7" y="149" fill="#F18231" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".2" height="15" x="689.3" y="245" fill="#DD230E" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="978.2" y="293" fill="#E2AD1E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".3" height="15" x="904.9" y="213" fill="#E5000A" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="910.2" y="277" fill="#D7DB35" rx="2" ry="2"/></g><g><title>VariableParser::doParse (2 samples, 0.04%)</title><rect width=".5" height="15" x="237.4" y="453" fill="#E84C00" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3 samples, 0.06%)</title><rect width=".7" height="15" x="300.3" y="213" fill="#E58529" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.9" height="15" x="229.2" y="501" fill="#DFD933" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (21 samples, 0.40%)</title><rect width="4.8" height="15" x="344.3" y="357" fill="#DDE309" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="931.7" y="325" fill="#F3031C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (3 samples, 0.06%)</title><rect width=".7" height="15" x="283.9" y="245" fill="#DF8930" rx="2" ry="2"/></g><g><title>__dynamic_cast@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="180.7" y="533" fill="#FA3C20" rx="2" ry="2"/></g><g><title>Task::script_extension[abi:cxx11] (4 samples, 0.08%)</title><rect width=".9" height="15" x="1067" y="405" fill="#D30002" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="594.4" y="357" fill="#EA6A19" rx="2" ry="2"/></g><g><title>std::ios_base::~ios_base (3 samples, 0.06%)</title><rect width=".7" height="15" x="163.4" y="565" fill="#E87921" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="932.4" y="325" fill="#FAC921" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (111 samples, 2.14%)</title><rect width="25.2" height="15" x="607.6" y="325" fill="#E53719" rx="2" ry="2"/><text x="610.6" y="335.5">E..</text></g><g><title>NodePath::split (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.4" y="293" fill="#F43315" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="1072.7" y="421" fill="#DB4001" rx="2" ry="2"/></g><g><title>ecf::File::splitFileIntoLines (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.7" y="421" fill="#E76B24" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (13 samples, 0.25%)</title><rect width="3" height="15" x="277.8" y="165" fill="#CF0036" rx="2" ry="2"/></g><g><title>Node::setStateOnly (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.6" y="533" fill="#F07128" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="824.1" y="165" fill="#DA7008" rx="2" ry="2"/></g><g><title>Node::find_parent_gen_variable_value (117 samples, 2.25%)</title><rect width="26.5" height="15" x="552.5" y="341" fill="#F02E16" rx="2" ry="2"/><text x="555.45" y="351.5">N..</text></g><g><title>Node::findParentUserVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="264.7" y="245" fill="#DBB41D" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="229" fill="#EA4615" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (1 samples, 0.02%)</title><rect width=".2" height="15" x="262.4" y="229" fill="#D1AD11" rx="2" ry="2"/></g><g><title>memcmp@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="411.7" y="261" fill="#E5DD27" rx="2" ry="2"/></g><g><title>[unknown] (7 samples, 0.13%)</title><rect width="1.6" height="15" x="942.8" y="325" fill="#FD2428" rx="2" ry="2"/></g><g><title>Node::state (1 samples, 0.02%)</title><rect width=".3" height="15" x="973.2" y="293" fill="#F11235" rx="2" ry="2"/></g><g><title>EcfFile::create_job[abi:cxx11] (174 samples, 3.35%)</title><rect width="39.5" height="15" x="246.5" y="325" fill="#D23E19" rx="2" ry="2"/><text x="249.5" y="335.5">Ecf..</text></g><g><title>std::operator==&lt;char&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="311.9" y="341" fill="#F24C02" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase_at_end (6 samples, 0.12%)</title><rect width="1.4" height="15" x="1062" y="373" fill="#E6A70B" rx="2" ry="2"/></g><g><title>Variable::theValue[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="570.2" y="309" fill="#F06431" rx="2" ry="2"/></g><g><title>[unknown] (91 samples, 1.75%)</title><rect width="20.6" height="15" x="205.9" y="565" fill="#DF142E" rx="2" ry="2"/></g><g><title>Family::defs (1 samples, 0.02%)</title><rect width=".3" height="15" x="258.5" y="197" fill="#FE9C13" rx="2" ry="2"/></g><g><title>std::__iterator_category&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="877.2" y="133" fill="#E27813" rx="2" ry="2"/></g><g><title>Node::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="988.5" y="325" fill="#D0822E" rx="2" ry="2"/></g><g><title>std::__shared_ptr&lt;IncludeFileCache, (21 samples, 0.40%)</title><rect width="4.8" height="15" x="702.2" y="213" fill="#E8C20D" rx="2" ry="2"/></g><g><title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1007.7" y="341" fill="#D76630" rx="2" ry="2"/></g><g><title>std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1007.7" y="357" fill="#EF7419" rx="2" ry="2"/></g><g><title>__memmove_avx_unaligned (1 samples, 0.02%)</title><rect width=".3" height="15" x="1083.3" y="581" fill="#E27636" rx="2" ry="2"/></g><g><title>Node::variable_substitution (13 samples, 0.25%)</title><rect width="3" height="15" x="312.3" y="357" fill="#E8551C" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="970.3" y="325" fill="#D84F06" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (2 samples, 0.04%)</title><rect width=".4" height="15" x="1024.1" y="341" fill="#F17325" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1058.1" y="357" fill="#FBD41F" rx="2" ry="2"/></g><g><title>ecf::LogImpl::log (3 samples, 0.06%)</title><rect width=".7" height="15" x="972.1" y="325" fill="#DA0F12" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (16 samples, 0.31%)</title><rect width="3.6" height="15" x="613.3" y="277" fill="#E3D01F" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::operator++ (3 samples, 0.06%)</title><rect width=".7" height="15" x="537.9" y="309" fill="#FECE1F" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.6" y="309" fill="#CD7C04" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="286" y="229" fill="#F0772C" rx="2" ry="2"/></g><g><title>std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect width=".6" height="15" x="998.7" y="325" fill="#E58217" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (13 samples, 0.25%)</title><rect width="2.9" height="15" x="394.3" y="261" fill="#DC3F27" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1053.4" y="277" fill="#F5C31C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1056.8" y="261" fill="#CE4B06" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (5 samples, 0.10%)</title><rect width="1.2" height="15" x="1060.6" y="405" fill="#F9012A" rx="2" ry="2"/></g><g><title>std::__iterator_category&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="616.2" y="197" fill="#F97E18" rx="2" ry="2"/></g><g><title>Variable::empty (3 samples, 0.06%)</title><rect width=".7" height="15" x="543.1" y="325" fill="#FDC707" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="297.1" y="165" fill="#EF9211" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="332.7" y="293" fill="#EE7705" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="306.4" y="293" fill="#E58018" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1065.4" y="373" fill="#CE6102" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="268.7" y="181" fill="#F52D28" rx="2" ry="2"/></g><g><title>Node::find_parent_user_variable_value (4 samples, 0.08%)</title><rect width=".9" height="15" x="1067" y="389" fill="#F62927" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="305.3" y="213" fill="#F99935" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="876.1" y="149" fill="#F78632" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="671.8" y="181" fill="#FC1C0F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="865" y="133" fill="#DFB025" rx="2" ry="2"/></g><g><title>std::vector&lt;Label, std::allocator&lt;Label&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="239" y="373" fill="#D9E420" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".5" height="15" x="869.5" y="213" fill="#F43214" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".7" height="15" x="105.3" y="341" fill="#EC7A06" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".2" height="15" x="532.5" y="293" fill="#F4352F" rx="2" ry="2"/></g><g><title>std::next&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="868.2" y="181" fill="#F62E22" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="852.5" y="213" fill="#EA8E31" rx="2" ry="2"/></g><g><title>TaskParser::doParse (11 samples, 0.21%)</title><rect width="2.5" height="15" x="238.8" y="485" fill="#CFE302" rx="2" ry="2"/></g><g><title>std::ios_base::~ios_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="932.2" y="325" fill="#D97B2D" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (370 samples, 7.12%)</title><rect width="83.9" height="15" x="726.8" y="277" fill="#D4A41F" rx="2" ry="2"/><text x="729.76" y="287.5">PreProces..</text></g><g><title>Node::find_parent_gen_variable_value (12 samples, 0.23%)</title><rect width="2.7" height="15" x="312.3" y="341" fill="#DC9C07" rx="2" ry="2"/></g><g><title>Node::check (6 samples, 0.12%)</title><rect width="1.3" height="15" x="235.4" y="453" fill="#D5151E" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3 samples, 0.06%)</title><rect width=".6" height="15" x="957.4" y="293" fill="#F51230" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.6" y="373" fill="#E0A409" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="332.7" y="325" fill="#ED0E32" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".5" height="15" x="805.5" y="181" fill="#E53F32" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="305.3" y="229" fill="#EC5427" rx="2" ry="2"/></g><g><title>[unknown] (6 samples, 0.12%)</title><rect width="1.4" height="15" x="47.2" y="421" fill="#CFD80C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect width=".2" height="15" x="1055.9" y="293" fill="#D63429" rx="2" ry="2"/></g><g><title>Repeat::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="579.5" y="341" fill="#DD2022" rx="2" ry="2"/></g><g><title>EcfFile::EcfFile (12 samples, 0.23%)</title><rect width="2.7" height="15" x="981.4" y="373" fill="#E75313" rx="2" ry="2"/></g><g><title>std::__shared_ptr&lt;IncludeFileCache, (1 samples, 0.02%)</title><rect width=".2" height="15" x="294.2" y="229" fill="#E8582F" rx="2" ry="2"/></g><g><title>std::operator==&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="919.5" y="165" fill="#FCAD00" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".3" height="15" x="974.8" y="325" fill="#ECD02F" rx="2" ry="2"/></g><g><title>[unknown] (38 samples, 0.73%)</title><rect width="8.6" height="15" x="192.7" y="389" fill="#EB7201" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="801" y="245" fill="#FC2306" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="238.6" y="405" fill="#D3A226" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="213" fill="#E21021" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="1040.9" y="277" fill="#EA1702" rx="2" ry="2"/></g><g><title>NodeContainer::begin (6 samples, 0.12%)</title><rect width="1.4" height="15" x="233.3" y="485" fill="#F6A918" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".4" height="15" x="1047.7" y="293" fill="#E5281F" rx="2" ry="2"/></g><g><title>boost::detail::lexical_istream_limited_src&lt;char, std::char_traits&lt;char&gt;, false, 40ul&gt;::shl_unsigned&lt;unsigned long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1003.7" y="325" fill="#F65726" rx="2" ry="2"/></g><g><title>std::__get_helper&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="395.6" y="197" fill="#F38013" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="651.6" y="277" fill="#EA2711" rx="2" ry="2"/></g><g><title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int, true&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="934.4" y="277" fill="#E47733" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="234" y="309" fill="#F3492A" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1112.4" y="565" fill="#E71B0E" rx="2" ry="2"/></g><g><title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1055.2" y="229" fill="#E48300" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".3" height="15" x="994.1" y="325" fill="#F18113" rx="2" ry="2"/></g><g><title>[unknown] (51 samples, 0.98%)</title><rect width="11.6" height="15" x="81" y="469" fill="#D34010" rx="2" ry="2"/></g><g><title>std::__shared_count&lt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="240.4" y="373" fill="#D36200" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".2" height="15" x="988.5" y="277" fill="#FA820B" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (1,454 samples, 27.97%)</title><rect width="330" height="15" x="606.5" y="357" fill="#EF3E16" rx="2" ry="2"/><text x="609.47" y="367.5">PreProcessor::preProcess_line</text></g><g><title>AstTop::accept (4 samples, 0.08%)</title><rect width=".9" height="15" x="235.4" y="421" fill="#E86A29" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="941.7" y="373" fill="#D2461A" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (2 samples, 0.04%)</title><rect width=".4" height="15" x="400.4" y="229" fill="#D9D317" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".3" height="15" x="142.5" y="469" fill="#E4351E" rx="2" ry="2"/></g><g><title>boost::posix_time::ptime::ptime (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.8" y="405" fill="#F77819" rx="2" ry="2"/></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect width=".2" height="15" x="151.2" y="533" fill="#E6CA13" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (12 samples, 0.23%)</title><rect width="2.7" height="15" x="479.6" y="309" fill="#F2050F" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1071.1" y="357" fill="#F5891B" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (18 samples, 0.35%)</title><rect width="4.1" height="15" x="265.3" y="197" fill="#D97316" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.04%)</title><rect width=".5" height="15" x="601.7" y="357" fill="#D63325" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="276.9" y="165" fill="#D94E00" rx="2" ry="2"/></g><g><title>Submittable::increment_try_no (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.3" y="485" fill="#CF2F2D" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="984.4" y="341" fill="#FCB827" rx="2" ry="2"/></g><g><title>IncludeFileCache::path[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="631.9" y="309" fill="#EC9603" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="1057.5" y="325" fill="#CFCA36" rx="2" ry="2"/></g><g><title>std::vector&lt;InLimit, std::allocator&lt;InLimit&gt; &gt;::begin (2 samples, 0.04%)</title><rect width=".5" height="15" x="308.2" y="373" fill="#E86833" rx="2" ry="2"/></g><g><title>boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="241.3" y="469" fill="#D7CA36" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="1064.5" y="357" fill="#D16E32" rx="2" ry="2"/></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="616.5" y="261" fill="#E09827" rx="2" ry="2"/></g><g><title>main (3,703 samples, 71.23%)</title><rect width="840.5" height="15" x="233.3" y="565" fill="#F8702E" rx="2" ry="2"/><text x="236.34" y="575.5">main</text></g><g><title>[unknown] (50 samples, 0.96%)</title><rect width="11.3" height="15" x="94.7" y="533" fill="#F4790A" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (4 samples, 0.08%)</title><rect width=".9" height="15" x="399.9" y="261" fill="#D20B01" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="882.2" y="245" fill="#D59A1D" rx="2" ry="2"/></g><g><title>__xstat64 (7 samples, 0.13%)</title><rect width="1.5" height="15" x="1083.6" y="581" fill="#FB4C31" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="318.2" y="373" fill="#F8CC32" rx="2" ry="2"/></g><g><title>Node::findGenVariable (3 samples, 0.06%)</title><rect width=".7" height="15" x="1009.1" y="325" fill="#CF581C" rx="2" ry="2"/></g><g><title>Task::get_all_nodes (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.9" y="485" fill="#EB0F0B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="315" y="309" fill="#EE9E2D" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (1 samples, 0.02%)</title><rect width=".3" height="15" x="1009.3" y="309" fill="#DA0B27" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="865.7" y="165" fill="#D5C402" rx="2" ry="2"/></g><g><title>EcfFile::doCreateJobFile[abi:cxx11] (49 samples, 0.94%)</title><rect width="11.1" height="15" x="319.8" y="373" fill="#E8632B" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="873.8" y="165" fill="#F27302" rx="2" ry="2"/></g><g><title>_IO_vsprintf (1 samples, 0.02%)</title><rect width=".2" height="15" x="77" y="565" fill="#EC8009" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (30 samples, 0.58%)</title><rect width="6.8" height="15" x="252.2" y="277" fill="#F2200F" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="994.8" y="325" fill="#F7B41A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="911.1" y="277" fill="#F5DD03" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (9 samples, 0.17%)</title><rect width="2.1" height="15" x="604.4" y="373" fill="#D6B10C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (64 samples, 1.23%)</title><rect width="14.5" height="15" x="666.2" y="229" fill="#EC781D" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (72 samples, 1.38%)</title><rect width="16.3" height="15" x="513.2" y="309" fill="#FBBD27" rx="2" ry="2"/></g><g><title>Submittable::script_based_job_submission (89 samples, 1.71%)</title><rect width="20.2" height="15" x="288" y="373" fill="#E6C200" rx="2" ry="2"/></g><g><title>ecf::Log::cache_time_stamp (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="357" fill="#E02C15" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (1 samples, 0.02%)</title><rect width=".3" height="15" x="1064.9" y="405" fill="#F37105" rx="2" ry="2"/></g><g><title>TaskParser::doParse (1 samples, 0.02%)</title><rect width=".2" height="15" x="237.2" y="453" fill="#DAB205" rx="2" ry="2"/></g><g><title>std::vector&lt;InLimit, std::allocator&lt;InLimit&gt; &gt;::begin (1 samples, 0.02%)</title><rect width=".2" height="15" x="1002.1" y="421" fill="#FDE21E" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (99 samples, 1.90%)</title><rect width="22.5" height="15" x="1034.3" y="325" fill="#CF1C36" rx="2" ry="2"/><text x="1037.3" y="335.5">P..</text></g><g><title>Submittable::update_generated_variables (2 samples, 0.04%)</title><rect width=".5" height="15" x="1002.3" y="437" fill="#E2E521" rx="2" ry="2"/></g><g><title>[unknown] (57 samples, 1.10%)</title><rect width="12.9" height="15" x="213.6" y="549" fill="#ED341C" rx="2" ry="2"/></g><g><title>__tzfile_compute (1 samples, 0.02%)</title><rect width=".2" height="15" x="106.5" y="565" fill="#F99B0B" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::is_infinity (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000.9" y="277" fill="#ED0516" rx="2" ry="2"/></g><g><title>FamilyParser::doParse (1 samples, 0.02%)</title><rect width=".2" height="15" x="238.8" y="469" fill="#D02B01" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="1002.8" y="405" fill="#E4A62C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="975.7" y="325" fill="#D60704" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::is_special (2 samples, 0.04%)</title><rect width=".5" height="15" x="971.4" y="325" fill="#FC2B31" rx="2" ry="2"/></g><g><title>std::next&lt;char const*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="922.9" y="293" fill="#EC391C" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".3" height="15" x="1046.3" y="261" fill="#F8BD30" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="293" fill="#E07C04" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="415.8" y="277" fill="#EA842F" rx="2" ry="2"/></g><g><title>Family::findGenVariable (6 samples, 0.12%)</title><rect width="1.3" height="15" x="554.3" y="309" fill="#D20919" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (3 samples, 0.06%)</title><rect width=".7" height="15" x="806" y="197" fill="#D3191A" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt (3 samples, 0.06%)</title><rect width=".7" height="15" x="894.5" y="213" fill="#D41C32" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (5 samples, 0.10%)</title><rect width="1.1" height="15" x="303.5" y="197" fill="#FC0007" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.10%)</title><rect width="1.1" height="15" x="331.6" y="309" fill="#E9C62E" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="1084.2" y="533" fill="#EA3F20" rx="2" ry="2"/></g><g><title>_ZNSo6sentryC1ERSo@plt (2 samples, 0.04%)</title><rect width=".5" height="15" x="972.1" y="309" fill="#E40927" rx="2" ry="2"/></g><g><title>ecf::Str::split (5 samples, 0.10%)</title><rect width="1.1" height="15" x="854.8" y="213" fill="#CD7736" rx="2" ry="2"/></g><g><title>Task::defs (1 samples, 0.02%)</title><rect width=".3" height="15" x="258.5" y="261" fill="#D45E1B" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="30.9" y="565" fill="#DD6915" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.04%)</title><rect width=".4" height="15" x="349.1" y="277" fill="#F2C304" rx="2" ry="2"/></g><g><title>ecf::Str::split (1 samples, 0.02%)</title><rect width=".2" height="15" x="264.9" y="245" fill="#E0510B" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="286" y="213" fill="#DF5426" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (2 samples, 0.04%)</title><rect width=".5" height="15" x="922.4" y="293" fill="#F3A914" rx="2" ry="2"/></g><g><title>[unknown] (35 samples, 0.67%)</title><rect width="7.9" height="15" x="84.7" y="405" fill="#D67018" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;ecf::AutoCancelAttr, std::default_delete&lt;ecf::AutoCancelAttr&gt; &gt;::__uniq_ptr_impl (2 samples, 0.04%)</title><rect width=".5" height="15" x="240.6" y="245" fill="#FBB230" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="859.5" y="181" fill="#E50F0E" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (1 samples, 0.02%)</title><rect width=".3" height="15" x="246" y="261" fill="#DFDB24" rx="2" ry="2"/></g><g><title>ecf::Str::split (28 samples, 0.54%)</title><rect width="6.4" height="15" x="801.2" y="261" fill="#D76F1A" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (4 samples, 0.08%)</title><rect width=".9" height="15" x="1036.8" y="261" fill="#E00E11" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (1 samples, 0.02%)</title><rect width=".2" height="15" x="1051.1" y="213" fill="#F1C92C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="867.3" y="117" fill="#E32427" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="249" y="293" fill="#E2700C" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="1032.7" y="309" fill="#D0D429" rx="2" ry="2"/></g><g><title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="909.7" y="245" fill="#D22F2F" rx="2" ry="2"/></g><g><title>std::__distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="297.1" y="133" fill="#CE2231" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="782.4" y="181" fill="#F0C720" rx="2" ry="2"/></g><g><title>Expression::createAST (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.3" y="421" fill="#F87D27" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="566.5" y="309" fill="#ECA622" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="680.5" y="213" fill="#EB391C" rx="2" ry="2"/></g><g><title>Submittable::script_based_job_submission (18 samples, 0.35%)</title><rect width="4.1" height="15" x="1069.5" y="469" fill="#D6652B" rx="2" ry="2"/></g><g><title>Node::findVariableValue (3 samples, 0.06%)</title><rect width=".6" height="15" x="1064.3" y="373" fill="#EAB005" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="805.7" y="165" fill="#F50C2D" rx="2" ry="2"/></g><g><title>free@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="597.2" y="357" fill="#ED2913" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".3" height="15" x="1062.4" y="309" fill="#F0A031" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (7 samples, 0.13%)</title><rect width="1.6" height="15" x="301" y="213" fill="#D34B2F" rx="2" ry="2"/></g><g><title>NodeContainer::begin (4 samples, 0.08%)</title><rect width=".9" height="15" x="233.6" y="453" fill="#D45111" rx="2" ry="2"/></g><g><title>EcfFile::doCreateJobFile[abi:cxx11] (4 samples, 0.08%)</title><rect width=".9" height="15" x="246.5" y="309" fill="#F23926" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect width=".3" height="15" x="803.2" y="165" fill="#E1620B" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (8 samples, 0.15%)</title><rect width="1.8" height="15" x="677.5" y="165" fill="#FB1933" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (53 samples, 1.02%)</title><rect width="12" height="15" x="695" y="245" fill="#EC202F" rx="2" ry="2"/></g><g><title>boost::detail::lexical_ostream_limited_src&lt;char, std::char_traits&lt;char&gt; &gt;::operator&gt;&gt;&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="321.9" y="309" fill="#FAAF03" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="469" fill="#E7002D" rx="2" ry="2"/></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::empty (2 samples, 0.04%)</title><rect width=".5" height="15" x="593.3" y="325" fill="#E62F2B" rx="2" ry="2"/></g><g><title>memchr (78 samples, 1.50%)</title><rect width="17.7" height="15" x="1138.7" y="581" fill="#E8650C" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".7" height="15" x="1059.7" y="309" fill="#FC5B1F" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (2 samples, 0.04%)</title><rect width=".5" height="15" x="293.9" y="245" fill="#E21A36" rx="2" ry="2"/></g><g><title>std::distance&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (14 samples, 0.27%)</title><rect width="3.2" height="15" x="589.2" y="277" fill="#F49524" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1058.4" y="341" fill="#E98E19" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (3 samples, 0.06%)</title><rect width=".6" height="15" x="1020.5" y="325" fill="#D97104" rx="2" ry="2"/></g><g><title>std::_Rb_tree_header::_Rb_tree_header (1 samples, 0.02%)</title><rect width=".3" height="15" x="980.7" y="309" fill="#E0B432" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*&amp;, long&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="996.2" y="293" fill="#E66209" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect width=".2" height="15" x="32.5" y="517" fill="#F97A0F" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (5 samples, 0.10%)</title><rect width="1.1" height="15" x="353.2" y="357" fill="#E74422" rx="2" ry="2"/></g><g><title>Submittable::script_based_job_submission (3,001 samples, 57.72%)</title><rect width="681.1" height="15" x="319.6" y="405" fill="#E6C736" rx="2" ry="2"/><text x="322.58" y="415.5">Submittable::script_based_job_submission</text></g><g><title>NodePath::split (2 samples, 0.04%)</title><rect width=".5" height="15" x="1068.1" y="389" fill="#F6E106" rx="2" ry="2"/></g><g><title>malloc (2 samples, 0.04%)</title><rect width=".5" height="15" x="673.2" y="181" fill="#FB4002" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::operator-&lt;long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="971" y="357" fill="#DF2310" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="264.9" y="213" fill="#D33D2E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1052.9" y="229" fill="#F92B18" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".4" height="15" x="258.1" y="245" fill="#DEE51D" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (6 samples, 0.12%)</title><rect width="1.4" height="15" x="556.5" y="261" fill="#F9711D" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="1002.5" y="325" fill="#E88F26" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (3 samples, 0.06%)</title><rect width=".6" height="15" x="404.5" y="277" fill="#DF660C" rx="2" ry="2"/></g><g><title>FamilyParser::addFamily (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="469" fill="#E0020F" rx="2" ry="2"/></g><g><title>[unknown] (34 samples, 0.65%)</title><rect width="7.7" height="15" x="98.3" y="469" fill="#DB691E" rx="2" ry="2"/></g><g><title>Task::handleStateChange (4 samples, 0.08%)</title><rect width=".9" height="15" x="973" y="373" fill="#FE791F" rx="2" ry="2"/></g><g><title>Node::check_in_limit_up_node_tree (1 samples, 0.02%)</title><rect width=".2" height="15" x="1002.1" y="453" fill="#F35E19" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".4" height="15" x="862.5" y="149" fill="#DDC803" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="297.6" y="213" fill="#F2471B" rx="2" ry="2"/></g><g><title>ServerState::find_variable (2 samples, 0.04%)</title><rect width=".5" height="15" x="993.2" y="309" fill="#DFD907" rx="2" ry="2"/></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="616.9" y="229" fill="#E09128" rx="2" ry="2"/></g><g><title>[unknown] (14 samples, 0.27%)</title><rect width="3.1" height="15" x="39.1" y="373" fill="#ED5111" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (24 samples, 0.46%)</title><rect width="5.4" height="15" x="622.6" y="293" fill="#F7541C" rx="2" ry="2"/></g><g><title>Node::initState (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.6" y="357" fill="#D8CE06" rx="2" ry="2"/></g><g><title>Task::script_extension[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1066.8" y="373" fill="#F09C07" rx="2" ry="2"/></g><g><title>Node::variable_substitution (7 samples, 0.13%)</title><rect width="1.5" height="15" x="853" y="213" fill="#DE7612" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="800.3" y="213" fill="#D1A426" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="277" fill="#EE1514" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".3" height="15" x="867" y="117" fill="#D90811" rx="2" ry="2"/></g><g><title>std::move&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.2" y="389" fill="#E78205" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="944.6" y="373" fill="#E61005" rx="2" ry="2"/></g><g><title>__GI___libc_read (1 samples, 0.02%)</title><rect width=".3" height="15" x="152.5" y="533" fill="#CE230D" rx="2" ry="2"/></g><g><title>std::cbegin&lt;boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="305.5" y="229" fill="#D4A919" rx="2" ry="2"/></g><g><title>Parser::doParse (6 samples, 0.12%)</title><rect width="1.4" height="15" x="239" y="469" fill="#DA7933" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="980.5" y="309" fill="#E9C502" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="931.9" y="325" fill="#F8030F" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087" y="293" fill="#FD500E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="306.2" y="277" fill="#E73207" rx="2" ry="2"/></g><g><title>Suite::findGenVariable (18 samples, 0.35%)</title><rect width="4.1" height="15" x="412.6" y="309" fill="#ED2216" rx="2" ry="2"/></g><g><title>[unknown] (31 samples, 0.60%)</title><rect width="7" height="15" x="35.2" y="469" fill="#E82F19" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (1 samples, 0.02%)</title><rect width=".3" height="15" x="1002.5" y="357" fill="#D8AE25" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="306.4" y="277" fill="#D42814" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect width=".3" height="15" x="908.3" y="277" fill="#FE4507" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (3 samples, 0.06%)</title><rect width=".7" height="15" x="867.7" y="197" fill="#E6CB06" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;Task&gt;::construct&lt;Task, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="240.6" y="325" fill="#E47103" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".3" height="15" x="798.9" y="229" fill="#D5BB0D" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect width=".5" height="15" x="279.4" y="117" fill="#ED770F" rx="2" ry="2"/></g><g><title>FamGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="554.3" y="293" fill="#D9BA03" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="985.7" y="341" fill="#D33329" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.4" y="341" fill="#D00B12" rx="2" ry="2"/></g><g><title>SubGenVariables::findGenVariable (2 samples, 0.04%)</title><rect width=".4" height="15" x="312.8" y="293" fill="#F04C09" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.02%)</title><rect width=".3" height="15" x="1064.9" y="373" fill="#F6CD01" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (101 samples, 1.94%)</title><rect width="22.9" height="15" x="261.7" y="293" fill="#DA6505" rx="2" ry="2"/><text x="264.71" y="303.5">P..</text></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="554.3" y="277" fill="#D6301E" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="374.3" y="325" fill="#F1D207" rx="2" ry="2"/></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="893.4" y="213" fill="#EBC118" rx="2" ry="2"/></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="680.2" y="213" fill="#E4C90A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="243.8" y="453" fill="#F1E500" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="579.7" y="341" fill="#DA3C15" rx="2" ry="2"/></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (1 samples, 0.02%)</title><rect width=".2" height="15" x="52.9" y="549" fill="#E3052C" rx="2" ry="2"/></g><g><title>std::__miter_base&lt;int*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="344.1" y="245" fill="#E7621B" rx="2" ry="2"/></g><g><title>Submittable::increment_try_no (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.8" y="389" fill="#D5B701" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="106" y="501" fill="#ECDF11" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="878.8" y="197" fill="#D3710F" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="936.9" y="325" fill="#E7A816" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (47 samples, 0.90%)</title><rect width="10.7" height="15" x="958" y="293" fill="#DD8625" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (2 samples, 0.04%)</title><rect width=".5" height="15" x="591.9" y="229" fill="#CDAF15" rx="2" ry="2"/></g><g><title>_IO_vsprintf (1 samples, 0.02%)</title><rect width=".2" height="15" x="142.8" y="549" fill="#E4CB08" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1026.6" y="325" fill="#F30C1B" rx="2" ry="2"/></g><g><title>[unknown] (5 samples, 0.10%)</title><rect width="1.1" height="15" x="225.4" y="453" fill="#EB3E30" rx="2" ry="2"/></g><g><title>EcfFile::variableSubstitution (48 samples, 0.92%)</title><rect width="10.9" height="15" x="250.8" y="309" fill="#EA971E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (4 samples, 0.08%)</title><rect width=".9" height="15" x="417" y="309" fill="#F81831" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="304.8" y="117" fill="#EAC009" rx="2" ry="2"/></g><g><title>std::__get_helper&lt;0ul, Expression*, std::default_delete&lt;Expression&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="236.5" y="357" fill="#F25B04" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="614.9" y="229" fill="#F8050A" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1048.6" y="245" fill="#CF8E0F" rx="2" ry="2"/></g><g><title>EcfFile::removeCommentAndManual (70 samples, 1.35%)</title><rect width="15.9" height="15" x="333.9" y="373" fill="#E22B11" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (9 samples, 0.17%)</title><rect width="2.1" height="15" x="719.7" y="229" fill="#CEB91F" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="252.4" y="213" fill="#F48121" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="290.1" y="277" fill="#E54335" rx="2" ry="2"/></g><g><title>std::__get_helper&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="557" y="197" fill="#DCBE21" rx="2" ry="2"/></g><g><title>Node::parent (1 samples, 0.02%)</title><rect width=".2" height="15" x="976.7" y="341" fill="#F43708" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="933.1" y="261" fill="#FE2509" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect width=".3" height="15" x="909.2" y="277" fill="#E99F0F" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="884.3" y="261" fill="#CE7B22" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (2 samples, 0.04%)</title><rect width=".5" height="15" x="973" y="341" fill="#E30330" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="247.9" y="293" fill="#D9860C" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="908.6" y="245" fill="#D56B00" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (25 samples, 0.48%)</title><rect width="5.6" height="15" x="872.5" y="181" fill="#D5E022" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.08%)</title><rect width=".9" height="15" x="330" y="357" fill="#D74008" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1064" y="325" fill="#DF7A2C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect width=".2" height="15" x="877.5" y="165" fill="#E96D1A" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (7 samples, 0.13%)</title><rect width="1.6" height="15" x="538.6" y="309" fill="#F60111" rx="2" ry="2"/></g><g><title>ecf::File::create (26 samples, 0.50%)</title><rect width="5.9" height="15" x="322.1" y="357" fill="#FC8C07" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;ecf::LateAttr, std::default_delete&lt;ecf::LateAttr&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".3" height="15" x="1069" y="453" fill="#EACD2F" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (86 samples, 1.65%)</title><rect width="19.5" height="15" x="265.1" y="261" fill="#D53201" rx="2" ry="2"/></g><g><title>[unknown] (58 samples, 1.12%)</title><rect width="13.2" height="15" x="92.8" y="549" fill="#F6B325" rx="2" ry="2"/></g><g><title>memchr@plt (13 samples, 0.25%)</title><rect width="3" height="15" x="1156.4" y="581" fill="#EE5105" rx="2" ry="2"/></g><g><title>SuiteGenVariables::findGenVariable (16 samples, 0.31%)</title><rect width="3.6" height="15" x="561.8" y="293" fill="#EF8201" rx="2" ry="2"/></g><g><title>_IO_link_in (2 samples, 0.04%)</title><rect width=".5" height="15" x="201.3" y="581" fill="#E14505" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1046.6" y="261" fill="#E8D700" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (80 samples, 1.54%)</title><rect width="18.1" height="15" x="819.4" y="229" fill="#EF1521" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1028.2" y="389" fill="#E4592C" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect width=".2" height="15" x="561.3" y="261" fill="#F26F36" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="800.1" y="245" fill="#D89103" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="983.9" y="357" fill="#ED7A2C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::resize (51 samples, 0.98%)</title><rect width="11.5" height="15" x="957.4" y="357" fill="#E9871E" rx="2" ry="2"/></g><g><title>std::istream::sentry::sentry (2 samples, 0.04%)</title><rect width=".4" height="15" x="628.3" y="293" fill="#DF3036" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="297.1" y="181" fill="#F55C0D" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::__normal_iterator (2 samples, 0.04%)</title><rect width=".5" height="15" x="547.9" y="293" fill="#D5C936" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="106" y="533" fill="#E2A116" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (1 samples, 0.02%)</title><rect width=".2" height="15" x="1005.7" y="389" fill="#E6D614" rx="2" ry="2"/></g><g><title>VariableParser::doParse (4 samples, 0.08%)</title><rect width=".9" height="15" x="237.9" y="453" fill="#DB7C05" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="911.1" y="261" fill="#EBB520" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="325" fill="#E8332A" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (5 samples, 0.10%)</title><rect width="1.2" height="15" x="1021.1" y="341" fill="#D76411" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="907.4" y="229" fill="#F0A909" rx="2" ry="2"/></g><g><title>SubGenVariables::update_static_generated_variables (1 samples, 0.02%)</title><rect width=".2" height="15" x="287.6" y="293" fill="#F77809" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (3 samples, 0.06%)</title><rect width=".7" height="15" x="1029.1" y="325" fill="#DF7E21" rx="2" ry="2"/></g><g><title>EcfFile::removeCommentAndManual (5 samples, 0.10%)</title><rect width="1.2" height="15" x="247.6" y="309" fill="#E6B722" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1064" y="357" fill="#FC1E27" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (8 samples, 0.15%)</title><rect width="1.8" height="15" x="392" y="277" fill="#D62C1F" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="238.3" y="405" fill="#DF7E1A" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::deallocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="305.7" y="197" fill="#D2640C" rx="2" ry="2"/></g><g><title>EcfFile::EcfFile (3 samples, 0.06%)</title><rect width=".6" height="15" x="1064.3" y="405" fill="#E47226" rx="2" ry="2"/></g><g><title>[unknown] (26 samples, 0.50%)</title><rect width="5.9" height="15" x="100.1" y="405" fill="#E05426" rx="2" ry="2"/></g><g><title>_pthread_cleanup_pop_restore (1 samples, 0.02%)</title><rect width=".2" height="15" x="1112.2" y="581" fill="#EE8533" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="303.9" y="101" fill="#F3142D" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (3 samples, 0.06%)</title><rect width=".7" height="15" x="312.8" y="309" fill="#FA9723" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="280.3" y="85" fill="#F68436" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (8 samples, 0.15%)</title><rect width="1.8" height="15" x="242" y="453" fill="#EC8518" rx="2" ry="2"/></g><g><title>Node::find_parent_user_variable_value (6 samples, 0.12%)</title><rect width="1.4" height="15" x="992.5" y="325" fill="#E0390C" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="306.2" y="261" fill="#E5D41C" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (1 samples, 0.02%)</title><rect width=".2" height="15" x="269.4" y="197" fill="#E2BE16" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.2" y="341" fill="#D7DF1D" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.2" height="15" x="11.4" y="501" fill="#F7C034" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.6" y="501" fill="#F0CD1A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.2" y="357" fill="#CEA218" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="284.4" y="197" fill="#E38E34" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::begin (3 samples, 0.06%)</title><rect width=".7" height="15" x="577.9" y="309" fill="#D9DD0D" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="926.5" y="309" fill="#D5E402" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (8 samples, 0.15%)</title><rect width="1.8" height="15" x="303.5" y="229" fill="#E10C08" rx="2" ry="2"/></g><g><title>std::istream::seekg (1 samples, 0.02%)</title><rect width=".3" height="15" x="628" y="293" fill="#FDBA0F" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;Expression, std::default_delete&lt;Expression&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect width=".2" height="15" x="239.5" y="389" fill="#F63A06" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (13 samples, 0.25%)</title><rect width="3" height="15" x="346.1" y="341" fill="#D83309" rx="2" ry="2"/></g><g><title>Task::script_extension[abi:cxx11] (4 samples, 0.08%)</title><rect width=".9" height="15" x="315.5" y="357" fill="#DD6819" rx="2" ry="2"/></g><g><title>NodeContainer::add_task_only (1 samples, 0.02%)</title><rect width=".2" height="15" x="237.2" y="405" fill="#FB0C15" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (51 samples, 0.98%)</title><rect width="11.5" height="15" x="957.4" y="325" fill="#FD3B1F" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (1 samples, 0.02%)</title><rect width=".2" height="15" x="374.3" y="341" fill="#DBD507" rx="2" ry="2"/></g><g><title>Task::script_extension[abi:cxx11] (6 samples, 0.12%)</title><rect width="1.4" height="15" x="992.5" y="341" fill="#D62435" rx="2" ry="2"/></g><g><title>SuiteGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="988.9" y="325" fill="#D3CC1D" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (2 samples, 0.04%)</title><rect width=".4" height="15" x="1067" y="357" fill="#F45E2F" rx="2" ry="2"/></g><g><title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::~num_get (1 samples, 0.02%)</title><rect width=".2" height="15" x="167.5" y="565" fill="#F54C06" rx="2" ry="2"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".3" height="15" x="932.8" y="261" fill="#ECDD0F" rx="2" ry="2"/></g><g><title>dl_main (2 samples, 0.04%)</title><rect width=".4" height="15" x="1087.2" y="565" fill="#DE5311" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="205.4" y="565" fill="#DC0832" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.9" height="15" x="229.2" y="533" fill="#DFE501" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (3 samples, 0.06%)</title><rect width=".7" height="15" x="374.7" y="357" fill="#F05434" rx="2" ry="2"/></g><g><title>[unknown] (6 samples, 0.12%)</title><rect width="1.3" height="15" x="181.4" y="533" fill="#E9AE19" rx="2" ry="2"/></g><g><title>__GI___writev (1 samples, 0.02%)</title><rect width=".2" height="15" x="106" y="565" fill="#FC682A" rx="2" ry="2"/></g><g><title>EcfFile::remove_nopp_end_tokens (2 samples, 0.04%)</title><rect width=".5" height="15" x="1069.9" y="437" fill="#CF3B07" rx="2" ry="2"/></g><g><title>Node::set_state (22 samples, 0.42%)</title><rect width="5" height="15" x="968.9" y="389" fill="#FA2407" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect width=".2" height="15" x="904.7" y="213" fill="#D7A502" rx="2" ry="2"/></g><g><title>EcfFile::doCreateJobFile[abi:cxx11] (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1003.2" y="405" fill="#D2AA31" rx="2" ry="2"/></g><g><title>Node::findVariable (2 samples, 0.04%)</title><rect width=".5" height="15" x="315.5" y="325" fill="#ED2023" rx="2" ry="2"/></g><g><title>_ZNSi6sentryC1ERSib@plt (3 samples, 0.06%)</title><rect width=".7" height="15" x="687.5" y="245" fill="#F8B211" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="616.9" y="245" fill="#F4CC0A" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (3 samples, 0.06%)</title><rect width=".6" height="15" x="1064.3" y="389" fill="#F55A1E" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (5 samples, 0.10%)</title><rect width="1.1" height="15" x="362.7" y="341" fill="#D19501" rx="2" ry="2"/></g><g><title>Node::findVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1046.8" y="261" fill="#DE131B" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="979.4" y="309" fill="#F62914" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1052.2" y="181" fill="#F30008" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="934" y="229" fill="#D3D703" rx="2" ry="2"/></g><g><title>_IO_default_xsputn (1 samples, 0.02%)</title><rect width=".3" height="15" x="13.6" y="565" fill="#E70C28" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="303" y="197" fill="#F95C36" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (3 samples, 0.06%)</title><rect width=".7" height="15" x="233.8" y="357" fill="#E1D106" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="995.9" y="293" fill="#E8392A" rx="2" ry="2"/></g><g><title>Submittable::locatedEcfFile (2 samples, 0.04%)</title><rect width=".5" height="15" x="1073.1" y="453" fill="#F57532" rx="2" ry="2"/></g><g><title>std::tuple&lt;ecf::AutoCancelAttr*, std::default_delete&lt;ecf::AutoCancelAttr&gt; &gt;::tuple&lt;ecf::AutoCancelAttr*, std::default_delete&lt;ecf::AutoCancelAttr&gt;, true&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="240.6" y="229" fill="#EA5503" rx="2" ry="2"/></g><g><title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1062.9" y="309" fill="#D7162C" rx="2" ry="2"/></g><g><title>_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="862.3" y="149" fill="#DED205" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="1059.5" y="389" fill="#D27925" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (4 samples, 0.08%)</title><rect width="1" height="15" x="569.2" y="309" fill="#EC5C1C" rx="2" ry="2"/></g><g><title>boost::date_time::microsec_clock&lt;boost::posix_time::ptime&gt;::create_time (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.8" y="421" fill="#EC1932" rx="2" ry="2"/></g><g><title>Variable::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="555.4" y="293" fill="#D2BA14" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1036.3" y="245" fill="#D92927" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="304.4" y="165" fill="#F0C90B" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.4" y="357" fill="#EA0636" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (1 samples, 0.02%)</title><rect width=".2" height="15" x="245.4" y="469" fill="#EF3A1F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="245.6" y="501" fill="#E16E20" rx="2" ry="2"/></g><g><title>AstNode::accept (4 samples, 0.08%)</title><rect width=".9" height="15" x="235.4" y="373" fill="#FAC72F" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (1 samples, 0.02%)</title><rect width=".3" height="15" x="247.6" y="293" fill="#CF7021" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (1 samples, 0.02%)</title><rect width=".2" height="15" x="277.6" y="149" fill="#D0960D" rx="2" ry="2"/></g><g><title>SuiteParser::doParse (4 samples, 0.08%)</title><rect width=".9" height="15" x="237.9" y="485" fill="#FD9822" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="561.1" y="293" fill="#DF932D" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1053.1" y="229" fill="#E0C61E" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="292.3" y="245" fill="#D05213" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".3" height="15" x="244.2" y="405" fill="#F22808" rx="2" ry="2"/></g><g><title>virtual thunk to std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (1 samples, 0.02%)</title><rect width=".2" height="15" x="180.5" y="565" fill="#F0131E" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (28 samples, 0.54%)</title><rect width="6.3" height="15" x="824.6" y="165" fill="#DD231E" rx="2" ry="2"/></g><g><title>JobsParam::set_ecf_file (51 samples, 0.98%)</title><rect width="11.5" height="15" x="957.4" y="389" fill="#F02421" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="244.2" y="421" fill="#EB651C" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::base (1 samples, 0.02%)</title><rect width=".2" height="15" x="605.8" y="325" fill="#E98409" rx="2" ry="2"/></g><g><title>std::__make_move_if_noexcept_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="918.3" y="229" fill="#FA9C01" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (1 samples, 0.02%)</title><rect width=".2" height="15" x="1072" y="293" fill="#D7922E" rx="2" ry="2"/></g><g><title>Submittable::increment_try_no (2 samples, 0.04%)</title><rect width=".5" height="15" x="246" y="357" fill="#E64734" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (63 samples, 1.21%)</title><rect width="14.3" height="15" x="838.2" y="213" fill="#CD1606" rx="2" ry="2"/></g><g><title>Submittable::createChildProcess (3 samples, 0.06%)</title><rect width=".7" height="15" x="1063.6" y="421" fill="#D9D232" rx="2" ry="2"/></g><g><title>boost::date_time::microsec_clock&lt;boost::posix_time::ptime&gt;::create_time (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.6" y="421" fill="#FE8624" rx="2" ry="2"/></g><g><title>Family::resolveDependencies (3,331 samples, 64.07%)</title><rect width="756" height="15" x="245.8" y="469" fill="#D2031C" rx="2" ry="2"/><text x="248.82" y="479.5">Family::resolveDependencies</text></g><g><title>Family::create (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="453" fill="#FB1829" rx="2" ry="2"/></g><g><title>[unknown] (32 samples, 0.62%)</title><rect width="7.3" height="15" x="98.7" y="437" fill="#DA590A" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="293" fill="#D74822" rx="2" ry="2"/></g><g><title>Node::findVariableValue (5 samples, 0.10%)</title><rect width="1.1" height="15" x="974.2" y="357" fill="#F4B803" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="1057.7" y="309" fill="#F4CA22" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (6 samples, 0.12%)</title><rect width="1.4" height="15" x="638.2" y="293" fill="#F8A825" rx="2" ry="2"/></g><g><title>_IO_file_xsputn@@GLIBC_2.2.5 (35 samples, 0.67%)</title><rect width="7.9" height="15" x="13.9" y="565" fill="#D9711B" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (5 samples, 0.10%)</title><rect width="1.2" height="15" x="841.8" y="197" fill="#CF530D" rx="2" ry="2"/></g><g><title>[unknown] (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1084" y="549" fill="#FC8120" rx="2" ry="2"/></g><g><title>SuiteGenVariables::findGenVariable (2 samples, 0.04%)</title><rect width=".4" height="15" x="313.5" y="293" fill="#D27724" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (62 samples, 1.19%)</title><rect width="14" height="15" x="398.6" y="309" fill="#F4D110" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (55 samples, 1.06%)</title><rect width="12.5" height="15" x="667.7" y="213" fill="#D7D50E" rx="2" ry="2"/></g><g><title>Node::find_parent_user_variable_value (1 samples, 0.02%)</title><rect width=".2" height="15" x="1066.8" y="357" fill="#D41024" rx="2" ry="2"/></g><g><title>std::reverse_iterator&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator* (1 samples, 0.02%)</title><rect width=".2" height="15" x="969.2" y="341" fill="#CEBC31" rx="2" ry="2"/></g><g><title>std::vector&lt;Label, std::allocator&lt;Label&gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="239" y="421" fill="#E01219" rx="2" ry="2"/></g><g><title>[unknown] (31 samples, 0.60%)</title><rect width="7" height="15" x="35.2" y="485" fill="#DDA41F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect width=".3" height="15" x="689.5" y="245" fill="#E58120" rx="2" ry="2"/></g><g><title>std::begin&lt;boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="854.8" y="165" fill="#D26034" rx="2" ry="2"/></g><g><title>ecf::JobProfiler::~JobProfiler (2 samples, 0.04%)</title><rect width=".4" height="15" x="1001.2" y="421" fill="#F93B0A" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="261" fill="#EF7F21" rx="2" ry="2"/></g><g><title>Node::variable_substitution (1 samples, 0.02%)</title><rect width=".2" height="15" x="1046.8" y="293" fill="#F8AA13" rx="2" ry="2"/></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="679.8" y="197" fill="#D9B312" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="605.6" y="341" fill="#EB9A0B" rx="2" ry="2"/></g><g><title>Node::find_parent_user_variable_value (6 samples, 0.12%)</title><rect width="1.4" height="15" x="993.9" y="357" fill="#E5021E" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="868.4" y="213" fill="#CDC327" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="999.8" y="389" fill="#EA0423" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="398.1" y="293" fill="#FEDB02" rx="2" ry="2"/></g><g><title>std::__shared_ptr&lt;IncludeFileCache, (5 samples, 0.10%)</title><rect width="1.1" height="15" x="626.9" y="261" fill="#E8DF0E" rx="2" ry="2"/></g><g><title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="349.1" y="309" fill="#FC1434" rx="2" ry="2"/></g><g><title>operator new (1 samples, 0.02%)</title><rect width=".2" height="15" x="1035.7" y="213" fill="#F91107" rx="2" ry="2"/></g><g><title>FamGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="1023.9" y="325" fill="#E77A1A" rx="2" ry="2"/></g><g><title>SubGenVariables::update_dynamic_generated_variables (2 samples, 0.04%)</title><rect width=".5" height="15" x="1002.3" y="405" fill="#FCA20F" rx="2" ry="2"/></g><g><title>std::ios_base::ios_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="42.7" y="533" fill="#EDD32D" rx="2" ry="2"/></g><g><title>boost::posix_time::ptime::ptime (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000.9" y="373" fill="#CF0926" rx="2" ry="2"/></g><g><title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="998.7" y="309" fill="#DF150E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (8 samples, 0.15%)</title><rect width="1.9" height="15" x="860.4" y="133" fill="#FB6920" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1064" y="341" fill="#DA3B23" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (2 samples, 0.04%)</title><rect width=".4" height="15" x="910.2" y="261" fill="#FE6A20" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator+ (1 samples, 0.02%)</title><rect width=".2" height="15" x="292.6" y="325" fill="#F9D30D" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::operator bool (18 samples, 0.35%)</title><rect width="4.1" height="15" x="532" y="309" fill="#E27214" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1025.9" y="373" fill="#ED7B2C" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="1048.8" y="181" fill="#ED6912" rx="2" ry="2"/></g><g><title>Node::incrementInLimit (1 samples, 0.02%)</title><rect width=".2" height="15" x="973.5" y="341" fill="#D92912" rx="2" ry="2"/></g><g><title>Node::absNodePath[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.5" y="421" fill="#F5CB08" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;Suite&gt;, std::allocator&lt;std::shared_ptr&lt;Suite&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.6" y="229" fill="#E91A14" rx="2" ry="2"/></g><g><title>[perf_job_gen] (1 samples, 0.02%)</title><rect width=".2" height="15" x="912.2" y="213" fill="#F41C24" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="282.6" y="149" fill="#E64801" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".3" height="15" x="142.5" y="437" fill="#ECB515" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (1 samples, 0.02%)</title><rect width=".3" height="15" x="998.4" y="325" fill="#D15200" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (305 samples, 5.87%)</title><rect width="69.3" height="15" x="727.4" y="261" fill="#F5A421" rx="2" ry="2"/><text x="730.44" y="271.5">EcfFile..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="937.8" y="309" fill="#F20A24" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".2" height="15" x="1060.4" y="389" fill="#EB2B33" rx="2" ry="2"/></g><g><title>std::_Tuple_impl&lt;0ul, ecf::AutoCancelAttr*, std::default_delete&lt;ecf::AutoCancelAttr&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect width=".2" height="15" x="240.6" y="213" fill="#E0A217" rx="2" ry="2"/></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".3" height="15" x="955.5" y="357" fill="#E5AE2B" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".6" height="15" x="1084.5" y="485" fill="#DC6935" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1057.9" y="325" fill="#FB2607" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="256.3" y="245" fill="#F34421" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="671.6" y="181" fill="#EC8B1D" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::shared_ptr&lt;Node&gt; &gt; &gt;::construct&lt;std::shared_ptr&lt;Node&gt;, std::shared_ptr&lt;Node&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.9" y="437" fill="#F86836" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.9" y="197" fill="#CD5818" rx="2" ry="2"/></g><g><title>Variable::EMPTY (1 samples, 0.02%)</title><rect width=".2" height="15" x="399.7" y="261" fill="#ED2D27" rx="2" ry="2"/></g><g><title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="866.1" y="117" fill="#E91B0D" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1065.6" y="389" fill="#DD8B1C" rx="2" ry="2"/></g><g><title>_int_free (1 samples, 0.02%)</title><rect width=".2" height="15" x="866.8" y="117" fill="#CE140B" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="866.8" y="149" fill="#F8A90C" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (4 samples, 0.08%)</title><rect width=".9" height="15" x="833.4" y="181" fill="#CE5A13" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (1 samples, 0.02%)</title><rect width=".2" height="15" x="1000.3" y="389" fill="#DE1C24" rx="2" ry="2"/></g><g><title>__offtime (1 samples, 0.02%)</title><rect width=".3" height="15" x="106.2" y="565" fill="#FBC013" rx="2" ry="2"/></g><g><title>Family::resolveDependencies (184 samples, 3.54%)</title><rect width="41.8" height="15" x="246" y="405" fill="#D33523" rx="2" ry="2"/><text x="249.05" y="415.5">Fam..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect width=".2" height="15" x="281.7" y="149" fill="#DE3A26" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="559.5" y="277" fill="#CD3017" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (5 samples, 0.10%)</title><rect width="1.1" height="15" x="303.5" y="181" fill="#EB2320" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="977.3" y="341" fill="#FE6E17" rx="2" ry="2"/></g><g><title>SuiteGenVariables::findGenVariable (14 samples, 0.27%)</title><rect width="3.2" height="15" x="413.3" y="293" fill="#CD5124" rx="2" ry="2"/></g><g><title>Task::resolveDependencies (3,056 samples, 58.78%)</title><rect width="693.6" height="15" x="308.2" y="437" fill="#E37700" rx="2" ry="2"/><text x="311.23" y="447.5">Task::resolveDependencies</text></g><g><title>Variable::EMPTY (1 samples, 0.02%)</title><rect width=".2" height="15" x="554.5" y="261" fill="#D92F20" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;Variable*, Variable*, std::allocator&lt;Variable&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="238.6" y="389" fill="#FA6305" rx="2" ry="2"/></g><g><title>std::vector&lt;ecf::TimeAttr, std::allocator&lt;ecf::TimeAttr&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".3" height="15" x="309.1" y="389" fill="#E42508" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator-&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1026.6" y="277" fill="#E3D722" rx="2" ry="2"/></g><g><title>boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (2 samples, 0.04%)</title><rect width=".5" height="15" x="337.7" y="341" fill="#EDD911" rx="2" ry="2"/></g><g><title>boost::date_time::base_time&lt;boost::posix_time::ptime, boost::date_time::counted_time_system&lt;boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt; &gt; &gt;::base_time (1 samples, 0.02%)</title><rect width=".2" height="15" x="1001.4" y="357" fill="#D45813" rx="2" ry="2"/></g><g><title>std::__copy_move_a&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="998.7" y="293" fill="#DEDD24" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="865" y="101" fill="#D7C711" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="542.7" y="325" fill="#F42C23" rx="2" ry="2"/></g><g><title>std::next&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="860" y="165" fill="#CD2703" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char const*, void&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="907.2" y="261" fill="#FE5D18" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="825.9" y="149" fill="#DD830C" rx="2" ry="2"/></g><g><title>_ZNSt9basic_iosIcSt11char_traitsIcEE15_M_cache_localeERKSt6locale@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="204.3" y="581" fill="#E7461E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="934" y="245" fill="#CDA121" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="936.9" y="341" fill="#D17E2C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (25 samples, 0.48%)</title><rect width="5.6" height="15" x="754.5" y="245" fill="#D44A0F" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (5 samples, 0.10%)</title><rect width="1.1" height="15" x="1048.6" y="229" fill="#DD7A26" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1084.9" y="453" fill="#FADF03" rx="2" ry="2"/></g><g><title>std::__uniq_ptr_impl&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::_M_ptr (2 samples, 0.04%)</title><rect width=".5" height="15" x="554.9" y="229" fill="#E6E311" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".3" height="15" x="286.4" y="261" fill="#E30D30" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="799.6" y="245" fill="#EB2427" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="314.8" y="293" fill="#E4A92F" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".3" height="15" x="998.4" y="309" fill="#F56B24" rx="2" ry="2"/></g><g><title>std::__get_helper&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="197" fill="#F14F01" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="32.5" y="533" fill="#E41224" rx="2" ry="2"/></g><g><title>Submittable::begin (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.6" y="389" fill="#E9B61C" rx="2" ry="2"/></g><g><title>Suite::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="542.9" y="325" fill="#FEB51B" rx="2" ry="2"/></g><g><title>InLimitMgr::inLimit (2 samples, 0.04%)</title><rect width=".5" height="15" x="308.2" y="405" fill="#FA8200" rx="2" ry="2"/></g><g><title>[unknown] (11 samples, 0.21%)</title><rect width="2.5" height="15" x="11.1" y="533" fill="#E98B24" rx="2" ry="2"/></g><g><title>[unknown] (12 samples, 0.23%)</title><rect width="2.8" height="15" x="155" y="501" fill="#EADA0B" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (18 samples, 0.35%)</title><rect width="4" height="15" x="988.5" y="373" fill="#EDB52C" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="934.9" y="341" fill="#CDA519" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (3 samples, 0.06%)</title><rect width=".7" height="15" x="278.3" y="133" fill="#F5DB1F" rx="2" ry="2"/></g><g><title>EcfFile::create_job[abi:cxx11] (16 samples, 0.31%)</title><rect width="3.6" height="15" x="1069.5" y="453" fill="#D11522" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="280.3" y="101" fill="#CEAC14" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (23 samples, 0.44%)</title><rect width="5.2" height="15" x="689.8" y="245" fill="#E6E50C" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="976.9" y="325" fill="#D6DC29" rx="2" ry="2"/></g><g><title>ecf::Str::ECF_JOB_CMD[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="981.2" y="373" fill="#E47700" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="312.5" y="213" fill="#FEBF2C" rx="2" ry="2"/></g><g><title>std::locale::locale (1 samples, 0.02%)</title><rect width=".2" height="15" x="163.9" y="533" fill="#D78B03" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (74 samples, 1.42%)</title><rect width="16.8" height="15" x="889" y="261" fill="#E39703" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="297.1" y="197" fill="#D7D201" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3 samples, 0.06%)</title><rect width=".7" height="15" x="1016.8" y="341" fill="#F62D32" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="980.1" y="261" fill="#D2D32D" rx="2" ry="2"/></g><g><title>Submittable::script_based_job_submission (182 samples, 3.50%)</title><rect width="41.3" height="15" x="246.5" y="341" fill="#EF8A19" rx="2" ry="2"/><text x="249.5" y="351.5">Sub..</text></g><g><title>[unknown] (50 samples, 0.96%)</title><rect width="11.3" height="15" x="190" y="405" fill="#EA8135" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (6 samples, 0.12%)</title><rect width="1.3" height="15" x="1071.1" y="373" fill="#E7CA23" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="995.9" y="277" fill="#FA7C01" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="266.9" y="117" fill="#E9DA15" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (1 samples, 0.02%)</title><rect width=".2" height="15" x="651.9" y="277" fill="#D2482F" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="918.3" y="245" fill="#F2CA00" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="866.1" y="149" fill="#EF800B" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="830" y="117" fill="#FC481E" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="1036.3" y="213" fill="#DB502F" rx="2" ry="2"/></g><g><title>std::_Construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="332.7" y="261" fill="#D72133" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect width=".2" height="15" x="1056.1" y="309" fill="#FB0B1F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.02%)</title><rect width=".2" height="15" x="990.3" y="341" fill="#CECC0A" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (5 samples, 0.10%)</title><rect width="1.2" height="15" x="965.5" y="277" fill="#ED262A" rx="2" ry="2"/></g><g><title>boost::date_time::int_adapter&lt;long&gt;::operator-&lt;long&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="971.4" y="341" fill="#DE7934" rx="2" ry="2"/></g><g><title>Variable::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="1024.3" y="325" fill="#F8AF06" rx="2" ry="2"/></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="180.5" y="533" fill="#E17623" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (2 samples, 0.04%)</title><rect width=".5" height="15" x="293.9" y="261" fill="#F57908" rx="2" ry="2"/></g><g><title>[unknown] (7 samples, 0.13%)</title><rect width="1.6" height="15" x="942.8" y="309" fill="#CE2513" rx="2" ry="2"/></g><g><title>[perf_job_gen] (1 samples, 0.02%)</title><rect width=".2" height="15" x="880" y="165" fill="#F2E127" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="261" fill="#E91616" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="283.7" y="181" fill="#E00702" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect width=".2" height="15" x="1166.2" y="581" fill="#F8251D" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.2" height="15" x="11.4" y="485" fill="#D57F0F" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (1 samples, 0.02%)</title><rect width=".3" height="15" x="304.8" y="165" fill="#DD4D21" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1057.9" y="309" fill="#E5E420" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="932.6" y="325" fill="#EC8C30" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="929.7" y="261" fill="#FA6B02" rx="2" ry="2"/></g><g><title>std::vector&lt;ecf::CronAttr, std::allocator&lt;ecf::CronAttr&gt; &gt;::operator= (3 samples, 0.06%)</title><rect width=".7" height="15" x="1189.3" y="581" fill="#F25F31" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (16 samples, 0.31%)</title><rect width="3.6" height="15" x="1017.5" y="341" fill="#CEC226" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (5 samples, 0.10%)</title><rect width="1.1" height="15" x="556.8" y="213" fill="#F7CC14" rx="2" ry="2"/></g><g><title>do_lookup_x (1 samples, 0.02%)</title><rect width=".3" height="15" x="1112.8" y="581" fill="#EC1516" rx="2" ry="2"/></g><g><title>DefsStructureParser::do_parse_line (38 samples, 0.73%)</title><rect width="8.7" height="15" x="236.7" y="501" fill="#DCE226" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (9 samples, 0.17%)</title><rect width="2" height="15" x="880" y="181" fill="#E40C21" rx="2" ry="2"/></g><g><title>[unknown] (10 samples, 0.19%)</title><rect width="2.2" height="15" x="942.2" y="341" fill="#F0031D" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (4 samples, 0.08%)</title><rect width=".9" height="15" x="863.6" y="133" fill="#FBA801" rx="2" ry="2"/></g><g><title>boost::gregorian::greg_day::operator unsigned short (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.6" y="373" fill="#D88F24" rx="2" ry="2"/></g><g><title>ecf::Str::get_token (2 samples, 0.04%)</title><rect width=".5" height="15" x="281.2" y="133" fill="#FB2F11" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect width=".2" height="15" x="1057" y="261" fill="#D5601B" rx="2" ry="2"/></g><g><title>open64 (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1085.6" y="549" fill="#D6732E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1004.6" y="325" fill="#CFD025" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (1 samples, 0.02%)</title><rect width=".2" height="15" x="973" y="309" fill="#E5A62C" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;int*&gt;, int*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="344.1" y="277" fill="#FEA930" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.8" y="309" fill="#F59814" rx="2" ry="2"/></g><g><title>boost::date_time::counted_time_system&lt;boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt; &gt;::get_time_rep (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.8" y="373" fill="#D29834" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width="1" height="15" x="156.8" y="469" fill="#F9A21B" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="855.7" y="149" fill="#E64612" rx="2" ry="2"/></g><g><title>boost::gregorian::date::date (1 samples, 0.02%)</title><rect width=".2" height="15" x="1000.7" y="373" fill="#EB272F" rx="2" ry="2"/></g><g><title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (19 samples, 0.37%)</title><rect width="4.3" height="15" x="1183.9" y="581" fill="#D69116" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="286" y="261" fill="#DF500C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (9 samples, 0.17%)</title><rect width="2" height="15" x="850.5" y="197" fill="#FB2814" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_includes (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1070.8" y="405" fill="#F4611A" rx="2" ry="2"/></g><g><title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect width=".3" height="15" x="1037.9" y="277" fill="#F2DB14" rx="2" ry="2"/></g><g><title>Node::setStateOnly (3 samples, 0.06%)</title><rect width=".7" height="15" x="233.8" y="373" fill="#FC122B" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.7" y="389" fill="#E0750A" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.04%)</title><rect width=".4" height="15" x="233.8" y="325" fill="#D49436" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="921.3" y="229" fill="#CDB71C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".2" height="15" x="999.6" y="357" fill="#D05933" rx="2" ry="2"/></g><g><title>__GI___chmod (1 samples, 0.02%)</title><rect width=".2" height="15" x="284.9" y="309" fill="#E57114" rx="2" ry="2"/></g><g><title>boost::detail::lexical_istream_limited_src&lt;char, std::char_traits&lt;char&gt;, false, 40ul&gt;::operator&lt;&lt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1003.7" y="341" fill="#D6D232" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (1 samples, 0.02%)</title><rect width=".3" height="15" x="969.8" y="325" fill="#DACC1B" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="970.3" y="293" fill="#F01735" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="247.4" y="277" fill="#F8DF1D" rx="2" ry="2"/></g><g><title>_dl_relocate_object (1 samples, 0.02%)</title><rect width=".2" height="15" x="1087.4" y="549" fill="#E36805" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="800.8" y="197" fill="#DCD526" rx="2" ry="2"/></g><g><title>Repeat::find_gen_variable (1 samples, 0.02%)</title><rect width=".2" height="15" x="1024.1" y="309" fill="#DC0223" rx="2" ry="2"/></g><g><title>std::__get_helper&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="259.4" y="133" fill="#D39C08" rx="2" ry="2"/></g><g><title>perf_job_gen (5,183 samples, 99.69%)</title><rect width="1176.4" height="15" x="13.6" y="597" fill="#E93023" rx="2" ry="2"/><text x="16.63" y="607.5">perf_job_gen</text></g><g><title>std::char_traits&lt;char&gt;::length (1 samples, 0.02%)</title><rect width=".2" height="15" x="920.4" y="277" fill="#E25127" rx="2" ry="2"/></g><g><title>std::__iterator_category&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="782.4" y="149" fill="#D7D609" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (1 samples, 0.02%)</title><rect width=".2" height="15" x="1001.6" y="421" fill="#FC7F28" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char const*, void&gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="921" y="277" fill="#D16D23" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="595.6" y="357" fill="#D5D920" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.2" y="325" fill="#F53132" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase_at_end (2 samples, 0.04%)</title><rect width=".4" height="15" x="286" y="277" fill="#F85304" rx="2" ry="2"/></g><g><title>EcfFile::open_script_file (2 samples, 0.04%)</title><rect width=".4" height="15" x="1071.1" y="341" fill="#D89F0D" rx="2" ry="2"/></g><g><title>Suite::findGenVariable (2 samples, 0.04%)</title><rect width=".5" height="15" x="292.1" y="277" fill="#D96624" rx="2" ry="2"/></g><g><title>JobsParam::set_ecf_file (6 samples, 0.12%)</title><rect width="1.4" height="15" x="1062" y="421" fill="#F72F18" rx="2" ry="2"/></g><g><title>std::allocate_shared&lt;Family, std::allocator&lt;Family&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="237" y="421" fill="#DFE509" rx="2" ry="2"/></g><g><title>boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.4" y="261" fill="#EDB80C" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (5 samples, 0.10%)</title><rect width="1.2" height="15" x="613.7" y="245" fill="#D00622" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.9" height="15" x="229.2" y="565" fill="#E17136" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.04%)</title><rect width=".4" height="15" x="861.6" y="85" fill="#F0890E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect width=".2" height="15" x="938.5" y="357" fill="#F78715" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.08%)</title><rect width=".9" height="15" x="266.7" y="133" fill="#E0C70F" rx="2" ry="2"/></g><g><title>_start (1 samples, 0.02%)</title><rect width=".2" height="15" x="971.9" y="245" fill="#EC471B" rx="2" ry="2"/></g><g><title>Node::parent (1 samples, 0.02%)</title><rect width=".2" height="15" x="973.7" y="341" fill="#FC761F" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="944" y="261" fill="#EA1D07" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="615.1" y="229" fill="#FD890A" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::resize (2 samples, 0.04%)</title><rect width=".4" height="15" x="286" y="293" fill="#D06625" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect width=".5" height="15" x="1005.9" y="389" fill="#F87B1E" rx="2" ry="2"/></g><g><title>[unknown] (4 samples, 0.08%)</title><rect width=".9" height="15" x="181.8" y="501" fill="#F6621F" rx="2" ry="2"/></g><g><title>findRelativeNode (2 samples, 0.04%)</title><rect width=".5" height="15" x="235.6" y="293" fill="#D87E0B" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect width=".2" height="15" x="234.5" y="389" fill="#F76008" rx="2" ry="2"/></g><g><title>[unknown] (29 samples, 0.56%)</title><rect width="6.6" height="15" x="35.6" y="437" fill="#DAD921" rx="2" ry="2"/></g><g><title>ecf::Str::split_using_string_view (6 samples, 0.12%)</title><rect width="1.4" height="15" x="995.9" y="325" fill="#E0E530" rx="2" ry="2"/></g><g><title>Node::set_state (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.6" y="549" fill="#F17A00" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (2 samples, 0.04%)</title><rect width=".4" height="15" x="909.5" y="277" fill="#D18327" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (45 samples, 0.87%)</title><rect width="10.2" height="15" x="296.2" y="293" fill="#D2C42D" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1073.1" y="437" fill="#F1B424" rx="2" ry="2"/></g><g><title>[unknown] (6 samples, 0.12%)</title><rect width="1.3" height="15" x="181.4" y="517" fill="#E91534" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="866.6" y="117" fill="#F8571F" rx="2" ry="2"/></g><g><title>EcfFile::removeCommentAndManual (7 samples, 0.13%)</title><rect width="1.6" height="15" x="1004.8" y="405" fill="#DA911D" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1046.8" y="277" fill="#FA5002" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="318.9" y="357" fill="#F4711D" rx="2" ry="2"/></g><g><title>EcfFile::file_exists (8 samples, 0.15%)</title><rect width="1.9" height="15" x="862.9" y="165" fill="#F94B11" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;Node&gt;, std::allocator&lt;std::shared_ptr&lt;Node&gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect width=".2" height="15" x="235.2" y="485" fill="#E0B51D" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (1 samples, 0.02%)</title><rect width=".2" height="15" x="280.8" y="85" fill="#E22E31" rx="2" ry="2"/></g><g><title>[unknown] (7 samples, 0.13%)</title><rect width="1.6" height="15" x="181.1" y="549" fill="#F03A36" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".3" height="15" x="596.9" y="357" fill="#F1160D" rx="2" ry="2"/></g><g><title>Node::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="1024.1" y="325" fill="#DCB105" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16 samples, 0.31%)</title><rect width="3.6" height="15" x="827.3" y="149" fill="#E0C81D" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::length (1 samples, 0.02%)</title><rect width=".2" height="15" x="338" y="325" fill="#D45927" rx="2" ry="2"/></g><g><title>std::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="804.8" y="133" fill="#FCA704" rx="2" ry="2"/></g><g><title>fclose@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect width=".2" height="15" x="1113.1" y="581" fill="#E2B122" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="615.8" y="229" fill="#F84E32" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (7 samples, 0.13%)</title><rect width="1.6" height="15" x="342.5" y="341" fill="#FD830E" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="306.4" y="261" fill="#FC2404" rx="2" ry="2"/></g><g><title>boost::date_time::counted_time_rep&lt;boost::posix_time::millisec_posix_time_system_config&gt;::counted_time_rep (1 samples, 0.02%)</title><rect width=".2" height="15" x="1068.8" y="357" fill="#ED3C16" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.4" y="373" fill="#EACE2E" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (1 samples, 0.02%)</title><rect width=".3" height="15" x="909.9" y="277" fill="#FC4C1C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".3" height="15" x="862" y="85" fill="#E70C25" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (14 samples, 0.27%)</title><rect width="3.1" height="15" x="796.7" y="261" fill="#E19C23" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::erase (26 samples, 0.50%)</title><rect width="5.9" height="15" x="363.8" y="357" fill="#D88F10" rx="2" ry="2"/></g><g><title>memcpy@plt (9 samples, 0.17%)</title><rect width="2" height="15" x="1159.6" y="581" fill="#F66D18" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="828" y="133" fill="#E21F24" rx="2" ry="2"/></g><g><title>std::vector&lt;PartExpression, std::allocator&lt;PartExpression&gt; &gt;::end (1 samples, 0.02%)</title><rect width=".3" height="15" x="239.2" y="389" fill="#CECA2B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (15 samples, 0.29%)</title><rect width="3.4" height="15" x="366.1" y="277" fill="#EE7422" rx="2" ry="2"/></g><g><title>Node::check_expressions (4 samples, 0.08%)</title><rect width=".9" height="15" x="235.4" y="437" fill="#EB530B" rx="2" ry="2"/></g><g><title>[unknown] (29 samples, 0.56%)</title><rect width="6.6" height="15" x="86" y="389" fill="#FCD328" rx="2" ry="2"/></g><g><title>Submittable::tryNo[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="315.3" y="357" fill="#E9312F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (4 samples, 0.08%)</title><rect width=".9" height="15" x="275.8" y="181" fill="#EE9E28" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="969.4" y="325" fill="#D9AB29" rx="2" ry="2"/></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;Variable*&gt;, Variable*, Variable&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="238.6" y="373" fill="#F7CD28" rx="2" ry="2"/></g><g><title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="53.6" y="549" fill="#EA2907" rx="2" ry="2"/></g><g><title>Family::findGenVariable (1 samples, 0.02%)</title><rect width=".2" height="15" x="1008.9" y="341" fill="#D47C33" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect width=".3" height="15" x="234.2" y="341" fill="#D52A16" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="246.3" y="245" fill="#EE9803" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1069.3" y="437" fill="#CF1813" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.8" height="15" x="40.4" y="165" fill="#D8580C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (12 samples, 0.23%)</title><rect width="2.7" height="15" x="148.2" y="565" fill="#FE3512" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="991.6" y="293" fill="#F22533" rx="2" ry="2"/></g><g><title>NodePath::split (9 samples, 0.17%)</title><rect width="2.1" height="15" x="995.7" y="357" fill="#F3592E" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator+ (1 samples, 0.02%)</title><rect width=".2" height="15" x="259.9" y="277" fill="#D15807" rx="2" ry="2"/></g><g><title>std::_Head_base&lt;0ul, RepeatBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect width=".2" height="15" x="396.8" y="165" fill="#E1B82D" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="928.8" y="261" fill="#EF1C1D" rx="2" ry="2"/></g><g><title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1036.1" y="197" fill="#F75534" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".2" height="15" x="1007.5" y="373" fill="#F4B723" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (10 samples, 0.19%)</title><rect width="2.3" height="15" x="975.3" y="357" fill="#DEBB15" rx="2" ry="2"/></g><g><title>[libstdc++.so.6.0.24] (6 samples, 0.12%)</title><rect width="1.4" height="15" x="30.4" y="581" fill="#F9C51E" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (101 samples, 1.94%)</title><rect width="22.9" height="15" x="261.7" y="309" fill="#DD5631" rx="2" ry="2"/><text x="264.71" y="319.5">P..</text></g><g><title>_ZNSt12__basic_fileIcEC1EP15pthread_mutex_t@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="30.9" y="549" fill="#EB0D2D" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (302 samples, 5.81%)</title><rect width="68.6" height="15" x="655.9" y="261" fill="#D7862B" rx="2" ry="2"/><text x="658.95" y="271.5">EcfFile..</text></g><g><title>Node::findParentUserVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1033.2" y="341" fill="#F30336" rx="2" ry="2"/></g><g><title>Task::resolveDependencies (90 samples, 1.73%)</title><rect width="20.4" height="15" x="287.8" y="405" fill="#E6671B" rx="2" ry="2"/></g><g><title>malloc@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="673.7" y="181" fill="#F22217" rx="2" ry="2"/></g><g><title>_ZNSaIcEC1Ev@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="859.8" y="181" fill="#E56E2E" rx="2" ry="2"/></g><g><title>IncludeFileCache::lines (1 samples, 0.02%)</title><rect width=".2" height="15" x="293.5" y="261" fill="#E1502E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect width=".4" height="15" x="279.9" y="133" fill="#E0C321" rx="2" ry="2"/></g><g><title>std::__copy_move_a&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="249.4" y="229" fill="#EF612A" rx="2" ry="2"/></g><g><title>[unknown] (56 samples, 1.08%)</title><rect width="12.7" height="15" x="79.9" y="501" fill="#E68B07" rx="2" ry="2"/></g><g><title>SubGenVariables::update_static_generated_variables (1 samples, 0.02%)</title><rect width=".2" height="15" x="1066.8" y="389" fill="#D89317" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (18 samples, 0.35%)</title><rect width="4.1" height="15" x="646.4" y="293" fill="#E48A15" rx="2" ry="2"/></g><g><title>std::__shared_ptr&lt;IncludeFileCache, (1 samples, 0.02%)</title><rect width=".3" height="15" x="304.1" y="133" fill="#FB472F" rx="2" ry="2"/></g><g><title>EcfFile::open_include_file (7 samples, 0.13%)</title><rect width="1.6" height="15" x="296.2" y="229" fill="#ECDC0E" rx="2" ry="2"/></g><g><title>_dl_sysdep_start (2 samples, 0.04%)</title><rect width=".4" height="15" x="1087.2" y="581" fill="#DC2A16" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".2" height="15" x="867.5" y="117" fill="#FCC61C" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (1 samples, 0.02%)</title><rect width=".3" height="15" x="163.4" y="533" fill="#E7CF27" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (2 samples, 0.04%)</title><rect width=".5" height="15" x="973" y="357" fill="#E36410" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="341" fill="#F35018" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate_and_copy&lt;std::move_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="616.9" y="261" fill="#D3B115" rx="2" ry="2"/></g><g><title>[unknown] (11 samples, 0.21%)</title><rect width="2.5" height="15" x="11.1" y="549" fill="#D5AC32" rx="2" ry="2"/></g><g><title>[unknown] (7 samples, 0.13%)</title><rect width="1.5" height="15" x="1083.6" y="565" fill="#CE240D" rx="2" ry="2"/></g><g><title>std::get&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1009.3" y="261" fill="#F60D14" rx="2" ry="2"/></g><g><title>LabelParser::doParse (1 samples, 0.02%)</title><rect width=".2" height="15" x="239" y="453" fill="#E50C30" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="1029.5" y="293" fill="#E33424" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".2" height="15" x="282.4" y="101" fill="#E59036" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (5 samples, 0.10%)</title><rect width="1.1" height="15" x="645.3" y="277" fill="#DA0835" rx="2" ry="2"/></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (31 samples, 0.60%)</title><rect width="7.1" height="15" x="151.6" y="565" fill="#E6D315" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (5 samples, 0.10%)</title><rect width="1.2" height="15" x="1019.3" y="325" fill="#EA9519" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (19 samples, 0.37%)</title><rect width="4.3" height="15" x="1079" y="581" fill="#F09F12" rx="2" ry="2"/></g><g><title>Node::set_state (1 samples, 0.02%)</title><rect width=".2" height="15" x="307.6" y="357" fill="#DFA010" rx="2" ry="2"/></g><g><title>std::__get_helper&lt;0ul, RepeatBase*, std::default_delete&lt;RepeatBase&gt; &gt; (6 samples, 0.12%)</title><rect width="1.4" height="15" x="534.5" y="245" fill="#EE1E13" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="665.3" y="229" fill="#E35F26" rx="2" ry="2"/></g><g><title>Node::findParentVariableValue (1 samples, 0.02%)</title><rect width=".2" height="15" x="1070.4" y="405" fill="#E1092B" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".4" height="15" x="105.6" y="325" fill="#D8072E" rx="2" ry="2"/></g><g><title>Family::begin (1 samples, 0.02%)</title><rect width=".2" height="15" x="233.6" y="437" fill="#D0B218" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (36 samples, 0.69%)</title><rect width="8.2" height="15" x="698.8" y="229" fill="#F4E010" rx="2" ry="2"/></g><g><title>std::unique_ptr&lt;RepeatBase, std::default_delete&lt;RepeatBase&gt; &gt;::get (1 samples, 0.02%)</title><rect width=".3" height="15" x="991.6" y="325" fill="#D85605" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1056.1" y="277" fill="#D8BA17" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1085.4" y="533" fill="#F38C33" rx="2" ry="2"/></g><g><title>[unknown] (23 samples, 0.44%)</title><rect width="5.2" height="15" x="37" y="405" fill="#DE0C1A" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (31 samples, 0.60%)</title><rect width="7.1" height="15" x="585.8" y="341" fill="#F1E11F" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3 samples, 0.06%)</title><rect width=".7" height="15" x="985" y="341" fill="#E32D0C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.04%)</title><rect width=".5" height="15" x="288.7" y="309" fill="#FDDC34" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect width=".2" height="15" x="1063.8" y="373" fill="#D50C1E" rx="2" ry="2"/></g><g><title>std::vector&lt;std::shared_ptr&lt;IncludeFileCache&gt;, std::allocator&lt;std::shared_ptr&lt;IncludeFileCache&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".2" height="15" x="294.4" y="261" fill="#D65722" rx="2" ry="2"/></g><g><title>ecf::File::backwardSearch (18 samples, 0.35%)</title><rect width="4" height="15" x="995.3" y="373" fill="#EEAD08" rx="2" ry="2"/></g><g><title>Submittable::locatedEcfFile (19 samples, 0.37%)</title><rect width="4.3" height="15" x="1064.3" y="421" fill="#FA1F08" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect width=".2" height="15" x="877.7" y="165" fill="#E1AD0C" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (64 samples, 1.23%)</title><rect width="14.5" height="15" x="450.1" y="309" fill="#E5B725" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (1 samples, 0.02%)</title><rect width=".2" height="15" x="281" y="117" fill="#F16D32" rx="2" ry="2"/></g><g><title>ecf::theComputedNodeState&lt;std::shared_ptr&lt;Node&gt; &gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="973.2" y="309" fill="#FE8335" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="604.4" y="341" fill="#E34A02" rx="2" ry="2"/></g><g><title>EcfFile::remove_nopp_end_tokens (8 samples, 0.15%)</title><rect width="1.8" height="15" x="1006.4" y="405" fill="#DEBB1A" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="944.2" y="229" fill="#F25708" rx="2" ry="2"/></g><g><title>PreProcessor::getIncludedFilePath (14 samples, 0.27%)</title><rect width="3.1" height="15" x="1030.7" y="357" fill="#E45920" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="247.4" y="261" fill="#D64514" rx="2" ry="2"/></g><g><title>__gnu_cxx::new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1049.1" y="181" fill="#E5C70E" rx="2" ry="2"/></g><g><title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.02%)</title><rect width=".3" height="15" x="803.2" y="197" fill="#FBD721" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect width=".5" height="15" x="999.3" y="373" fill="#E2800D" rx="2" ry="2"/></g><g><title>std::find_first_of&lt;char const*, char const*&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="855" y="181" fill="#EF7134" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (12 samples, 0.23%)</title><rect width="2.7" height="15" x="1168.2" y="581" fill="#ED290E" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm@plt (7 samples, 0.13%)</title><rect width="1.6" height="15" x="938.7" y="373" fill="#EF7B33" rx="2" ry="2"/></g><g><title>[unknown] (7 samples, 0.13%)</title><rect width="1.6" height="15" x="47" y="437" fill="#E10930" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (22 samples, 0.42%)</title><rect width="5" height="15" x="277.6" y="197" fill="#D0D32A" rx="2" ry="2"/></g><g><title>std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt;::size (4 samples, 0.08%)</title><rect width=".9" height="15" x="529.5" y="309" fill="#F16B2F" rx="2" ry="2"/></g><g><title>__gnu_cxx::operator!=&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="316" y="309" fill="#FC6135" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".3" height="15" x="398.3" y="293" fill="#E35E1C" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::emplace_back&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="283.7" y="213" fill="#D56D2E" rx="2" ry="2"/></g><g><title>[unknown] (2 samples, 0.04%)</title><rect width=".5" height="15" x="1086.7" y="373" fill="#FCBA32" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="982.1" y="325" fill="#F3D707" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="1045" y="261" fill="#DE242F" rx="2" ry="2"/></g><g><title>IncludeFileCache::path[abi:cxx11] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1029.8" y="325" fill="#F77329" rx="2" ry="2"/></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect width=".2" height="15" x="303.7" y="101" fill="#DBDF02" rx="2" ry="2"/></g><g><title>Node::requeueOrSetMostSignificantStateUpNodeTree (2 samples, 0.04%)</title><rect width=".5" height="15" x="286.4" y="293" fill="#F20204" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (10 samples, 0.19%)</title><rect width="2.3" height="15" x="317.1" y="405" fill="#CF4229" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.06%)</title><rect width=".7" height="15" x="281.9" y="117" fill="#CDDB31" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::erase (6 samples, 0.12%)</title><rect width="1.4" height="15" x="249.4" y="293" fill="#F4C811" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".3" height="15" x="257.8" y="229" fill="#FA5E10" rx="2" ry="2"/></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="311.4" y="309" fill="#ED151B" rx="2" ry="2"/></g><g><title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="344.1" y="341" fill="#F78329" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect width=".2" height="15" x="631.2" y="277" fill="#F9DE22" rx="2" ry="2"/></g><g><title>[unknown] (12 samples, 0.23%)</title><rect width="2.7" height="15" x="45.9" y="517" fill="#EEE011" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect width=".2" height="15" x="996.9" y="277" fill="#FCD528" rx="2" ry="2"/></g><g><title>__fxstat64 (4 samples, 0.08%)</title><rect width=".9" height="15" x="232.4" y="581" fill="#F57001" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.04%)</title><rect width=".4" height="15" x="830.3" y="133" fill="#E89C2D" rx="2" ry="2"/></g><g><title>__memcmp_sse4_1 (28 samples, 0.54%)</title><rect width="6.3" height="15" x="504.8" y="293" fill="#F27F13" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect width=".2" height="15" x="830.7" y="133" fill="#E7CE2A" rx="2" ry="2"/></g><g><title>EcfFile::extract_ecfmicro (1 samples, 0.02%)</title><rect width=".3" height="15" x="1050.6" y="229" fill="#DF2310" rx="2" ry="2"/></g><g><title>EcfFile::create_job[abi:cxx11] (86 samples, 1.65%)</title><rect width="19.6" height="15" x="288" y="357" fill="#EC8202" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::resize (6 samples, 0.12%)</title><rect width="1.4" height="15" x="1062" y="389" fill="#E38E04" rx="2" ry="2"/></g><g><title>Node::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="555.6" y="309" fill="#D0811F" rx="2" ry="2"/></g><g><title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="277.1" y="117" fill="#DA8120" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".2" height="15" x="158.2" y="533" fill="#E36213" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt (1 samples, 0.02%)</title><rect width=".3" height="15" x="315.7" y="309" fill="#F0251E" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="1084.9" y="437" fill="#E64C29" rx="2" ry="2"/></g><g><title>[unknown] (1 samples, 0.02%)</title><rect width=".2" height="15" x="167.5" y="549" fill="#F16E2F" rx="2" ry="2"/></g><g><title>std::__shared_ptr_access&lt;IncludeFileCache, (13 samples, 0.25%)</title><rect width="2.9" height="15" x="625.1" y="277" fill="#E01F31" rx="2" ry="2"/></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, long&gt; (24 samples, 0.46%)</title><rect width="5.5" height="15" x="802.1" y="229" fill="#CF1901" rx="2" ry="2"/></g><g><title>std::operator==&lt;char&gt; (136 samples, 2.62%)</title><rect width="30.9" height="15" x="482.3" y="309" fill="#F97B2F" rx="2" ry="2"/><text x="485.32" y="319.5">st..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (29 samples, 0.56%)</title><rect width="6.6" height="15" x="911.3" y="277" fill="#EAC319" rx="2" ry="2"/></g><g><title>[unknown] (8 samples, 0.15%)</title><rect width="1.9" height="15" x="229.2" y="485" fill="#F33224" rx="2" ry="2"/></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="996.4" y="277" fill="#D77701" rx="2" ry="2"/></g><g><title>Variable::name[abi:cxx11] (1 samples, 0.02%)</title><rect width=".3" height="15" x="560.8" y="293" fill="#FE8506" rx="2" ry="2"/></g><g><title>_IO_default_xsputn (8 samples, 0.15%)</title><rect width="1.8" height="15" x="180.9" y="581" fill="#D2C824" rx="2" ry="2"/></g><g><title>SuiteGenVariables::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="246" y="229" fill="#DFB70B" rx="2" ry="2"/></g><g><title>_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_@plt (1 samples, 0.02%)</title><rect width=".2" height="15" x="281.9" y="101" fill="#D3961C" rx="2" ry="2"/></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;*&gt; (4 samples, 0.08%)</title><rect width=".9" height="15" x="918.8" y="213" fill="#D31F20" rx="2" ry="2"/></g><g><title>SubGenVariables::update_generated_variables (2 samples, 0.04%)</title><rect width=".5" height="15" x="1002.3" y="421" fill="#F86B14" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char const*&amp;, long&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="865.2" y="101" fill="#D83434" rx="2" ry="2"/></g><g><title>Node::findGenVariableValue (2 samples, 0.04%)</title><rect width=".5" height="15" x="292.1" y="293" fill="#FA4C2F" rx="2" ry="2"/></g><g><title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (4 samples, 0.08%)</title><rect width=".9" height="15" x="602.2" y="357" fill="#E80003" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.04%)</title><rect width=".5" height="15" x="42.2" y="533" fill="#F9BC33" rx="2" ry="2"/></g><g><title>Node::variable_substitution (2 samples, 0.04%)</title><rect width=".5" height="15" x="246" y="293" fill="#D0DD0C" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, int&gt; (3 samples, 0.06%)</title><rect width=".7" height="15" x="934" y="293" fill="#E4802D" rx="2" ry="2"/></g><g><title>_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv@plt (2 samples, 0.04%)</title><rect width=".4" height="15" x="747.2" y="245" fill="#EC1612" rx="2" ry="2"/></g><g><title>std::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="616.9" y="181" fill="#D3CF27" rx="2" ry="2"/></g><g><title>boost::date_time::time_duration&lt;boost::posix_time::time_duration, boost::date_time::time_resolution_traits&lt;boost::date_time::time_resolution_traits_adapted64_impl, (1 samples, 0.02%)</title><rect width=".3" height="15" x="1000.9" y="309" fill="#D17112" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess_line (316 samples, 6.08%)</title><rect width="71.7" height="15" x="812.6" y="261" fill="#EF3326" rx="2" ry="2"/><text x="815.55" y="271.5">PreProce..</text></g><g><title>__memcpy_avx_unaligned (4 samples, 0.08%)</title><rect width=".9" height="15" x="672.3" y="181" fill="#F97F29" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (1 samples, 0.02%)</title><rect width=".2" height="15" x="879.3" y="229" fill="#E79410" rx="2" ry="2"/></g><g><title>Node::findParentUserVariableValue (2 samples, 0.04%)</title><rect width=".5" height="15" x="1046.3" y="293" fill="#F9B817" rx="2" ry="2"/></g><g><title>[unknown] (56 samples, 1.08%)</title><rect width="12.7" height="15" x="79.9" y="517" fill="#EF400E" rx="2" ry="2"/></g><g><title>PreProcessor::preProcess (1 samples, 0.02%)</title><rect width=".2" height="15" x="1050.9" y="213" fill="#F8201F" rx="2" ry="2"/></g><g><title>[unknown] (3 samples, 0.06%)</title><rect width=".7" height="15" x="163.4" y="549" fill="#DD7113" rx="2" ry="2"/></g><g><title>std::_Head_base&lt;0ul, RepeatBase*, false&gt;::_M_head (1 samples, 0.02%)</title><rect width=".2" height="15" x="535.7" y="213" fill="#E33C2D" rx="2" ry="2"/></g><g><title>boost::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::basic_string_view (1 samples, 0.02%)</title><rect width=".2" height="15" x="920.4" y="293" fill="#FDD22B" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".3" height="15" x="878.8" y="181" fill="#EFCF29" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::operator++ (1 samples, 0.02%)</title><rect width=".3" height="15" x="314.1" y="309" fill="#D99A1D" rx="2" ry="2"/></g><g><title>std::__shared_ptr&lt;IncludeFileCache, (2 samples, 0.04%)</title><rect width=".4" height="15" x="833.9" y="165" fill="#E51F18" rx="2" ry="2"/></g><g><title>[perf_job_gen] (1 samples, 0.02%)</title><rect width=".2" height="15" x="31.8" y="581" fill="#F54617" rx="2" ry="2"/></g><g><title>free (1 samples, 0.02%)</title><rect width=".2" height="15" x="1027.5" y="389" fill="#FBD426" rx="2" ry="2"/></g><g><title>Variable::EMPTY (1 samples, 0.02%)</title><rect width=".3" height="15" x="313.2" y="293" fill="#D55715" rx="2" ry="2"/></g><g><title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect width=".2" height="15" x="576.3" y="309" fill="#D84C05" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (3 samples, 0.06%)</title><rect width=".7" height="15" x="354.3" y="357" fill="#E79032" rx="2" ry="2"/></g><g><title>Submittable::findGenVariable (1 samples, 0.02%)</title><rect width=".3" height="15" x="1002.5" y="341" fill="#F19F17" rx="2" ry="2"/></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="305.1" y="165" fill="#F03B2D" rx="2" ry="2"/></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect width=".2" height="15" x="283.5" y="197" fill="#F8A40F" rx="2" ry="2"/></g><g><title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect width=".3" height="15" x="864.5" y="149" fill="#D49A21" rx="2" ry="2"/></g><g><title>__gnu_cxx::__normal_iterator&lt;Variable const*, std::vector&lt;Variable, std::allocator&lt;Variable&gt; &gt; &gt;::operator* (6 samples, 0.12%)</title><rect width="1.4" height="15" x="572.2" y="309" fill="#FB0618" rx="2" ry="2"/></g></g></svg>